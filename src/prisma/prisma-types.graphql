# source: http://localhost:4466
# timestamp: Wed Dec 18 2019 01:27:23 GMT+0700 (Western Indonesia Time)

type AggregateApplication {
  count: Int!
}

type AggregateCase {
  count: Int!
}

type AggregateCaseClassification {
  count: Int!
}

type AggregateCaseConsultation {
  count: Int!
}

type AggregateCaseConsultationApp {
  count: Int!
}

type AggregateCaseDocument {
  count: Int!
}

type AggregateCaseIssue {
  count: Int!
}

type AggregateCaseKorban {
  count: Int!
}

type AggregateCasePelaku {
  count: Int!
}

type AggregateCasePk {
  count: Int!
}

type AggregateCaseProgress {
  count: Int!
}

type AggregateCaseProgressActivity {
  count: Int!
}

type AggregateCaseProgressActivityLit {
  count: Int!
}

type AggregateCaseProgressActivityNonlit {
  count: Int!
}

type AggregateCaseReferral {
  count: Int!
}

type AggregateCaseTransfer {
  count: Int!
}

type AggregateCaseTransferReferral {
  count: Int!
}

type AggregateCaseViolatedRight {
  count: Int!
}

type AggregateClient {
  count: Int!
}

type AggregateDaftarPengacara {
  count: Int!
}

type AggregateDataDict {
  count: Int!
}

type AggregateDataDictLocal {
  count: Int!
}

type AggregateLogRequest {
  count: Int!
}

type AggregateLogRequestApp {
  count: Int!
}

type AggregateMtVocab {
  count: Int!
}

type AggregateMtVocabGroup {
  count: Int!
}

type AggregateNetwork {
  count: Int!
}

type AggregatePerson {
  count: Int!
}

type AggregatePersonDocument {
  count: Int!
}

type AggregateRole {
  count: Int!
}

type AggregateRolesType {
  count: Int!
}

type AggregateSrcAnalisa {
  count: Int!
}

type AggregateSrcOperator {
  count: Int!
}

type AggregateSrcTemplate {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateUserProfile {
  count: Int!
}

type Application {
  id: Int!
  createdAt: DateTime!
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean!
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean!
  statusPerwakilan: String
  updatedAt: DateTime!
  updatedBy: String
  wakilId: Person
  waktuPernahKlien: String
  whyLbh: String
  case: Case
  clients(where: ClientWhereInput, orderBy: ClientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Client!]
  tahap: String
  status: String
}

"""A connection to a list of items."""
type ApplicationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ApplicationEdge]!
  aggregate: AggregateApplication!
}

input ApplicationCreateInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean!
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean!
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  wakilId: PersonCreateOneWithoutApplicationsInput
  case: CaseCreateOneWithoutApplicationInput
  clients: ClientCreateManyWithoutApplicationIdInput
}

input ApplicationCreateManyWithoutWakilIdInput {
  create: [ApplicationCreateWithoutWakilIdInput!]
  connect: [ApplicationWhereUniqueInput!]
}

input ApplicationCreateOneInput {
  create: ApplicationCreateInput
  connect: ApplicationWhereUniqueInput
}

input ApplicationCreateOneWithoutCaseInput {
  create: ApplicationCreateWithoutCaseInput
  connect: ApplicationWhereUniqueInput
}

input ApplicationCreateOneWithoutClientsInput {
  create: ApplicationCreateWithoutClientsInput
  connect: ApplicationWhereUniqueInput
}

input ApplicationCreateWithoutCaseInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean!
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean!
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  wakilId: PersonCreateOneWithoutApplicationsInput
  clients: ClientCreateManyWithoutApplicationIdInput
}

input ApplicationCreateWithoutClientsInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean!
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean!
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  wakilId: PersonCreateOneWithoutApplicationsInput
  case: CaseCreateOneWithoutApplicationInput
}

input ApplicationCreateWithoutWakilIdInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean!
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean!
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  case: CaseCreateOneWithoutApplicationInput
  clients: ClientCreateManyWithoutApplicationIdInput
}

"""An edge in a connection."""
type ApplicationEdge {
  """The item at the end of the edge."""
  node: Application!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ApplicationOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  dudukPerara_ASC
  dudukPerara_DESC
  infoLbh_ASC
  infoLbh_DESC
  jumlahPenerimaManfaat_ASC
  jumlahPenerimaManfaat_DESC
  konfirmasiData_ASC
  konfirmasiData_DESC
  noReg_ASC
  noReg_DESC
  pernahKlien_ASC
  pernahKlien_DESC
  pernahPpLain_ASC
  pernahPpLain_DESC
  ppLain_ASC
  ppLain_DESC
  regDate_ASC
  regDate_DESC
  relasiWakilClient_ASC
  relasiWakilClient_DESC
  setujuAdvokasi_ASC
  setujuAdvokasi_DESC
  statusPerwakilan_ASC
  statusPerwakilan_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
  waktuPernahKlien_ASC
  waktuPernahKlien_DESC
  whyLbh_ASC
  whyLbh_DESC
  tahap_ASC
  tahap_DESC
  status_ASC
  status_DESC
}

type ApplicationPreviousValues {
  id: Int!
  createdAt: DateTime!
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean!
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean!
  statusPerwakilan: String
  updatedAt: DateTime!
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
}

input ApplicationScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ApplicationScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ApplicationScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ApplicationScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  dudukPerara: String

  """All values that are not equal to given value."""
  dudukPerara_not: String

  """All values that are contained in given list."""
  dudukPerara_in: [String!]

  """All values that are not contained in given list."""
  dudukPerara_not_in: [String!]

  """All values less than the given value."""
  dudukPerara_lt: String

  """All values less than or equal the given value."""
  dudukPerara_lte: String

  """All values greater than the given value."""
  dudukPerara_gt: String

  """All values greater than or equal the given value."""
  dudukPerara_gte: String

  """All values containing the given string."""
  dudukPerara_contains: String

  """All values not containing the given string."""
  dudukPerara_not_contains: String

  """All values starting with the given string."""
  dudukPerara_starts_with: String

  """All values not starting with the given string."""
  dudukPerara_not_starts_with: String

  """All values ending with the given string."""
  dudukPerara_ends_with: String

  """All values not ending with the given string."""
  dudukPerara_not_ends_with: String
  infoLbh: String

  """All values that are not equal to given value."""
  infoLbh_not: String

  """All values that are contained in given list."""
  infoLbh_in: [String!]

  """All values that are not contained in given list."""
  infoLbh_not_in: [String!]

  """All values less than the given value."""
  infoLbh_lt: String

  """All values less than or equal the given value."""
  infoLbh_lte: String

  """All values greater than the given value."""
  infoLbh_gt: String

  """All values greater than or equal the given value."""
  infoLbh_gte: String

  """All values containing the given string."""
  infoLbh_contains: String

  """All values not containing the given string."""
  infoLbh_not_contains: String

  """All values starting with the given string."""
  infoLbh_starts_with: String

  """All values not starting with the given string."""
  infoLbh_not_starts_with: String

  """All values ending with the given string."""
  infoLbh_ends_with: String

  """All values not ending with the given string."""
  infoLbh_not_ends_with: String
  jumlahPenerimaManfaat: Int

  """All values that are not equal to given value."""
  jumlahPenerimaManfaat_not: Int

  """All values that are contained in given list."""
  jumlahPenerimaManfaat_in: [Int!]

  """All values that are not contained in given list."""
  jumlahPenerimaManfaat_not_in: [Int!]

  """All values less than the given value."""
  jumlahPenerimaManfaat_lt: Int

  """All values less than or equal the given value."""
  jumlahPenerimaManfaat_lte: Int

  """All values greater than the given value."""
  jumlahPenerimaManfaat_gt: Int

  """All values greater than or equal the given value."""
  jumlahPenerimaManfaat_gte: Int
  konfirmasiData: Boolean

  """All values that are not equal to given value."""
  konfirmasiData_not: Boolean
  noReg: String

  """All values that are not equal to given value."""
  noReg_not: String

  """All values that are contained in given list."""
  noReg_in: [String!]

  """All values that are not contained in given list."""
  noReg_not_in: [String!]

  """All values less than the given value."""
  noReg_lt: String

  """All values less than or equal the given value."""
  noReg_lte: String

  """All values greater than the given value."""
  noReg_gt: String

  """All values greater than or equal the given value."""
  noReg_gte: String

  """All values containing the given string."""
  noReg_contains: String

  """All values not containing the given string."""
  noReg_not_contains: String

  """All values starting with the given string."""
  noReg_starts_with: String

  """All values not starting with the given string."""
  noReg_not_starts_with: String

  """All values ending with the given string."""
  noReg_ends_with: String

  """All values not ending with the given string."""
  noReg_not_ends_with: String
  pernahKlien: String

  """All values that are not equal to given value."""
  pernahKlien_not: String

  """All values that are contained in given list."""
  pernahKlien_in: [String!]

  """All values that are not contained in given list."""
  pernahKlien_not_in: [String!]

  """All values less than the given value."""
  pernahKlien_lt: String

  """All values less than or equal the given value."""
  pernahKlien_lte: String

  """All values greater than the given value."""
  pernahKlien_gt: String

  """All values greater than or equal the given value."""
  pernahKlien_gte: String

  """All values containing the given string."""
  pernahKlien_contains: String

  """All values not containing the given string."""
  pernahKlien_not_contains: String

  """All values starting with the given string."""
  pernahKlien_starts_with: String

  """All values not starting with the given string."""
  pernahKlien_not_starts_with: String

  """All values ending with the given string."""
  pernahKlien_ends_with: String

  """All values not ending with the given string."""
  pernahKlien_not_ends_with: String
  pernahPpLain: String

  """All values that are not equal to given value."""
  pernahPpLain_not: String

  """All values that are contained in given list."""
  pernahPpLain_in: [String!]

  """All values that are not contained in given list."""
  pernahPpLain_not_in: [String!]

  """All values less than the given value."""
  pernahPpLain_lt: String

  """All values less than or equal the given value."""
  pernahPpLain_lte: String

  """All values greater than the given value."""
  pernahPpLain_gt: String

  """All values greater than or equal the given value."""
  pernahPpLain_gte: String

  """All values containing the given string."""
  pernahPpLain_contains: String

  """All values not containing the given string."""
  pernahPpLain_not_contains: String

  """All values starting with the given string."""
  pernahPpLain_starts_with: String

  """All values not starting with the given string."""
  pernahPpLain_not_starts_with: String

  """All values ending with the given string."""
  pernahPpLain_ends_with: String

  """All values not ending with the given string."""
  pernahPpLain_not_ends_with: String
  ppLain: String

  """All values that are not equal to given value."""
  ppLain_not: String

  """All values that are contained in given list."""
  ppLain_in: [String!]

  """All values that are not contained in given list."""
  ppLain_not_in: [String!]

  """All values less than the given value."""
  ppLain_lt: String

  """All values less than or equal the given value."""
  ppLain_lte: String

  """All values greater than the given value."""
  ppLain_gt: String

  """All values greater than or equal the given value."""
  ppLain_gte: String

  """All values containing the given string."""
  ppLain_contains: String

  """All values not containing the given string."""
  ppLain_not_contains: String

  """All values starting with the given string."""
  ppLain_starts_with: String

  """All values not starting with the given string."""
  ppLain_not_starts_with: String

  """All values ending with the given string."""
  ppLain_ends_with: String

  """All values not ending with the given string."""
  ppLain_not_ends_with: String
  regDate: DateTime

  """All values that are not equal to given value."""
  regDate_not: DateTime

  """All values that are contained in given list."""
  regDate_in: [DateTime!]

  """All values that are not contained in given list."""
  regDate_not_in: [DateTime!]

  """All values less than the given value."""
  regDate_lt: DateTime

  """All values less than or equal the given value."""
  regDate_lte: DateTime

  """All values greater than the given value."""
  regDate_gt: DateTime

  """All values greater than or equal the given value."""
  regDate_gte: DateTime
  relasiWakilClient: String

  """All values that are not equal to given value."""
  relasiWakilClient_not: String

  """All values that are contained in given list."""
  relasiWakilClient_in: [String!]

  """All values that are not contained in given list."""
  relasiWakilClient_not_in: [String!]

  """All values less than the given value."""
  relasiWakilClient_lt: String

  """All values less than or equal the given value."""
  relasiWakilClient_lte: String

  """All values greater than the given value."""
  relasiWakilClient_gt: String

  """All values greater than or equal the given value."""
  relasiWakilClient_gte: String

  """All values containing the given string."""
  relasiWakilClient_contains: String

  """All values not containing the given string."""
  relasiWakilClient_not_contains: String

  """All values starting with the given string."""
  relasiWakilClient_starts_with: String

  """All values not starting with the given string."""
  relasiWakilClient_not_starts_with: String

  """All values ending with the given string."""
  relasiWakilClient_ends_with: String

  """All values not ending with the given string."""
  relasiWakilClient_not_ends_with: String
  setujuAdvokasi: Boolean

  """All values that are not equal to given value."""
  setujuAdvokasi_not: Boolean
  statusPerwakilan: String

  """All values that are not equal to given value."""
  statusPerwakilan_not: String

  """All values that are contained in given list."""
  statusPerwakilan_in: [String!]

  """All values that are not contained in given list."""
  statusPerwakilan_not_in: [String!]

  """All values less than the given value."""
  statusPerwakilan_lt: String

  """All values less than or equal the given value."""
  statusPerwakilan_lte: String

  """All values greater than the given value."""
  statusPerwakilan_gt: String

  """All values greater than or equal the given value."""
  statusPerwakilan_gte: String

  """All values containing the given string."""
  statusPerwakilan_contains: String

  """All values not containing the given string."""
  statusPerwakilan_not_contains: String

  """All values starting with the given string."""
  statusPerwakilan_starts_with: String

  """All values not starting with the given string."""
  statusPerwakilan_not_starts_with: String

  """All values ending with the given string."""
  statusPerwakilan_ends_with: String

  """All values not ending with the given string."""
  statusPerwakilan_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  waktuPernahKlien: String

  """All values that are not equal to given value."""
  waktuPernahKlien_not: String

  """All values that are contained in given list."""
  waktuPernahKlien_in: [String!]

  """All values that are not contained in given list."""
  waktuPernahKlien_not_in: [String!]

  """All values less than the given value."""
  waktuPernahKlien_lt: String

  """All values less than or equal the given value."""
  waktuPernahKlien_lte: String

  """All values greater than the given value."""
  waktuPernahKlien_gt: String

  """All values greater than or equal the given value."""
  waktuPernahKlien_gte: String

  """All values containing the given string."""
  waktuPernahKlien_contains: String

  """All values not containing the given string."""
  waktuPernahKlien_not_contains: String

  """All values starting with the given string."""
  waktuPernahKlien_starts_with: String

  """All values not starting with the given string."""
  waktuPernahKlien_not_starts_with: String

  """All values ending with the given string."""
  waktuPernahKlien_ends_with: String

  """All values not ending with the given string."""
  waktuPernahKlien_not_ends_with: String
  whyLbh: String

  """All values that are not equal to given value."""
  whyLbh_not: String

  """All values that are contained in given list."""
  whyLbh_in: [String!]

  """All values that are not contained in given list."""
  whyLbh_not_in: [String!]

  """All values less than the given value."""
  whyLbh_lt: String

  """All values less than or equal the given value."""
  whyLbh_lte: String

  """All values greater than the given value."""
  whyLbh_gt: String

  """All values greater than or equal the given value."""
  whyLbh_gte: String

  """All values containing the given string."""
  whyLbh_contains: String

  """All values not containing the given string."""
  whyLbh_not_contains: String

  """All values starting with the given string."""
  whyLbh_starts_with: String

  """All values not starting with the given string."""
  whyLbh_not_starts_with: String

  """All values ending with the given string."""
  whyLbh_ends_with: String

  """All values not ending with the given string."""
  whyLbh_not_ends_with: String
  tahap: String

  """All values that are not equal to given value."""
  tahap_not: String

  """All values that are contained in given list."""
  tahap_in: [String!]

  """All values that are not contained in given list."""
  tahap_not_in: [String!]

  """All values less than the given value."""
  tahap_lt: String

  """All values less than or equal the given value."""
  tahap_lte: String

  """All values greater than the given value."""
  tahap_gt: String

  """All values greater than or equal the given value."""
  tahap_gte: String

  """All values containing the given string."""
  tahap_contains: String

  """All values not containing the given string."""
  tahap_not_contains: String

  """All values starting with the given string."""
  tahap_starts_with: String

  """All values not starting with the given string."""
  tahap_not_starts_with: String

  """All values ending with the given string."""
  tahap_ends_with: String

  """All values not ending with the given string."""
  tahap_not_ends_with: String
  status: String

  """All values that are not equal to given value."""
  status_not: String

  """All values that are contained in given list."""
  status_in: [String!]

  """All values that are not contained in given list."""
  status_not_in: [String!]

  """All values less than the given value."""
  status_lt: String

  """All values less than or equal the given value."""
  status_lte: String

  """All values greater than the given value."""
  status_gt: String

  """All values greater than or equal the given value."""
  status_gte: String

  """All values containing the given string."""
  status_contains: String

  """All values not containing the given string."""
  status_not_contains: String

  """All values starting with the given string."""
  status_starts_with: String

  """All values not starting with the given string."""
  status_not_starts_with: String

  """All values ending with the given string."""
  status_ends_with: String

  """All values not ending with the given string."""
  status_not_ends_with: String
}

type ApplicationSubscriptionPayload {
  mutation: MutationType!
  node: Application
  updatedFields: [String!]
  previousValues: ApplicationPreviousValues
}

input ApplicationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ApplicationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ApplicationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ApplicationSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ApplicationWhereInput
}

input ApplicationUpdateDataInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  wakilId: PersonUpdateOneWithoutApplicationsInput
  case: CaseUpdateOneWithoutApplicationInput
  clients: ClientUpdateManyWithoutApplicationIdInput
}

input ApplicationUpdateInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  wakilId: PersonUpdateOneWithoutApplicationsInput
  case: CaseUpdateOneWithoutApplicationInput
  clients: ClientUpdateManyWithoutApplicationIdInput
}

input ApplicationUpdateManyDataInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
}

input ApplicationUpdateManyMutationInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
}

input ApplicationUpdateManyWithoutWakilIdInput {
  create: [ApplicationCreateWithoutWakilIdInput!]
  connect: [ApplicationWhereUniqueInput!]
  set: [ApplicationWhereUniqueInput!]
  disconnect: [ApplicationWhereUniqueInput!]
  delete: [ApplicationWhereUniqueInput!]
  update: [ApplicationUpdateWithWhereUniqueWithoutWakilIdInput!]
  updateMany: [ApplicationUpdateManyWithWhereNestedInput!]
  deleteMany: [ApplicationScalarWhereInput!]
  upsert: [ApplicationUpsertWithWhereUniqueWithoutWakilIdInput!]
}

input ApplicationUpdateManyWithWhereNestedInput {
  where: ApplicationScalarWhereInput!
  data: ApplicationUpdateManyDataInput!
}

input ApplicationUpdateOneInput {
  create: ApplicationCreateInput
  connect: ApplicationWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ApplicationUpdateDataInput
  upsert: ApplicationUpsertNestedInput
}

input ApplicationUpdateOneRequiredWithoutCaseInput {
  create: ApplicationCreateWithoutCaseInput
  connect: ApplicationWhereUniqueInput
  update: ApplicationUpdateWithoutCaseDataInput
  upsert: ApplicationUpsertWithoutCaseInput
}

input ApplicationUpdateOneRequiredWithoutClientsInput {
  create: ApplicationCreateWithoutClientsInput
  connect: ApplicationWhereUniqueInput
  update: ApplicationUpdateWithoutClientsDataInput
  upsert: ApplicationUpsertWithoutClientsInput
}

input ApplicationUpdateWithoutCaseDataInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  wakilId: PersonUpdateOneWithoutApplicationsInput
  clients: ClientUpdateManyWithoutApplicationIdInput
}

input ApplicationUpdateWithoutClientsDataInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  wakilId: PersonUpdateOneWithoutApplicationsInput
  case: CaseUpdateOneWithoutApplicationInput
}

input ApplicationUpdateWithoutWakilIdDataInput {
  createdBy: String
  dudukPerara: String
  infoLbh: String
  jumlahPenerimaManfaat: Int
  konfirmasiData: Boolean
  noReg: String
  pernahKlien: String
  pernahPpLain: String
  ppLain: String
  regDate: DateTime
  relasiWakilClient: String
  setujuAdvokasi: Boolean
  statusPerwakilan: String
  updatedBy: String
  waktuPernahKlien: String
  whyLbh: String
  tahap: String
  status: String
  case: CaseUpdateOneWithoutApplicationInput
  clients: ClientUpdateManyWithoutApplicationIdInput
}

input ApplicationUpdateWithWhereUniqueWithoutWakilIdInput {
  where: ApplicationWhereUniqueInput!
  data: ApplicationUpdateWithoutWakilIdDataInput!
}

input ApplicationUpsertNestedInput {
  update: ApplicationUpdateDataInput!
  create: ApplicationCreateInput!
}

input ApplicationUpsertWithoutCaseInput {
  update: ApplicationUpdateWithoutCaseDataInput!
  create: ApplicationCreateWithoutCaseInput!
}

input ApplicationUpsertWithoutClientsInput {
  update: ApplicationUpdateWithoutClientsDataInput!
  create: ApplicationCreateWithoutClientsInput!
}

input ApplicationUpsertWithWhereUniqueWithoutWakilIdInput {
  where: ApplicationWhereUniqueInput!
  update: ApplicationUpdateWithoutWakilIdDataInput!
  create: ApplicationCreateWithoutWakilIdInput!
}

input ApplicationWhereInput {
  """Logical AND on all given filters."""
  AND: [ApplicationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ApplicationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ApplicationWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  dudukPerara: String

  """All values that are not equal to given value."""
  dudukPerara_not: String

  """All values that are contained in given list."""
  dudukPerara_in: [String!]

  """All values that are not contained in given list."""
  dudukPerara_not_in: [String!]

  """All values less than the given value."""
  dudukPerara_lt: String

  """All values less than or equal the given value."""
  dudukPerara_lte: String

  """All values greater than the given value."""
  dudukPerara_gt: String

  """All values greater than or equal the given value."""
  dudukPerara_gte: String

  """All values containing the given string."""
  dudukPerara_contains: String

  """All values not containing the given string."""
  dudukPerara_not_contains: String

  """All values starting with the given string."""
  dudukPerara_starts_with: String

  """All values not starting with the given string."""
  dudukPerara_not_starts_with: String

  """All values ending with the given string."""
  dudukPerara_ends_with: String

  """All values not ending with the given string."""
  dudukPerara_not_ends_with: String
  infoLbh: String

  """All values that are not equal to given value."""
  infoLbh_not: String

  """All values that are contained in given list."""
  infoLbh_in: [String!]

  """All values that are not contained in given list."""
  infoLbh_not_in: [String!]

  """All values less than the given value."""
  infoLbh_lt: String

  """All values less than or equal the given value."""
  infoLbh_lte: String

  """All values greater than the given value."""
  infoLbh_gt: String

  """All values greater than or equal the given value."""
  infoLbh_gte: String

  """All values containing the given string."""
  infoLbh_contains: String

  """All values not containing the given string."""
  infoLbh_not_contains: String

  """All values starting with the given string."""
  infoLbh_starts_with: String

  """All values not starting with the given string."""
  infoLbh_not_starts_with: String

  """All values ending with the given string."""
  infoLbh_ends_with: String

  """All values not ending with the given string."""
  infoLbh_not_ends_with: String
  jumlahPenerimaManfaat: Int

  """All values that are not equal to given value."""
  jumlahPenerimaManfaat_not: Int

  """All values that are contained in given list."""
  jumlahPenerimaManfaat_in: [Int!]

  """All values that are not contained in given list."""
  jumlahPenerimaManfaat_not_in: [Int!]

  """All values less than the given value."""
  jumlahPenerimaManfaat_lt: Int

  """All values less than or equal the given value."""
  jumlahPenerimaManfaat_lte: Int

  """All values greater than the given value."""
  jumlahPenerimaManfaat_gt: Int

  """All values greater than or equal the given value."""
  jumlahPenerimaManfaat_gte: Int
  konfirmasiData: Boolean

  """All values that are not equal to given value."""
  konfirmasiData_not: Boolean
  noReg: String

  """All values that are not equal to given value."""
  noReg_not: String

  """All values that are contained in given list."""
  noReg_in: [String!]

  """All values that are not contained in given list."""
  noReg_not_in: [String!]

  """All values less than the given value."""
  noReg_lt: String

  """All values less than or equal the given value."""
  noReg_lte: String

  """All values greater than the given value."""
  noReg_gt: String

  """All values greater than or equal the given value."""
  noReg_gte: String

  """All values containing the given string."""
  noReg_contains: String

  """All values not containing the given string."""
  noReg_not_contains: String

  """All values starting with the given string."""
  noReg_starts_with: String

  """All values not starting with the given string."""
  noReg_not_starts_with: String

  """All values ending with the given string."""
  noReg_ends_with: String

  """All values not ending with the given string."""
  noReg_not_ends_with: String
  pernahKlien: String

  """All values that are not equal to given value."""
  pernahKlien_not: String

  """All values that are contained in given list."""
  pernahKlien_in: [String!]

  """All values that are not contained in given list."""
  pernahKlien_not_in: [String!]

  """All values less than the given value."""
  pernahKlien_lt: String

  """All values less than or equal the given value."""
  pernahKlien_lte: String

  """All values greater than the given value."""
  pernahKlien_gt: String

  """All values greater than or equal the given value."""
  pernahKlien_gte: String

  """All values containing the given string."""
  pernahKlien_contains: String

  """All values not containing the given string."""
  pernahKlien_not_contains: String

  """All values starting with the given string."""
  pernahKlien_starts_with: String

  """All values not starting with the given string."""
  pernahKlien_not_starts_with: String

  """All values ending with the given string."""
  pernahKlien_ends_with: String

  """All values not ending with the given string."""
  pernahKlien_not_ends_with: String
  pernahPpLain: String

  """All values that are not equal to given value."""
  pernahPpLain_not: String

  """All values that are contained in given list."""
  pernahPpLain_in: [String!]

  """All values that are not contained in given list."""
  pernahPpLain_not_in: [String!]

  """All values less than the given value."""
  pernahPpLain_lt: String

  """All values less than or equal the given value."""
  pernahPpLain_lte: String

  """All values greater than the given value."""
  pernahPpLain_gt: String

  """All values greater than or equal the given value."""
  pernahPpLain_gte: String

  """All values containing the given string."""
  pernahPpLain_contains: String

  """All values not containing the given string."""
  pernahPpLain_not_contains: String

  """All values starting with the given string."""
  pernahPpLain_starts_with: String

  """All values not starting with the given string."""
  pernahPpLain_not_starts_with: String

  """All values ending with the given string."""
  pernahPpLain_ends_with: String

  """All values not ending with the given string."""
  pernahPpLain_not_ends_with: String
  ppLain: String

  """All values that are not equal to given value."""
  ppLain_not: String

  """All values that are contained in given list."""
  ppLain_in: [String!]

  """All values that are not contained in given list."""
  ppLain_not_in: [String!]

  """All values less than the given value."""
  ppLain_lt: String

  """All values less than or equal the given value."""
  ppLain_lte: String

  """All values greater than the given value."""
  ppLain_gt: String

  """All values greater than or equal the given value."""
  ppLain_gte: String

  """All values containing the given string."""
  ppLain_contains: String

  """All values not containing the given string."""
  ppLain_not_contains: String

  """All values starting with the given string."""
  ppLain_starts_with: String

  """All values not starting with the given string."""
  ppLain_not_starts_with: String

  """All values ending with the given string."""
  ppLain_ends_with: String

  """All values not ending with the given string."""
  ppLain_not_ends_with: String
  regDate: DateTime

  """All values that are not equal to given value."""
  regDate_not: DateTime

  """All values that are contained in given list."""
  regDate_in: [DateTime!]

  """All values that are not contained in given list."""
  regDate_not_in: [DateTime!]

  """All values less than the given value."""
  regDate_lt: DateTime

  """All values less than or equal the given value."""
  regDate_lte: DateTime

  """All values greater than the given value."""
  regDate_gt: DateTime

  """All values greater than or equal the given value."""
  regDate_gte: DateTime
  relasiWakilClient: String

  """All values that are not equal to given value."""
  relasiWakilClient_not: String

  """All values that are contained in given list."""
  relasiWakilClient_in: [String!]

  """All values that are not contained in given list."""
  relasiWakilClient_not_in: [String!]

  """All values less than the given value."""
  relasiWakilClient_lt: String

  """All values less than or equal the given value."""
  relasiWakilClient_lte: String

  """All values greater than the given value."""
  relasiWakilClient_gt: String

  """All values greater than or equal the given value."""
  relasiWakilClient_gte: String

  """All values containing the given string."""
  relasiWakilClient_contains: String

  """All values not containing the given string."""
  relasiWakilClient_not_contains: String

  """All values starting with the given string."""
  relasiWakilClient_starts_with: String

  """All values not starting with the given string."""
  relasiWakilClient_not_starts_with: String

  """All values ending with the given string."""
  relasiWakilClient_ends_with: String

  """All values not ending with the given string."""
  relasiWakilClient_not_ends_with: String
  setujuAdvokasi: Boolean

  """All values that are not equal to given value."""
  setujuAdvokasi_not: Boolean
  statusPerwakilan: String

  """All values that are not equal to given value."""
  statusPerwakilan_not: String

  """All values that are contained in given list."""
  statusPerwakilan_in: [String!]

  """All values that are not contained in given list."""
  statusPerwakilan_not_in: [String!]

  """All values less than the given value."""
  statusPerwakilan_lt: String

  """All values less than or equal the given value."""
  statusPerwakilan_lte: String

  """All values greater than the given value."""
  statusPerwakilan_gt: String

  """All values greater than or equal the given value."""
  statusPerwakilan_gte: String

  """All values containing the given string."""
  statusPerwakilan_contains: String

  """All values not containing the given string."""
  statusPerwakilan_not_contains: String

  """All values starting with the given string."""
  statusPerwakilan_starts_with: String

  """All values not starting with the given string."""
  statusPerwakilan_not_starts_with: String

  """All values ending with the given string."""
  statusPerwakilan_ends_with: String

  """All values not ending with the given string."""
  statusPerwakilan_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  waktuPernahKlien: String

  """All values that are not equal to given value."""
  waktuPernahKlien_not: String

  """All values that are contained in given list."""
  waktuPernahKlien_in: [String!]

  """All values that are not contained in given list."""
  waktuPernahKlien_not_in: [String!]

  """All values less than the given value."""
  waktuPernahKlien_lt: String

  """All values less than or equal the given value."""
  waktuPernahKlien_lte: String

  """All values greater than the given value."""
  waktuPernahKlien_gt: String

  """All values greater than or equal the given value."""
  waktuPernahKlien_gte: String

  """All values containing the given string."""
  waktuPernahKlien_contains: String

  """All values not containing the given string."""
  waktuPernahKlien_not_contains: String

  """All values starting with the given string."""
  waktuPernahKlien_starts_with: String

  """All values not starting with the given string."""
  waktuPernahKlien_not_starts_with: String

  """All values ending with the given string."""
  waktuPernahKlien_ends_with: String

  """All values not ending with the given string."""
  waktuPernahKlien_not_ends_with: String
  whyLbh: String

  """All values that are not equal to given value."""
  whyLbh_not: String

  """All values that are contained in given list."""
  whyLbh_in: [String!]

  """All values that are not contained in given list."""
  whyLbh_not_in: [String!]

  """All values less than the given value."""
  whyLbh_lt: String

  """All values less than or equal the given value."""
  whyLbh_lte: String

  """All values greater than the given value."""
  whyLbh_gt: String

  """All values greater than or equal the given value."""
  whyLbh_gte: String

  """All values containing the given string."""
  whyLbh_contains: String

  """All values not containing the given string."""
  whyLbh_not_contains: String

  """All values starting with the given string."""
  whyLbh_starts_with: String

  """All values not starting with the given string."""
  whyLbh_not_starts_with: String

  """All values ending with the given string."""
  whyLbh_ends_with: String

  """All values not ending with the given string."""
  whyLbh_not_ends_with: String
  tahap: String

  """All values that are not equal to given value."""
  tahap_not: String

  """All values that are contained in given list."""
  tahap_in: [String!]

  """All values that are not contained in given list."""
  tahap_not_in: [String!]

  """All values less than the given value."""
  tahap_lt: String

  """All values less than or equal the given value."""
  tahap_lte: String

  """All values greater than the given value."""
  tahap_gt: String

  """All values greater than or equal the given value."""
  tahap_gte: String

  """All values containing the given string."""
  tahap_contains: String

  """All values not containing the given string."""
  tahap_not_contains: String

  """All values starting with the given string."""
  tahap_starts_with: String

  """All values not starting with the given string."""
  tahap_not_starts_with: String

  """All values ending with the given string."""
  tahap_ends_with: String

  """All values not ending with the given string."""
  tahap_not_ends_with: String
  status: String

  """All values that are not equal to given value."""
  status_not: String

  """All values that are contained in given list."""
  status_in: [String!]

  """All values that are not contained in given list."""
  status_not_in: [String!]

  """All values less than the given value."""
  status_lt: String

  """All values less than or equal the given value."""
  status_lte: String

  """All values greater than the given value."""
  status_gt: String

  """All values greater than or equal the given value."""
  status_gte: String

  """All values containing the given string."""
  status_contains: String

  """All values not containing the given string."""
  status_not_contains: String

  """All values starting with the given string."""
  status_starts_with: String

  """All values not starting with the given string."""
  status_not_starts_with: String

  """All values ending with the given string."""
  status_ends_with: String

  """All values not ending with the given string."""
  status_not_ends_with: String
  wakilId: PersonWhereInput
  case: CaseWhereInput
  clients_every: ClientWhereInput
  clients_some: ClientWhereInput
  clients_none: ClientWhereInput
}

input ApplicationWhereUniqueInput {
  id: Int
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Case {
  id: Int!
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdAt: DateTime!
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedAt: DateTime!
  updatedBy: String
  application: Application!
  classifications(where: CaseClassificationWhereInput, orderBy: CaseClassificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseClassification!]
  consultations(where: CaseConsultationWhereInput, orderBy: CaseConsultationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseConsultation!]
  documents(where: CaseDocumentWhereInput, orderBy: CaseDocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseDocument!]
  issues(where: CaseIssueWhereInput, orderBy: CaseIssueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseIssue!]
  korbans(where: CaseKorbanWhereInput, orderBy: CaseKorbanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseKorban!]
  pelakus(where: CasePelakuWhereInput, orderBy: CasePelakuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CasePelaku!]
  pk: CasePk
  progresses: CaseProgress
  activities(where: CaseProgressActivityWhereInput, orderBy: CaseProgressActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseProgressActivity!]
  transferreferrals(where: CaseTransferReferralWhereInput, orderBy: CaseTransferReferralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseTransferReferral!]
  violatedrights(where: CaseViolatedRightWhereInput, orderBy: CaseViolatedRightOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseViolatedRight!]
  logRequests(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequest!]
  transfer: CaseTransfer
  referrals(where: CaseReferralWhereInput, orderBy: CaseReferralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseReferral!]
}

type CaseClassification {
  id: Int!
  caseId: Case!
  kodeMt: String
}

"""A connection to a list of items."""
type CaseClassificationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseClassificationEdge]!
  aggregate: AggregateCaseClassification!
}

input CaseClassificationCreateInput {
  kodeMt: String
  caseId: CaseCreateOneWithoutClassificationsInput!
}

input CaseClassificationCreateManyWithoutCaseIdInput {
  create: [CaseClassificationCreateWithoutCaseIdInput!]
  connect: [CaseClassificationWhereUniqueInput!]
}

input CaseClassificationCreateWithoutCaseIdInput {
  kodeMt: String
}

"""An edge in a connection."""
type CaseClassificationEdge {
  """The item at the end of the edge."""
  node: CaseClassification!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseClassificationOrderByInput {
  id_ASC
  id_DESC
  kodeMt_ASC
  kodeMt_DESC
}

type CaseClassificationPreviousValues {
  id: Int!
  kodeMt: String
}

input CaseClassificationScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseClassificationScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseClassificationScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseClassificationScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
}

type CaseClassificationSubscriptionPayload {
  mutation: MutationType!
  node: CaseClassification
  updatedFields: [String!]
  previousValues: CaseClassificationPreviousValues
}

input CaseClassificationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseClassificationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseClassificationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseClassificationSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseClassificationWhereInput
}

input CaseClassificationUpdateInput {
  kodeMt: String
  caseId: CaseUpdateOneRequiredWithoutClassificationsInput
}

input CaseClassificationUpdateManyDataInput {
  kodeMt: String
}

input CaseClassificationUpdateManyMutationInput {
  kodeMt: String
}

input CaseClassificationUpdateManyWithoutCaseIdInput {
  create: [CaseClassificationCreateWithoutCaseIdInput!]
  connect: [CaseClassificationWhereUniqueInput!]
  set: [CaseClassificationWhereUniqueInput!]
  disconnect: [CaseClassificationWhereUniqueInput!]
  delete: [CaseClassificationWhereUniqueInput!]
  update: [CaseClassificationUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseClassificationUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseClassificationScalarWhereInput!]
  upsert: [CaseClassificationUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseClassificationUpdateManyWithWhereNestedInput {
  where: CaseClassificationScalarWhereInput!
  data: CaseClassificationUpdateManyDataInput!
}

input CaseClassificationUpdateWithoutCaseIdDataInput {
  kodeMt: String
}

input CaseClassificationUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseClassificationWhereUniqueInput!
  data: CaseClassificationUpdateWithoutCaseIdDataInput!
}

input CaseClassificationUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseClassificationWhereUniqueInput!
  update: CaseClassificationUpdateWithoutCaseIdDataInput!
  create: CaseClassificationCreateWithoutCaseIdInput!
}

input CaseClassificationWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseClassificationWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseClassificationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseClassificationWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
  caseId: CaseWhereInput
}

input CaseClassificationWhereUniqueInput {
  id: Int
}

"""A connection to a list of items."""
type CaseConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseEdge]!
  aggregate: AggregateCase!
}

type CaseConsultation {
  id: Int!
  appKonsul: String
  caseId: Case!
  createdAt: DateTime!
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedAt: DateTime!
  updatedBy: String
  apps(where: CaseConsultationAppWhereInput, orderBy: CaseConsultationAppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseConsultationApp!]
}

type CaseConsultationApp {
  id: Int!
  appConsultation: User
  caseConsultationId: CaseConsultation!
}

"""A connection to a list of items."""
type CaseConsultationAppConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseConsultationAppEdge]!
  aggregate: AggregateCaseConsultationApp!
}

input CaseConsultationAppCreateInput {
  appConsultation: UserCreateOneInput
  caseConsultationId: CaseConsultationCreateOneWithoutAppsInput!
}

input CaseConsultationAppCreateManyWithoutCaseConsultationIdInput {
  create: [CaseConsultationAppCreateWithoutCaseConsultationIdInput!]
  connect: [CaseConsultationAppWhereUniqueInput!]
}

input CaseConsultationAppCreateWithoutCaseConsultationIdInput {
  appConsultation: UserCreateOneInput
}

"""An edge in a connection."""
type CaseConsultationAppEdge {
  """The item at the end of the edge."""
  node: CaseConsultationApp!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseConsultationAppOrderByInput {
  id_ASC
  id_DESC
}

type CaseConsultationAppPreviousValues {
  id: Int!
}

input CaseConsultationAppScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseConsultationAppScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseConsultationAppScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseConsultationAppScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
}

type CaseConsultationAppSubscriptionPayload {
  mutation: MutationType!
  node: CaseConsultationApp
  updatedFields: [String!]
  previousValues: CaseConsultationAppPreviousValues
}

input CaseConsultationAppSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseConsultationAppSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseConsultationAppSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseConsultationAppSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseConsultationAppWhereInput
}

input CaseConsultationAppUpdateInput {
  appConsultation: UserUpdateOneInput
  caseConsultationId: CaseConsultationUpdateOneRequiredWithoutAppsInput
}

input CaseConsultationAppUpdateManyWithoutCaseConsultationIdInput {
  create: [CaseConsultationAppCreateWithoutCaseConsultationIdInput!]
  connect: [CaseConsultationAppWhereUniqueInput!]
  set: [CaseConsultationAppWhereUniqueInput!]
  disconnect: [CaseConsultationAppWhereUniqueInput!]
  delete: [CaseConsultationAppWhereUniqueInput!]
  update: [CaseConsultationAppUpdateWithWhereUniqueWithoutCaseConsultationIdInput!]
  deleteMany: [CaseConsultationAppScalarWhereInput!]
  upsert: [CaseConsultationAppUpsertWithWhereUniqueWithoutCaseConsultationIdInput!]
}

input CaseConsultationAppUpdateWithoutCaseConsultationIdDataInput {
  appConsultation: UserUpdateOneInput
}

input CaseConsultationAppUpdateWithWhereUniqueWithoutCaseConsultationIdInput {
  where: CaseConsultationAppWhereUniqueInput!
  data: CaseConsultationAppUpdateWithoutCaseConsultationIdDataInput!
}

input CaseConsultationAppUpsertWithWhereUniqueWithoutCaseConsultationIdInput {
  where: CaseConsultationAppWhereUniqueInput!
  update: CaseConsultationAppUpdateWithoutCaseConsultationIdDataInput!
  create: CaseConsultationAppCreateWithoutCaseConsultationIdInput!
}

input CaseConsultationAppWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseConsultationAppWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseConsultationAppWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseConsultationAppWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  appConsultation: UserWhereInput
  caseConsultationId: CaseConsultationWhereInput
}

input CaseConsultationAppWhereUniqueInput {
  id: Int
}

"""A connection to a list of items."""
type CaseConsultationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseConsultationEdge]!
  aggregate: AggregateCaseConsultation!
}

input CaseConsultationCreateInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
  caseId: CaseCreateOneWithoutConsultationsInput!
  apps: CaseConsultationAppCreateManyWithoutCaseConsultationIdInput
}

input CaseConsultationCreateManyWithoutCaseIdInput {
  create: [CaseConsultationCreateWithoutCaseIdInput!]
  connect: [CaseConsultationWhereUniqueInput!]
}

input CaseConsultationCreateOneWithoutAppsInput {
  create: CaseConsultationCreateWithoutAppsInput
  connect: CaseConsultationWhereUniqueInput
}

input CaseConsultationCreateWithoutAppsInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
  caseId: CaseCreateOneWithoutConsultationsInput!
}

input CaseConsultationCreateWithoutCaseIdInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
  apps: CaseConsultationAppCreateManyWithoutCaseConsultationIdInput
}

"""An edge in a connection."""
type CaseConsultationEdge {
  """The item at the end of the edge."""
  node: CaseConsultation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseConsultationOrderByInput {
  id_ASC
  id_DESC
  appKonsul_ASC
  appKonsul_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  isiKonsul_ASC
  isiKonsul_DESC
  harapan_ASC
  harapan_DESC
  saranHukum_ASC
  saranHukum_DESC
  rencanaTindakLanjut_ASC
  rencanaTindakLanjut_DESC
  judulAktifitas_ASC
  judulAktifitas_DESC
  ppKonsul_ASC
  ppKonsul_DESC
  tglKonsul_ASC
  tglKonsul_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CaseConsultationPreviousValues {
  id: Int!
  appKonsul: String
  createdAt: DateTime!
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedAt: DateTime!
  updatedBy: String
}

input CaseConsultationScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseConsultationScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseConsultationScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseConsultationScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  appKonsul: String

  """All values that are not equal to given value."""
  appKonsul_not: String

  """All values that are contained in given list."""
  appKonsul_in: [String!]

  """All values that are not contained in given list."""
  appKonsul_not_in: [String!]

  """All values less than the given value."""
  appKonsul_lt: String

  """All values less than or equal the given value."""
  appKonsul_lte: String

  """All values greater than the given value."""
  appKonsul_gt: String

  """All values greater than or equal the given value."""
  appKonsul_gte: String

  """All values containing the given string."""
  appKonsul_contains: String

  """All values not containing the given string."""
  appKonsul_not_contains: String

  """All values starting with the given string."""
  appKonsul_starts_with: String

  """All values not starting with the given string."""
  appKonsul_not_starts_with: String

  """All values ending with the given string."""
  appKonsul_ends_with: String

  """All values not ending with the given string."""
  appKonsul_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  isiKonsul: String

  """All values that are not equal to given value."""
  isiKonsul_not: String

  """All values that are contained in given list."""
  isiKonsul_in: [String!]

  """All values that are not contained in given list."""
  isiKonsul_not_in: [String!]

  """All values less than the given value."""
  isiKonsul_lt: String

  """All values less than or equal the given value."""
  isiKonsul_lte: String

  """All values greater than the given value."""
  isiKonsul_gt: String

  """All values greater than or equal the given value."""
  isiKonsul_gte: String

  """All values containing the given string."""
  isiKonsul_contains: String

  """All values not containing the given string."""
  isiKonsul_not_contains: String

  """All values starting with the given string."""
  isiKonsul_starts_with: String

  """All values not starting with the given string."""
  isiKonsul_not_starts_with: String

  """All values ending with the given string."""
  isiKonsul_ends_with: String

  """All values not ending with the given string."""
  isiKonsul_not_ends_with: String
  harapan: String

  """All values that are not equal to given value."""
  harapan_not: String

  """All values that are contained in given list."""
  harapan_in: [String!]

  """All values that are not contained in given list."""
  harapan_not_in: [String!]

  """All values less than the given value."""
  harapan_lt: String

  """All values less than or equal the given value."""
  harapan_lte: String

  """All values greater than the given value."""
  harapan_gt: String

  """All values greater than or equal the given value."""
  harapan_gte: String

  """All values containing the given string."""
  harapan_contains: String

  """All values not containing the given string."""
  harapan_not_contains: String

  """All values starting with the given string."""
  harapan_starts_with: String

  """All values not starting with the given string."""
  harapan_not_starts_with: String

  """All values ending with the given string."""
  harapan_ends_with: String

  """All values not ending with the given string."""
  harapan_not_ends_with: String
  saranHukum: String

  """All values that are not equal to given value."""
  saranHukum_not: String

  """All values that are contained in given list."""
  saranHukum_in: [String!]

  """All values that are not contained in given list."""
  saranHukum_not_in: [String!]

  """All values less than the given value."""
  saranHukum_lt: String

  """All values less than or equal the given value."""
  saranHukum_lte: String

  """All values greater than the given value."""
  saranHukum_gt: String

  """All values greater than or equal the given value."""
  saranHukum_gte: String

  """All values containing the given string."""
  saranHukum_contains: String

  """All values not containing the given string."""
  saranHukum_not_contains: String

  """All values starting with the given string."""
  saranHukum_starts_with: String

  """All values not starting with the given string."""
  saranHukum_not_starts_with: String

  """All values ending with the given string."""
  saranHukum_ends_with: String

  """All values not ending with the given string."""
  saranHukum_not_ends_with: String
  rencanaTindakLanjut: String

  """All values that are not equal to given value."""
  rencanaTindakLanjut_not: String

  """All values that are contained in given list."""
  rencanaTindakLanjut_in: [String!]

  """All values that are not contained in given list."""
  rencanaTindakLanjut_not_in: [String!]

  """All values less than the given value."""
  rencanaTindakLanjut_lt: String

  """All values less than or equal the given value."""
  rencanaTindakLanjut_lte: String

  """All values greater than the given value."""
  rencanaTindakLanjut_gt: String

  """All values greater than or equal the given value."""
  rencanaTindakLanjut_gte: String

  """All values containing the given string."""
  rencanaTindakLanjut_contains: String

  """All values not containing the given string."""
  rencanaTindakLanjut_not_contains: String

  """All values starting with the given string."""
  rencanaTindakLanjut_starts_with: String

  """All values not starting with the given string."""
  rencanaTindakLanjut_not_starts_with: String

  """All values ending with the given string."""
  rencanaTindakLanjut_ends_with: String

  """All values not ending with the given string."""
  rencanaTindakLanjut_not_ends_with: String
  judulAktifitas: String

  """All values that are not equal to given value."""
  judulAktifitas_not: String

  """All values that are contained in given list."""
  judulAktifitas_in: [String!]

  """All values that are not contained in given list."""
  judulAktifitas_not_in: [String!]

  """All values less than the given value."""
  judulAktifitas_lt: String

  """All values less than or equal the given value."""
  judulAktifitas_lte: String

  """All values greater than the given value."""
  judulAktifitas_gt: String

  """All values greater than or equal the given value."""
  judulAktifitas_gte: String

  """All values containing the given string."""
  judulAktifitas_contains: String

  """All values not containing the given string."""
  judulAktifitas_not_contains: String

  """All values starting with the given string."""
  judulAktifitas_starts_with: String

  """All values not starting with the given string."""
  judulAktifitas_not_starts_with: String

  """All values ending with the given string."""
  judulAktifitas_ends_with: String

  """All values not ending with the given string."""
  judulAktifitas_not_ends_with: String
  ppKonsul: String

  """All values that are not equal to given value."""
  ppKonsul_not: String

  """All values that are contained in given list."""
  ppKonsul_in: [String!]

  """All values that are not contained in given list."""
  ppKonsul_not_in: [String!]

  """All values less than the given value."""
  ppKonsul_lt: String

  """All values less than or equal the given value."""
  ppKonsul_lte: String

  """All values greater than the given value."""
  ppKonsul_gt: String

  """All values greater than or equal the given value."""
  ppKonsul_gte: String

  """All values containing the given string."""
  ppKonsul_contains: String

  """All values not containing the given string."""
  ppKonsul_not_contains: String

  """All values starting with the given string."""
  ppKonsul_starts_with: String

  """All values not starting with the given string."""
  ppKonsul_not_starts_with: String

  """All values ending with the given string."""
  ppKonsul_ends_with: String

  """All values not ending with the given string."""
  ppKonsul_not_ends_with: String
  tglKonsul: DateTime

  """All values that are not equal to given value."""
  tglKonsul_not: DateTime

  """All values that are contained in given list."""
  tglKonsul_in: [DateTime!]

  """All values that are not contained in given list."""
  tglKonsul_not_in: [DateTime!]

  """All values less than the given value."""
  tglKonsul_lt: DateTime

  """All values less than or equal the given value."""
  tglKonsul_lte: DateTime

  """All values greater than the given value."""
  tglKonsul_gt: DateTime

  """All values greater than or equal the given value."""
  tglKonsul_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
}

type CaseConsultationSubscriptionPayload {
  mutation: MutationType!
  node: CaseConsultation
  updatedFields: [String!]
  previousValues: CaseConsultationPreviousValues
}

input CaseConsultationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseConsultationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseConsultationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseConsultationSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseConsultationWhereInput
}

input CaseConsultationUpdateInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutConsultationsInput
  apps: CaseConsultationAppUpdateManyWithoutCaseConsultationIdInput
}

input CaseConsultationUpdateManyDataInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
}

input CaseConsultationUpdateManyMutationInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
}

input CaseConsultationUpdateManyWithoutCaseIdInput {
  create: [CaseConsultationCreateWithoutCaseIdInput!]
  connect: [CaseConsultationWhereUniqueInput!]
  set: [CaseConsultationWhereUniqueInput!]
  disconnect: [CaseConsultationWhereUniqueInput!]
  delete: [CaseConsultationWhereUniqueInput!]
  update: [CaseConsultationUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseConsultationUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseConsultationScalarWhereInput!]
  upsert: [CaseConsultationUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseConsultationUpdateManyWithWhereNestedInput {
  where: CaseConsultationScalarWhereInput!
  data: CaseConsultationUpdateManyDataInput!
}

input CaseConsultationUpdateOneRequiredWithoutAppsInput {
  create: CaseConsultationCreateWithoutAppsInput
  connect: CaseConsultationWhereUniqueInput
  update: CaseConsultationUpdateWithoutAppsDataInput
  upsert: CaseConsultationUpsertWithoutAppsInput
}

input CaseConsultationUpdateWithoutAppsDataInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutConsultationsInput
}

input CaseConsultationUpdateWithoutCaseIdDataInput {
  appKonsul: String
  createdBy: String
  isiKonsul: String
  harapan: String
  saranHukum: String
  rencanaTindakLanjut: String
  judulAktifitas: String
  ppKonsul: String
  tglKonsul: DateTime
  updatedBy: String
  apps: CaseConsultationAppUpdateManyWithoutCaseConsultationIdInput
}

input CaseConsultationUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseConsultationWhereUniqueInput!
  data: CaseConsultationUpdateWithoutCaseIdDataInput!
}

input CaseConsultationUpsertWithoutAppsInput {
  update: CaseConsultationUpdateWithoutAppsDataInput!
  create: CaseConsultationCreateWithoutAppsInput!
}

input CaseConsultationUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseConsultationWhereUniqueInput!
  update: CaseConsultationUpdateWithoutCaseIdDataInput!
  create: CaseConsultationCreateWithoutCaseIdInput!
}

input CaseConsultationWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseConsultationWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseConsultationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseConsultationWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  appKonsul: String

  """All values that are not equal to given value."""
  appKonsul_not: String

  """All values that are contained in given list."""
  appKonsul_in: [String!]

  """All values that are not contained in given list."""
  appKonsul_not_in: [String!]

  """All values less than the given value."""
  appKonsul_lt: String

  """All values less than or equal the given value."""
  appKonsul_lte: String

  """All values greater than the given value."""
  appKonsul_gt: String

  """All values greater than or equal the given value."""
  appKonsul_gte: String

  """All values containing the given string."""
  appKonsul_contains: String

  """All values not containing the given string."""
  appKonsul_not_contains: String

  """All values starting with the given string."""
  appKonsul_starts_with: String

  """All values not starting with the given string."""
  appKonsul_not_starts_with: String

  """All values ending with the given string."""
  appKonsul_ends_with: String

  """All values not ending with the given string."""
  appKonsul_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  isiKonsul: String

  """All values that are not equal to given value."""
  isiKonsul_not: String

  """All values that are contained in given list."""
  isiKonsul_in: [String!]

  """All values that are not contained in given list."""
  isiKonsul_not_in: [String!]

  """All values less than the given value."""
  isiKonsul_lt: String

  """All values less than or equal the given value."""
  isiKonsul_lte: String

  """All values greater than the given value."""
  isiKonsul_gt: String

  """All values greater than or equal the given value."""
  isiKonsul_gte: String

  """All values containing the given string."""
  isiKonsul_contains: String

  """All values not containing the given string."""
  isiKonsul_not_contains: String

  """All values starting with the given string."""
  isiKonsul_starts_with: String

  """All values not starting with the given string."""
  isiKonsul_not_starts_with: String

  """All values ending with the given string."""
  isiKonsul_ends_with: String

  """All values not ending with the given string."""
  isiKonsul_not_ends_with: String
  harapan: String

  """All values that are not equal to given value."""
  harapan_not: String

  """All values that are contained in given list."""
  harapan_in: [String!]

  """All values that are not contained in given list."""
  harapan_not_in: [String!]

  """All values less than the given value."""
  harapan_lt: String

  """All values less than or equal the given value."""
  harapan_lte: String

  """All values greater than the given value."""
  harapan_gt: String

  """All values greater than or equal the given value."""
  harapan_gte: String

  """All values containing the given string."""
  harapan_contains: String

  """All values not containing the given string."""
  harapan_not_contains: String

  """All values starting with the given string."""
  harapan_starts_with: String

  """All values not starting with the given string."""
  harapan_not_starts_with: String

  """All values ending with the given string."""
  harapan_ends_with: String

  """All values not ending with the given string."""
  harapan_not_ends_with: String
  saranHukum: String

  """All values that are not equal to given value."""
  saranHukum_not: String

  """All values that are contained in given list."""
  saranHukum_in: [String!]

  """All values that are not contained in given list."""
  saranHukum_not_in: [String!]

  """All values less than the given value."""
  saranHukum_lt: String

  """All values less than or equal the given value."""
  saranHukum_lte: String

  """All values greater than the given value."""
  saranHukum_gt: String

  """All values greater than or equal the given value."""
  saranHukum_gte: String

  """All values containing the given string."""
  saranHukum_contains: String

  """All values not containing the given string."""
  saranHukum_not_contains: String

  """All values starting with the given string."""
  saranHukum_starts_with: String

  """All values not starting with the given string."""
  saranHukum_not_starts_with: String

  """All values ending with the given string."""
  saranHukum_ends_with: String

  """All values not ending with the given string."""
  saranHukum_not_ends_with: String
  rencanaTindakLanjut: String

  """All values that are not equal to given value."""
  rencanaTindakLanjut_not: String

  """All values that are contained in given list."""
  rencanaTindakLanjut_in: [String!]

  """All values that are not contained in given list."""
  rencanaTindakLanjut_not_in: [String!]

  """All values less than the given value."""
  rencanaTindakLanjut_lt: String

  """All values less than or equal the given value."""
  rencanaTindakLanjut_lte: String

  """All values greater than the given value."""
  rencanaTindakLanjut_gt: String

  """All values greater than or equal the given value."""
  rencanaTindakLanjut_gte: String

  """All values containing the given string."""
  rencanaTindakLanjut_contains: String

  """All values not containing the given string."""
  rencanaTindakLanjut_not_contains: String

  """All values starting with the given string."""
  rencanaTindakLanjut_starts_with: String

  """All values not starting with the given string."""
  rencanaTindakLanjut_not_starts_with: String

  """All values ending with the given string."""
  rencanaTindakLanjut_ends_with: String

  """All values not ending with the given string."""
  rencanaTindakLanjut_not_ends_with: String
  judulAktifitas: String

  """All values that are not equal to given value."""
  judulAktifitas_not: String

  """All values that are contained in given list."""
  judulAktifitas_in: [String!]

  """All values that are not contained in given list."""
  judulAktifitas_not_in: [String!]

  """All values less than the given value."""
  judulAktifitas_lt: String

  """All values less than or equal the given value."""
  judulAktifitas_lte: String

  """All values greater than the given value."""
  judulAktifitas_gt: String

  """All values greater than or equal the given value."""
  judulAktifitas_gte: String

  """All values containing the given string."""
  judulAktifitas_contains: String

  """All values not containing the given string."""
  judulAktifitas_not_contains: String

  """All values starting with the given string."""
  judulAktifitas_starts_with: String

  """All values not starting with the given string."""
  judulAktifitas_not_starts_with: String

  """All values ending with the given string."""
  judulAktifitas_ends_with: String

  """All values not ending with the given string."""
  judulAktifitas_not_ends_with: String
  ppKonsul: String

  """All values that are not equal to given value."""
  ppKonsul_not: String

  """All values that are contained in given list."""
  ppKonsul_in: [String!]

  """All values that are not contained in given list."""
  ppKonsul_not_in: [String!]

  """All values less than the given value."""
  ppKonsul_lt: String

  """All values less than or equal the given value."""
  ppKonsul_lte: String

  """All values greater than the given value."""
  ppKonsul_gt: String

  """All values greater than or equal the given value."""
  ppKonsul_gte: String

  """All values containing the given string."""
  ppKonsul_contains: String

  """All values not containing the given string."""
  ppKonsul_not_contains: String

  """All values starting with the given string."""
  ppKonsul_starts_with: String

  """All values not starting with the given string."""
  ppKonsul_not_starts_with: String

  """All values ending with the given string."""
  ppKonsul_ends_with: String

  """All values not ending with the given string."""
  ppKonsul_not_ends_with: String
  tglKonsul: DateTime

  """All values that are not equal to given value."""
  tglKonsul_not: DateTime

  """All values that are contained in given list."""
  tglKonsul_in: [DateTime!]

  """All values that are not contained in given list."""
  tglKonsul_not_in: [DateTime!]

  """All values less than the given value."""
  tglKonsul_lt: DateTime

  """All values less than or equal the given value."""
  tglKonsul_lte: DateTime

  """All values greater than the given value."""
  tglKonsul_gt: DateTime

  """All values greater than or equal the given value."""
  tglKonsul_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
  apps_every: CaseConsultationAppWhereInput
  apps_some: CaseConsultationAppWhereInput
  apps_none: CaseConsultationAppWhereInput
}

input CaseConsultationWhereUniqueInput {
  id: Int
}

input CaseCreateInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateOneWithoutActivitiesInput {
  create: CaseCreateWithoutActivitiesInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutApplicationInput {
  create: CaseCreateWithoutApplicationInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutClassificationsInput {
  create: CaseCreateWithoutClassificationsInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutConsultationsInput {
  create: CaseCreateWithoutConsultationsInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutDocumentsInput {
  create: CaseCreateWithoutDocumentsInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutIssuesInput {
  create: CaseCreateWithoutIssuesInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutKorbansInput {
  create: CaseCreateWithoutKorbansInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutLogRequestsInput {
  create: CaseCreateWithoutLogRequestsInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutPelakusInput {
  create: CaseCreateWithoutPelakusInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutPkInput {
  create: CaseCreateWithoutPkInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutProgressesInput {
  create: CaseCreateWithoutProgressesInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutReferralsInput {
  create: CaseCreateWithoutReferralsInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutTransferInput {
  create: CaseCreateWithoutTransferInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutTransferreferralsInput {
  create: CaseCreateWithoutTransferreferralsInput
  connect: CaseWhereUniqueInput
}

input CaseCreateOneWithoutViolatedrightsInput {
  create: CaseCreateWithoutViolatedrightsInput
  connect: CaseWhereUniqueInput
}

input CaseCreateWithoutActivitiesInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutApplicationInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutClassificationsInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutConsultationsInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutDocumentsInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutIssuesInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutKorbansInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutLogRequestsInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutPelakusInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutPkInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutProgressesInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutReferralsInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
}

input CaseCreateWithoutTransferInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutTransferreferralsInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

input CaseCreateWithoutViolatedrightsInput {
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedBy: String
  application: ApplicationCreateOneWithoutCaseInput!
  classifications: CaseClassificationCreateManyWithoutCaseIdInput
  consultations: CaseConsultationCreateManyWithoutCaseIdInput
  documents: CaseDocumentCreateManyWithoutCaseIdInput
  issues: CaseIssueCreateManyWithoutCaseIdInput
  korbans: CaseKorbanCreateManyWithoutCaseIdInput
  pelakus: CasePelakuCreateManyWithoutCaseIdInput
  pk: CasePkCreateOneWithoutCaseIdInput
  progresses: CaseProgressCreateOneWithoutCaseIdInput
  activities: CaseProgressActivityCreateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralCreateManyWithoutCaseIdInput
  logRequests: LogRequestCreateManyWithoutCaseIdInput
  transfer: CaseTransferCreateOneWithoutCaseIdInput
  referrals: CaseReferralCreateManyWithoutCaseIdInput
}

type CaseDocument {
  id: Int!
  caseId: Case!
  createdAt: DateTime!
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedAt: DateTime!
  updatedBy: String
}

"""A connection to a list of items."""
type CaseDocumentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseDocumentEdge]!
  aggregate: AggregateCaseDocument!
}

input CaseDocumentCreateInput {
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedBy: String
  caseId: CaseCreateOneWithoutDocumentsInput!
}

input CaseDocumentCreateManyWithoutCaseIdInput {
  create: [CaseDocumentCreateWithoutCaseIdInput!]
  connect: [CaseDocumentWhereUniqueInput!]
}

input CaseDocumentCreateWithoutCaseIdInput {
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedBy: String
}

"""An edge in a connection."""
type CaseDocumentEdge {
  """The item at the end of the edge."""
  node: CaseDocument!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseDocumentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  jenisDokumen_ASC
  jenisDokumen_DESC
  judulDokumen_ASC
  judulDokumen_DESC
  keterangan_ASC
  keterangan_DESC
  link_ASC
  link_DESC
  filename_ASC
  filename_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CaseDocumentPreviousValues {
  id: Int!
  createdAt: DateTime!
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedAt: DateTime!
  updatedBy: String
}

input CaseDocumentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseDocumentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseDocumentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseDocumentScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  jenisDokumen: String

  """All values that are not equal to given value."""
  jenisDokumen_not: String

  """All values that are contained in given list."""
  jenisDokumen_in: [String!]

  """All values that are not contained in given list."""
  jenisDokumen_not_in: [String!]

  """All values less than the given value."""
  jenisDokumen_lt: String

  """All values less than or equal the given value."""
  jenisDokumen_lte: String

  """All values greater than the given value."""
  jenisDokumen_gt: String

  """All values greater than or equal the given value."""
  jenisDokumen_gte: String

  """All values containing the given string."""
  jenisDokumen_contains: String

  """All values not containing the given string."""
  jenisDokumen_not_contains: String

  """All values starting with the given string."""
  jenisDokumen_starts_with: String

  """All values not starting with the given string."""
  jenisDokumen_not_starts_with: String

  """All values ending with the given string."""
  jenisDokumen_ends_with: String

  """All values not ending with the given string."""
  jenisDokumen_not_ends_with: String
  judulDokumen: String

  """All values that are not equal to given value."""
  judulDokumen_not: String

  """All values that are contained in given list."""
  judulDokumen_in: [String!]

  """All values that are not contained in given list."""
  judulDokumen_not_in: [String!]

  """All values less than the given value."""
  judulDokumen_lt: String

  """All values less than or equal the given value."""
  judulDokumen_lte: String

  """All values greater than the given value."""
  judulDokumen_gt: String

  """All values greater than or equal the given value."""
  judulDokumen_gte: String

  """All values containing the given string."""
  judulDokumen_contains: String

  """All values not containing the given string."""
  judulDokumen_not_contains: String

  """All values starting with the given string."""
  judulDokumen_starts_with: String

  """All values not starting with the given string."""
  judulDokumen_not_starts_with: String

  """All values ending with the given string."""
  judulDokumen_ends_with: String

  """All values not ending with the given string."""
  judulDokumen_not_ends_with: String
  keterangan: String

  """All values that are not equal to given value."""
  keterangan_not: String

  """All values that are contained in given list."""
  keterangan_in: [String!]

  """All values that are not contained in given list."""
  keterangan_not_in: [String!]

  """All values less than the given value."""
  keterangan_lt: String

  """All values less than or equal the given value."""
  keterangan_lte: String

  """All values greater than the given value."""
  keterangan_gt: String

  """All values greater than or equal the given value."""
  keterangan_gte: String

  """All values containing the given string."""
  keterangan_contains: String

  """All values not containing the given string."""
  keterangan_not_contains: String

  """All values starting with the given string."""
  keterangan_starts_with: String

  """All values not starting with the given string."""
  keterangan_not_starts_with: String

  """All values ending with the given string."""
  keterangan_ends_with: String

  """All values not ending with the given string."""
  keterangan_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  filename: String

  """All values that are not equal to given value."""
  filename_not: String

  """All values that are contained in given list."""
  filename_in: [String!]

  """All values that are not contained in given list."""
  filename_not_in: [String!]

  """All values less than the given value."""
  filename_lt: String

  """All values less than or equal the given value."""
  filename_lte: String

  """All values greater than the given value."""
  filename_gt: String

  """All values greater than or equal the given value."""
  filename_gte: String

  """All values containing the given string."""
  filename_contains: String

  """All values not containing the given string."""
  filename_not_contains: String

  """All values starting with the given string."""
  filename_starts_with: String

  """All values not starting with the given string."""
  filename_not_starts_with: String

  """All values ending with the given string."""
  filename_ends_with: String

  """All values not ending with the given string."""
  filename_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
}

type CaseDocumentSubscriptionPayload {
  mutation: MutationType!
  node: CaseDocument
  updatedFields: [String!]
  previousValues: CaseDocumentPreviousValues
}

input CaseDocumentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseDocumentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseDocumentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseDocumentSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseDocumentWhereInput
}

input CaseDocumentUpdateInput {
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutDocumentsInput
}

input CaseDocumentUpdateManyDataInput {
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedBy: String
}

input CaseDocumentUpdateManyMutationInput {
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedBy: String
}

input CaseDocumentUpdateManyWithoutCaseIdInput {
  create: [CaseDocumentCreateWithoutCaseIdInput!]
  connect: [CaseDocumentWhereUniqueInput!]
  set: [CaseDocumentWhereUniqueInput!]
  disconnect: [CaseDocumentWhereUniqueInput!]
  delete: [CaseDocumentWhereUniqueInput!]
  update: [CaseDocumentUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseDocumentUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseDocumentScalarWhereInput!]
  upsert: [CaseDocumentUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseDocumentUpdateManyWithWhereNestedInput {
  where: CaseDocumentScalarWhereInput!
  data: CaseDocumentUpdateManyDataInput!
}

input CaseDocumentUpdateWithoutCaseIdDataInput {
  createdBy: String
  jenisDokumen: String
  judulDokumen: String
  keterangan: String
  link: String
  filename: String
  updatedBy: String
}

input CaseDocumentUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseDocumentWhereUniqueInput!
  data: CaseDocumentUpdateWithoutCaseIdDataInput!
}

input CaseDocumentUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseDocumentWhereUniqueInput!
  update: CaseDocumentUpdateWithoutCaseIdDataInput!
  create: CaseDocumentCreateWithoutCaseIdInput!
}

input CaseDocumentWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseDocumentWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseDocumentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseDocumentWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  jenisDokumen: String

  """All values that are not equal to given value."""
  jenisDokumen_not: String

  """All values that are contained in given list."""
  jenisDokumen_in: [String!]

  """All values that are not contained in given list."""
  jenisDokumen_not_in: [String!]

  """All values less than the given value."""
  jenisDokumen_lt: String

  """All values less than or equal the given value."""
  jenisDokumen_lte: String

  """All values greater than the given value."""
  jenisDokumen_gt: String

  """All values greater than or equal the given value."""
  jenisDokumen_gte: String

  """All values containing the given string."""
  jenisDokumen_contains: String

  """All values not containing the given string."""
  jenisDokumen_not_contains: String

  """All values starting with the given string."""
  jenisDokumen_starts_with: String

  """All values not starting with the given string."""
  jenisDokumen_not_starts_with: String

  """All values ending with the given string."""
  jenisDokumen_ends_with: String

  """All values not ending with the given string."""
  jenisDokumen_not_ends_with: String
  judulDokumen: String

  """All values that are not equal to given value."""
  judulDokumen_not: String

  """All values that are contained in given list."""
  judulDokumen_in: [String!]

  """All values that are not contained in given list."""
  judulDokumen_not_in: [String!]

  """All values less than the given value."""
  judulDokumen_lt: String

  """All values less than or equal the given value."""
  judulDokumen_lte: String

  """All values greater than the given value."""
  judulDokumen_gt: String

  """All values greater than or equal the given value."""
  judulDokumen_gte: String

  """All values containing the given string."""
  judulDokumen_contains: String

  """All values not containing the given string."""
  judulDokumen_not_contains: String

  """All values starting with the given string."""
  judulDokumen_starts_with: String

  """All values not starting with the given string."""
  judulDokumen_not_starts_with: String

  """All values ending with the given string."""
  judulDokumen_ends_with: String

  """All values not ending with the given string."""
  judulDokumen_not_ends_with: String
  keterangan: String

  """All values that are not equal to given value."""
  keterangan_not: String

  """All values that are contained in given list."""
  keterangan_in: [String!]

  """All values that are not contained in given list."""
  keterangan_not_in: [String!]

  """All values less than the given value."""
  keterangan_lt: String

  """All values less than or equal the given value."""
  keterangan_lte: String

  """All values greater than the given value."""
  keterangan_gt: String

  """All values greater than or equal the given value."""
  keterangan_gte: String

  """All values containing the given string."""
  keterangan_contains: String

  """All values not containing the given string."""
  keterangan_not_contains: String

  """All values starting with the given string."""
  keterangan_starts_with: String

  """All values not starting with the given string."""
  keterangan_not_starts_with: String

  """All values ending with the given string."""
  keterangan_ends_with: String

  """All values not ending with the given string."""
  keterangan_not_ends_with: String
  link: String

  """All values that are not equal to given value."""
  link_not: String

  """All values that are contained in given list."""
  link_in: [String!]

  """All values that are not contained in given list."""
  link_not_in: [String!]

  """All values less than the given value."""
  link_lt: String

  """All values less than or equal the given value."""
  link_lte: String

  """All values greater than the given value."""
  link_gt: String

  """All values greater than or equal the given value."""
  link_gte: String

  """All values containing the given string."""
  link_contains: String

  """All values not containing the given string."""
  link_not_contains: String

  """All values starting with the given string."""
  link_starts_with: String

  """All values not starting with the given string."""
  link_not_starts_with: String

  """All values ending with the given string."""
  link_ends_with: String

  """All values not ending with the given string."""
  link_not_ends_with: String
  filename: String

  """All values that are not equal to given value."""
  filename_not: String

  """All values that are contained in given list."""
  filename_in: [String!]

  """All values that are not contained in given list."""
  filename_not_in: [String!]

  """All values less than the given value."""
  filename_lt: String

  """All values less than or equal the given value."""
  filename_lte: String

  """All values greater than the given value."""
  filename_gt: String

  """All values greater than or equal the given value."""
  filename_gte: String

  """All values containing the given string."""
  filename_contains: String

  """All values not containing the given string."""
  filename_not_contains: String

  """All values starting with the given string."""
  filename_starts_with: String

  """All values not starting with the given string."""
  filename_not_starts_with: String

  """All values ending with the given string."""
  filename_ends_with: String

  """All values not ending with the given string."""
  filename_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
}

input CaseDocumentWhereUniqueInput {
  id: Int
}

"""An edge in a connection."""
type CaseEdge {
  """The item at the end of the edge."""
  node: Case!

  """A cursor for use in pagination."""
  cursor: String!
}

type CaseIssue {
  id: Int!
  caseId: Case!
  kodeMt: String
}

"""A connection to a list of items."""
type CaseIssueConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseIssueEdge]!
  aggregate: AggregateCaseIssue!
}

input CaseIssueCreateInput {
  kodeMt: String
  caseId: CaseCreateOneWithoutIssuesInput!
}

input CaseIssueCreateManyWithoutCaseIdInput {
  create: [CaseIssueCreateWithoutCaseIdInput!]
  connect: [CaseIssueWhereUniqueInput!]
}

input CaseIssueCreateWithoutCaseIdInput {
  kodeMt: String
}

"""An edge in a connection."""
type CaseIssueEdge {
  """The item at the end of the edge."""
  node: CaseIssue!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseIssueOrderByInput {
  id_ASC
  id_DESC
  kodeMt_ASC
  kodeMt_DESC
}

type CaseIssuePreviousValues {
  id: Int!
  kodeMt: String
}

input CaseIssueScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseIssueScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseIssueScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseIssueScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
}

type CaseIssueSubscriptionPayload {
  mutation: MutationType!
  node: CaseIssue
  updatedFields: [String!]
  previousValues: CaseIssuePreviousValues
}

input CaseIssueSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseIssueSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseIssueSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseIssueSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseIssueWhereInput
}

input CaseIssueUpdateInput {
  kodeMt: String
  caseId: CaseUpdateOneRequiredWithoutIssuesInput
}

input CaseIssueUpdateManyDataInput {
  kodeMt: String
}

input CaseIssueUpdateManyMutationInput {
  kodeMt: String
}

input CaseIssueUpdateManyWithoutCaseIdInput {
  create: [CaseIssueCreateWithoutCaseIdInput!]
  connect: [CaseIssueWhereUniqueInput!]
  set: [CaseIssueWhereUniqueInput!]
  disconnect: [CaseIssueWhereUniqueInput!]
  delete: [CaseIssueWhereUniqueInput!]
  update: [CaseIssueUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseIssueUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseIssueScalarWhereInput!]
  upsert: [CaseIssueUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseIssueUpdateManyWithWhereNestedInput {
  where: CaseIssueScalarWhereInput!
  data: CaseIssueUpdateManyDataInput!
}

input CaseIssueUpdateWithoutCaseIdDataInput {
  kodeMt: String
}

input CaseIssueUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseIssueWhereUniqueInput!
  data: CaseIssueUpdateWithoutCaseIdDataInput!
}

input CaseIssueUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseIssueWhereUniqueInput!
  update: CaseIssueUpdateWithoutCaseIdDataInput!
  create: CaseIssueCreateWithoutCaseIdInput!
}

input CaseIssueWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseIssueWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseIssueWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseIssueWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
  caseId: CaseWhereInput
}

input CaseIssueWhereUniqueInput {
  id: Int
}

type CaseKorban {
  id: Int!
  caseId: Case!
  personId: Person
}

"""A connection to a list of items."""
type CaseKorbanConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseKorbanEdge]!
  aggregate: AggregateCaseKorban!
}

input CaseKorbanCreateInput {
  caseId: CaseCreateOneWithoutKorbansInput!
  personId: PersonCreateOneWithoutCasekorbansInput
}

input CaseKorbanCreateManyWithoutCaseIdInput {
  create: [CaseKorbanCreateWithoutCaseIdInput!]
  connect: [CaseKorbanWhereUniqueInput!]
}

input CaseKorbanCreateManyWithoutPersonIdInput {
  create: [CaseKorbanCreateWithoutPersonIdInput!]
  connect: [CaseKorbanWhereUniqueInput!]
}

input CaseKorbanCreateWithoutCaseIdInput {
  personId: PersonCreateOneWithoutCasekorbansInput
}

input CaseKorbanCreateWithoutPersonIdInput {
  caseId: CaseCreateOneWithoutKorbansInput!
}

"""An edge in a connection."""
type CaseKorbanEdge {
  """The item at the end of the edge."""
  node: CaseKorban!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseKorbanOrderByInput {
  id_ASC
  id_DESC
}

type CaseKorbanPreviousValues {
  id: Int!
}

input CaseKorbanScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseKorbanScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseKorbanScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseKorbanScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
}

type CaseKorbanSubscriptionPayload {
  mutation: MutationType!
  node: CaseKorban
  updatedFields: [String!]
  previousValues: CaseKorbanPreviousValues
}

input CaseKorbanSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseKorbanSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseKorbanSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseKorbanSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseKorbanWhereInput
}

input CaseKorbanUpdateInput {
  caseId: CaseUpdateOneRequiredWithoutKorbansInput
  personId: PersonUpdateOneWithoutCasekorbansInput
}

input CaseKorbanUpdateManyWithoutCaseIdInput {
  create: [CaseKorbanCreateWithoutCaseIdInput!]
  connect: [CaseKorbanWhereUniqueInput!]
  set: [CaseKorbanWhereUniqueInput!]
  disconnect: [CaseKorbanWhereUniqueInput!]
  delete: [CaseKorbanWhereUniqueInput!]
  update: [CaseKorbanUpdateWithWhereUniqueWithoutCaseIdInput!]
  deleteMany: [CaseKorbanScalarWhereInput!]
  upsert: [CaseKorbanUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseKorbanUpdateManyWithoutPersonIdInput {
  create: [CaseKorbanCreateWithoutPersonIdInput!]
  connect: [CaseKorbanWhereUniqueInput!]
  set: [CaseKorbanWhereUniqueInput!]
  disconnect: [CaseKorbanWhereUniqueInput!]
  delete: [CaseKorbanWhereUniqueInput!]
  update: [CaseKorbanUpdateWithWhereUniqueWithoutPersonIdInput!]
  deleteMany: [CaseKorbanScalarWhereInput!]
  upsert: [CaseKorbanUpsertWithWhereUniqueWithoutPersonIdInput!]
}

input CaseKorbanUpdateWithoutCaseIdDataInput {
  personId: PersonUpdateOneWithoutCasekorbansInput
}

input CaseKorbanUpdateWithoutPersonIdDataInput {
  caseId: CaseUpdateOneRequiredWithoutKorbansInput
}

input CaseKorbanUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseKorbanWhereUniqueInput!
  data: CaseKorbanUpdateWithoutCaseIdDataInput!
}

input CaseKorbanUpdateWithWhereUniqueWithoutPersonIdInput {
  where: CaseKorbanWhereUniqueInput!
  data: CaseKorbanUpdateWithoutPersonIdDataInput!
}

input CaseKorbanUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseKorbanWhereUniqueInput!
  update: CaseKorbanUpdateWithoutCaseIdDataInput!
  create: CaseKorbanCreateWithoutCaseIdInput!
}

input CaseKorbanUpsertWithWhereUniqueWithoutPersonIdInput {
  where: CaseKorbanWhereUniqueInput!
  update: CaseKorbanUpdateWithoutPersonIdDataInput!
  create: CaseKorbanCreateWithoutPersonIdInput!
}

input CaseKorbanWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseKorbanWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseKorbanWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseKorbanWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  caseId: CaseWhereInput
  personId: PersonWhereInput
}

input CaseKorbanWhereUniqueInput {
  id: Int
}

enum CaseOrderByInput {
  id_ASC
  id_DESC
  applicationId_ASC
  applicationId_DESC
  caseClosed_ASC
  caseClosed_DESC
  caseClosedJenis_ASC
  caseClosedJenis_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  hakTerlanggar_ASC
  hakTerlanggar_DESC
  issue_ASC
  issue_DESC
  judulKasus_ASC
  judulKasus_DESC
  klasifikasiDok_ASC
  klasifikasiDok_DESC
  kronologiKasus_ASC
  kronologiKasus_DESC
  lockDitolak_ASC
  lockDitolak_DESC
  statusPendampingan_ASC
  statusPendampingan_DESC
  targetAdvokasi_ASC
  targetAdvokasi_DESC
  unlockPk_ASC
  unlockPk_DESC
  unlockTransfer_ASC
  unlockTransfer_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CasePelaku {
  id: Int!
  caseId: Case!
  jenisPelaku: String
  personId: Person
}

"""A connection to a list of items."""
type CasePelakuConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CasePelakuEdge]!
  aggregate: AggregateCasePelaku!
}

input CasePelakuCreateInput {
  jenisPelaku: String
  caseId: CaseCreateOneWithoutPelakusInput!
  personId: PersonCreateOneWithoutCasepelakusInput
}

input CasePelakuCreateManyWithoutCaseIdInput {
  create: [CasePelakuCreateWithoutCaseIdInput!]
  connect: [CasePelakuWhereUniqueInput!]
}

input CasePelakuCreateManyWithoutPersonIdInput {
  create: [CasePelakuCreateWithoutPersonIdInput!]
  connect: [CasePelakuWhereUniqueInput!]
}

input CasePelakuCreateWithoutCaseIdInput {
  jenisPelaku: String
  personId: PersonCreateOneWithoutCasepelakusInput
}

input CasePelakuCreateWithoutPersonIdInput {
  jenisPelaku: String
  caseId: CaseCreateOneWithoutPelakusInput!
}

"""An edge in a connection."""
type CasePelakuEdge {
  """The item at the end of the edge."""
  node: CasePelaku!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CasePelakuOrderByInput {
  id_ASC
  id_DESC
  jenisPelaku_ASC
  jenisPelaku_DESC
}

type CasePelakuPreviousValues {
  id: Int!
  jenisPelaku: String
}

input CasePelakuScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CasePelakuScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CasePelakuScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CasePelakuScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  jenisPelaku: String

  """All values that are not equal to given value."""
  jenisPelaku_not: String

  """All values that are contained in given list."""
  jenisPelaku_in: [String!]

  """All values that are not contained in given list."""
  jenisPelaku_not_in: [String!]

  """All values less than the given value."""
  jenisPelaku_lt: String

  """All values less than or equal the given value."""
  jenisPelaku_lte: String

  """All values greater than the given value."""
  jenisPelaku_gt: String

  """All values greater than or equal the given value."""
  jenisPelaku_gte: String

  """All values containing the given string."""
  jenisPelaku_contains: String

  """All values not containing the given string."""
  jenisPelaku_not_contains: String

  """All values starting with the given string."""
  jenisPelaku_starts_with: String

  """All values not starting with the given string."""
  jenisPelaku_not_starts_with: String

  """All values ending with the given string."""
  jenisPelaku_ends_with: String

  """All values not ending with the given string."""
  jenisPelaku_not_ends_with: String
}

type CasePelakuSubscriptionPayload {
  mutation: MutationType!
  node: CasePelaku
  updatedFields: [String!]
  previousValues: CasePelakuPreviousValues
}

input CasePelakuSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CasePelakuSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CasePelakuSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CasePelakuSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CasePelakuWhereInput
}

input CasePelakuUpdateInput {
  jenisPelaku: String
  caseId: CaseUpdateOneRequiredWithoutPelakusInput
  personId: PersonUpdateOneWithoutCasepelakusInput
}

input CasePelakuUpdateManyDataInput {
  jenisPelaku: String
}

input CasePelakuUpdateManyMutationInput {
  jenisPelaku: String
}

input CasePelakuUpdateManyWithoutCaseIdInput {
  create: [CasePelakuCreateWithoutCaseIdInput!]
  connect: [CasePelakuWhereUniqueInput!]
  set: [CasePelakuWhereUniqueInput!]
  disconnect: [CasePelakuWhereUniqueInput!]
  delete: [CasePelakuWhereUniqueInput!]
  update: [CasePelakuUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CasePelakuUpdateManyWithWhereNestedInput!]
  deleteMany: [CasePelakuScalarWhereInput!]
  upsert: [CasePelakuUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CasePelakuUpdateManyWithoutPersonIdInput {
  create: [CasePelakuCreateWithoutPersonIdInput!]
  connect: [CasePelakuWhereUniqueInput!]
  set: [CasePelakuWhereUniqueInput!]
  disconnect: [CasePelakuWhereUniqueInput!]
  delete: [CasePelakuWhereUniqueInput!]
  update: [CasePelakuUpdateWithWhereUniqueWithoutPersonIdInput!]
  updateMany: [CasePelakuUpdateManyWithWhereNestedInput!]
  deleteMany: [CasePelakuScalarWhereInput!]
  upsert: [CasePelakuUpsertWithWhereUniqueWithoutPersonIdInput!]
}

input CasePelakuUpdateManyWithWhereNestedInput {
  where: CasePelakuScalarWhereInput!
  data: CasePelakuUpdateManyDataInput!
}

input CasePelakuUpdateWithoutCaseIdDataInput {
  jenisPelaku: String
  personId: PersonUpdateOneWithoutCasepelakusInput
}

input CasePelakuUpdateWithoutPersonIdDataInput {
  jenisPelaku: String
  caseId: CaseUpdateOneRequiredWithoutPelakusInput
}

input CasePelakuUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CasePelakuWhereUniqueInput!
  data: CasePelakuUpdateWithoutCaseIdDataInput!
}

input CasePelakuUpdateWithWhereUniqueWithoutPersonIdInput {
  where: CasePelakuWhereUniqueInput!
  data: CasePelakuUpdateWithoutPersonIdDataInput!
}

input CasePelakuUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CasePelakuWhereUniqueInput!
  update: CasePelakuUpdateWithoutCaseIdDataInput!
  create: CasePelakuCreateWithoutCaseIdInput!
}

input CasePelakuUpsertWithWhereUniqueWithoutPersonIdInput {
  where: CasePelakuWhereUniqueInput!
  update: CasePelakuUpdateWithoutPersonIdDataInput!
  create: CasePelakuCreateWithoutPersonIdInput!
}

input CasePelakuWhereInput {
  """Logical AND on all given filters."""
  AND: [CasePelakuWhereInput!]

  """Logical OR on all given filters."""
  OR: [CasePelakuWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CasePelakuWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  jenisPelaku: String

  """All values that are not equal to given value."""
  jenisPelaku_not: String

  """All values that are contained in given list."""
  jenisPelaku_in: [String!]

  """All values that are not contained in given list."""
  jenisPelaku_not_in: [String!]

  """All values less than the given value."""
  jenisPelaku_lt: String

  """All values less than or equal the given value."""
  jenisPelaku_lte: String

  """All values greater than the given value."""
  jenisPelaku_gt: String

  """All values greater than or equal the given value."""
  jenisPelaku_gte: String

  """All values containing the given string."""
  jenisPelaku_contains: String

  """All values not containing the given string."""
  jenisPelaku_not_contains: String

  """All values starting with the given string."""
  jenisPelaku_starts_with: String

  """All values not starting with the given string."""
  jenisPelaku_not_starts_with: String

  """All values ending with the given string."""
  jenisPelaku_ends_with: String

  """All values not ending with the given string."""
  jenisPelaku_not_ends_with: String
  caseId: CaseWhereInput
  personId: PersonWhereInput
}

input CasePelakuWhereUniqueInput {
  id: Int
}

type CasePk {
  id: Int!
  caseId: Case!
  createdAt: DateTime!
  createdBy: String
  didampingi: String
  legalMemo: String
  notulaRapat: String
  targetAkhirAdvokasi: String
  strategiAdvokasi: String
  ppPendamping: User
  statusAlasanTdk: String
  tglRapat: DateTime
  updatedAt: DateTime!
  updatedBy: String
}

"""A connection to a list of items."""
type CasePkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CasePkEdge]!
  aggregate: AggregateCasePk!
}

input CasePkCreateInput {
  createdBy: String
  didampingi: String
  legalMemo: String
  notulaRapat: String
  targetAkhirAdvokasi: String
  strategiAdvokasi: String
  statusAlasanTdk: String
  tglRapat: DateTime
  updatedBy: String
  caseId: CaseCreateOneWithoutPkInput!
  ppPendamping: UserCreateOneInput
}

input CasePkCreateOneWithoutCaseIdInput {
  create: CasePkCreateWithoutCaseIdInput
  connect: CasePkWhereUniqueInput
}

input CasePkCreateWithoutCaseIdInput {
  createdBy: String
  didampingi: String
  legalMemo: String
  notulaRapat: String
  targetAkhirAdvokasi: String
  strategiAdvokasi: String
  statusAlasanTdk: String
  tglRapat: DateTime
  updatedBy: String
  ppPendamping: UserCreateOneInput
}

"""An edge in a connection."""
type CasePkEdge {
  """The item at the end of the edge."""
  node: CasePk!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CasePkOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  didampingi_ASC
  didampingi_DESC
  legalMemo_ASC
  legalMemo_DESC
  notulaRapat_ASC
  notulaRapat_DESC
  targetAkhirAdvokasi_ASC
  targetAkhirAdvokasi_DESC
  strategiAdvokasi_ASC
  strategiAdvokasi_DESC
  statusAlasanTdk_ASC
  statusAlasanTdk_DESC
  tglRapat_ASC
  tglRapat_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CasePkPreviousValues {
  id: Int!
  createdAt: DateTime!
  createdBy: String
  didampingi: String
  legalMemo: String
  notulaRapat: String
  targetAkhirAdvokasi: String
  strategiAdvokasi: String
  statusAlasanTdk: String
  tglRapat: DateTime
  updatedAt: DateTime!
  updatedBy: String
}

type CasePkSubscriptionPayload {
  mutation: MutationType!
  node: CasePk
  updatedFields: [String!]
  previousValues: CasePkPreviousValues
}

input CasePkSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CasePkSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CasePkSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CasePkSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CasePkWhereInput
}

input CasePkUpdateInput {
  createdBy: String
  didampingi: String
  legalMemo: String
  notulaRapat: String
  targetAkhirAdvokasi: String
  strategiAdvokasi: String
  statusAlasanTdk: String
  tglRapat: DateTime
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutPkInput
  ppPendamping: UserUpdateOneInput
}

input CasePkUpdateManyMutationInput {
  createdBy: String
  didampingi: String
  legalMemo: String
  notulaRapat: String
  targetAkhirAdvokasi: String
  strategiAdvokasi: String
  statusAlasanTdk: String
  tglRapat: DateTime
  updatedBy: String
}

input CasePkUpdateOneWithoutCaseIdInput {
  create: CasePkCreateWithoutCaseIdInput
  connect: CasePkWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CasePkUpdateWithoutCaseIdDataInput
  upsert: CasePkUpsertWithoutCaseIdInput
}

input CasePkUpdateWithoutCaseIdDataInput {
  createdBy: String
  didampingi: String
  legalMemo: String
  notulaRapat: String
  targetAkhirAdvokasi: String
  strategiAdvokasi: String
  statusAlasanTdk: String
  tglRapat: DateTime
  updatedBy: String
  ppPendamping: UserUpdateOneInput
}

input CasePkUpsertWithoutCaseIdInput {
  update: CasePkUpdateWithoutCaseIdDataInput!
  create: CasePkCreateWithoutCaseIdInput!
}

input CasePkWhereInput {
  """Logical AND on all given filters."""
  AND: [CasePkWhereInput!]

  """Logical OR on all given filters."""
  OR: [CasePkWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CasePkWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  didampingi: String

  """All values that are not equal to given value."""
  didampingi_not: String

  """All values that are contained in given list."""
  didampingi_in: [String!]

  """All values that are not contained in given list."""
  didampingi_not_in: [String!]

  """All values less than the given value."""
  didampingi_lt: String

  """All values less than or equal the given value."""
  didampingi_lte: String

  """All values greater than the given value."""
  didampingi_gt: String

  """All values greater than or equal the given value."""
  didampingi_gte: String

  """All values containing the given string."""
  didampingi_contains: String

  """All values not containing the given string."""
  didampingi_not_contains: String

  """All values starting with the given string."""
  didampingi_starts_with: String

  """All values not starting with the given string."""
  didampingi_not_starts_with: String

  """All values ending with the given string."""
  didampingi_ends_with: String

  """All values not ending with the given string."""
  didampingi_not_ends_with: String
  legalMemo: String

  """All values that are not equal to given value."""
  legalMemo_not: String

  """All values that are contained in given list."""
  legalMemo_in: [String!]

  """All values that are not contained in given list."""
  legalMemo_not_in: [String!]

  """All values less than the given value."""
  legalMemo_lt: String

  """All values less than or equal the given value."""
  legalMemo_lte: String

  """All values greater than the given value."""
  legalMemo_gt: String

  """All values greater than or equal the given value."""
  legalMemo_gte: String

  """All values containing the given string."""
  legalMemo_contains: String

  """All values not containing the given string."""
  legalMemo_not_contains: String

  """All values starting with the given string."""
  legalMemo_starts_with: String

  """All values not starting with the given string."""
  legalMemo_not_starts_with: String

  """All values ending with the given string."""
  legalMemo_ends_with: String

  """All values not ending with the given string."""
  legalMemo_not_ends_with: String
  notulaRapat: String

  """All values that are not equal to given value."""
  notulaRapat_not: String

  """All values that are contained in given list."""
  notulaRapat_in: [String!]

  """All values that are not contained in given list."""
  notulaRapat_not_in: [String!]

  """All values less than the given value."""
  notulaRapat_lt: String

  """All values less than or equal the given value."""
  notulaRapat_lte: String

  """All values greater than the given value."""
  notulaRapat_gt: String

  """All values greater than or equal the given value."""
  notulaRapat_gte: String

  """All values containing the given string."""
  notulaRapat_contains: String

  """All values not containing the given string."""
  notulaRapat_not_contains: String

  """All values starting with the given string."""
  notulaRapat_starts_with: String

  """All values not starting with the given string."""
  notulaRapat_not_starts_with: String

  """All values ending with the given string."""
  notulaRapat_ends_with: String

  """All values not ending with the given string."""
  notulaRapat_not_ends_with: String
  targetAkhirAdvokasi: String

  """All values that are not equal to given value."""
  targetAkhirAdvokasi_not: String

  """All values that are contained in given list."""
  targetAkhirAdvokasi_in: [String!]

  """All values that are not contained in given list."""
  targetAkhirAdvokasi_not_in: [String!]

  """All values less than the given value."""
  targetAkhirAdvokasi_lt: String

  """All values less than or equal the given value."""
  targetAkhirAdvokasi_lte: String

  """All values greater than the given value."""
  targetAkhirAdvokasi_gt: String

  """All values greater than or equal the given value."""
  targetAkhirAdvokasi_gte: String

  """All values containing the given string."""
  targetAkhirAdvokasi_contains: String

  """All values not containing the given string."""
  targetAkhirAdvokasi_not_contains: String

  """All values starting with the given string."""
  targetAkhirAdvokasi_starts_with: String

  """All values not starting with the given string."""
  targetAkhirAdvokasi_not_starts_with: String

  """All values ending with the given string."""
  targetAkhirAdvokasi_ends_with: String

  """All values not ending with the given string."""
  targetAkhirAdvokasi_not_ends_with: String
  strategiAdvokasi: String

  """All values that are not equal to given value."""
  strategiAdvokasi_not: String

  """All values that are contained in given list."""
  strategiAdvokasi_in: [String!]

  """All values that are not contained in given list."""
  strategiAdvokasi_not_in: [String!]

  """All values less than the given value."""
  strategiAdvokasi_lt: String

  """All values less than or equal the given value."""
  strategiAdvokasi_lte: String

  """All values greater than the given value."""
  strategiAdvokasi_gt: String

  """All values greater than or equal the given value."""
  strategiAdvokasi_gte: String

  """All values containing the given string."""
  strategiAdvokasi_contains: String

  """All values not containing the given string."""
  strategiAdvokasi_not_contains: String

  """All values starting with the given string."""
  strategiAdvokasi_starts_with: String

  """All values not starting with the given string."""
  strategiAdvokasi_not_starts_with: String

  """All values ending with the given string."""
  strategiAdvokasi_ends_with: String

  """All values not ending with the given string."""
  strategiAdvokasi_not_ends_with: String
  statusAlasanTdk: String

  """All values that are not equal to given value."""
  statusAlasanTdk_not: String

  """All values that are contained in given list."""
  statusAlasanTdk_in: [String!]

  """All values that are not contained in given list."""
  statusAlasanTdk_not_in: [String!]

  """All values less than the given value."""
  statusAlasanTdk_lt: String

  """All values less than or equal the given value."""
  statusAlasanTdk_lte: String

  """All values greater than the given value."""
  statusAlasanTdk_gt: String

  """All values greater than or equal the given value."""
  statusAlasanTdk_gte: String

  """All values containing the given string."""
  statusAlasanTdk_contains: String

  """All values not containing the given string."""
  statusAlasanTdk_not_contains: String

  """All values starting with the given string."""
  statusAlasanTdk_starts_with: String

  """All values not starting with the given string."""
  statusAlasanTdk_not_starts_with: String

  """All values ending with the given string."""
  statusAlasanTdk_ends_with: String

  """All values not ending with the given string."""
  statusAlasanTdk_not_ends_with: String
  tglRapat: DateTime

  """All values that are not equal to given value."""
  tglRapat_not: DateTime

  """All values that are contained in given list."""
  tglRapat_in: [DateTime!]

  """All values that are not contained in given list."""
  tglRapat_not_in: [DateTime!]

  """All values less than the given value."""
  tglRapat_lt: DateTime

  """All values less than or equal the given value."""
  tglRapat_lte: DateTime

  """All values greater than the given value."""
  tglRapat_gt: DateTime

  """All values greater than or equal the given value."""
  tglRapat_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
  ppPendamping: UserWhereInput
}

input CasePkWhereUniqueInput {
  id: Int
}

type CasePreviousValues {
  id: Int!
  applicationId: Int
  caseClosed: Boolean!
  caseClosedJenis: String
  createdAt: DateTime!
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean!
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean!
  unlockTransfer: Boolean!
  updatedAt: DateTime!
  updatedBy: String
}

type CaseProgress {
  id: Int!
  caseId: Case!
  catatan: String
  createdAt: DateTime!
  createdBy: String
  jenisPeradilan: String
  updatedAt: DateTime!
  updatedBy: String
}

type CaseProgressActivity {
  id: Int!
  capaian: String
  caseId: Case!
  createdAt: DateTime!
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedAt: DateTime!
  updatedBy: String
  activitieslit(where: CaseProgressActivityLitWhereInput, orderBy: CaseProgressActivityLitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseProgressActivityLit!]
  activitiesnonlit(where: CaseProgressActivityNonlitWhereInput, orderBy: CaseProgressActivityNonlitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseProgressActivityNonlit!]
}

"""A connection to a list of items."""
type CaseProgressActivityConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseProgressActivityEdge]!
  aggregate: AggregateCaseProgressActivity!
}

input CaseProgressActivityCreateInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  caseId: CaseCreateOneWithoutActivitiesInput!
  activitieslit: CaseProgressActivityLitCreateManyWithoutCaseProgressActivityIdInput
  activitiesnonlit: CaseProgressActivityNonlitCreateManyWithoutCaseProgressActivityIdInput
}

input CaseProgressActivityCreateManyWithoutCaseIdInput {
  create: [CaseProgressActivityCreateWithoutCaseIdInput!]
  connect: [CaseProgressActivityWhereUniqueInput!]
}

input CaseProgressActivityCreateOneWithoutActivitieslitInput {
  create: CaseProgressActivityCreateWithoutActivitieslitInput
  connect: CaseProgressActivityWhereUniqueInput
}

input CaseProgressActivityCreateOneWithoutActivitiesnonlitInput {
  create: CaseProgressActivityCreateWithoutActivitiesnonlitInput
  connect: CaseProgressActivityWhereUniqueInput
}

input CaseProgressActivityCreateWithoutActivitieslitInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  caseId: CaseCreateOneWithoutActivitiesInput!
  activitiesnonlit: CaseProgressActivityNonlitCreateManyWithoutCaseProgressActivityIdInput
}

input CaseProgressActivityCreateWithoutActivitiesnonlitInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  caseId: CaseCreateOneWithoutActivitiesInput!
  activitieslit: CaseProgressActivityLitCreateManyWithoutCaseProgressActivityIdInput
}

input CaseProgressActivityCreateWithoutCaseIdInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  activitieslit: CaseProgressActivityLitCreateManyWithoutCaseProgressActivityIdInput
  activitiesnonlit: CaseProgressActivityNonlitCreateManyWithoutCaseProgressActivityIdInput
}

"""An edge in a connection."""
type CaseProgressActivityEdge {
  """The item at the end of the edge."""
  node: CaseProgressActivity!

  """A cursor for use in pagination."""
  cursor: String!
}

type CaseProgressActivityLit {
  id: Int!
  caseProgressActivityId: CaseProgressActivity
  kodeMt: String
}

"""A connection to a list of items."""
type CaseProgressActivityLitConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseProgressActivityLitEdge]!
  aggregate: AggregateCaseProgressActivityLit!
}

input CaseProgressActivityLitCreateInput {
  kodeMt: String
  caseProgressActivityId: CaseProgressActivityCreateOneWithoutActivitieslitInput
}

input CaseProgressActivityLitCreateManyWithoutCaseProgressActivityIdInput {
  create: [CaseProgressActivityLitCreateWithoutCaseProgressActivityIdInput!]
  connect: [CaseProgressActivityLitWhereUniqueInput!]
}

input CaseProgressActivityLitCreateWithoutCaseProgressActivityIdInput {
  kodeMt: String
}

"""An edge in a connection."""
type CaseProgressActivityLitEdge {
  """The item at the end of the edge."""
  node: CaseProgressActivityLit!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseProgressActivityLitOrderByInput {
  id_ASC
  id_DESC
  kodeMt_ASC
  kodeMt_DESC
}

type CaseProgressActivityLitPreviousValues {
  id: Int!
  kodeMt: String
}

input CaseProgressActivityLitScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityLitScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityLitScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityLitScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
}

type CaseProgressActivityLitSubscriptionPayload {
  mutation: MutationType!
  node: CaseProgressActivityLit
  updatedFields: [String!]
  previousValues: CaseProgressActivityLitPreviousValues
}

input CaseProgressActivityLitSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityLitSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityLitSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityLitSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseProgressActivityLitWhereInput
}

input CaseProgressActivityLitUpdateInput {
  kodeMt: String
  caseProgressActivityId: CaseProgressActivityUpdateOneWithoutActivitieslitInput
}

input CaseProgressActivityLitUpdateManyDataInput {
  kodeMt: String
}

input CaseProgressActivityLitUpdateManyMutationInput {
  kodeMt: String
}

input CaseProgressActivityLitUpdateManyWithoutCaseProgressActivityIdInput {
  create: [CaseProgressActivityLitCreateWithoutCaseProgressActivityIdInput!]
  connect: [CaseProgressActivityLitWhereUniqueInput!]
  set: [CaseProgressActivityLitWhereUniqueInput!]
  disconnect: [CaseProgressActivityLitWhereUniqueInput!]
  delete: [CaseProgressActivityLitWhereUniqueInput!]
  update: [CaseProgressActivityLitUpdateWithWhereUniqueWithoutCaseProgressActivityIdInput!]
  updateMany: [CaseProgressActivityLitUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseProgressActivityLitScalarWhereInput!]
  upsert: [CaseProgressActivityLitUpsertWithWhereUniqueWithoutCaseProgressActivityIdInput!]
}

input CaseProgressActivityLitUpdateManyWithWhereNestedInput {
  where: CaseProgressActivityLitScalarWhereInput!
  data: CaseProgressActivityLitUpdateManyDataInput!
}

input CaseProgressActivityLitUpdateWithoutCaseProgressActivityIdDataInput {
  kodeMt: String
}

input CaseProgressActivityLitUpdateWithWhereUniqueWithoutCaseProgressActivityIdInput {
  where: CaseProgressActivityLitWhereUniqueInput!
  data: CaseProgressActivityLitUpdateWithoutCaseProgressActivityIdDataInput!
}

input CaseProgressActivityLitUpsertWithWhereUniqueWithoutCaseProgressActivityIdInput {
  where: CaseProgressActivityLitWhereUniqueInput!
  update: CaseProgressActivityLitUpdateWithoutCaseProgressActivityIdDataInput!
  create: CaseProgressActivityLitCreateWithoutCaseProgressActivityIdInput!
}

input CaseProgressActivityLitWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityLitWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityLitWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityLitWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
  caseProgressActivityId: CaseProgressActivityWhereInput
}

input CaseProgressActivityLitWhereUniqueInput {
  id: Int
}

type CaseProgressActivityNonlit {
  id: Int!
  caseProgressActivityId: CaseProgressActivity
  kodeMt: String
}

"""A connection to a list of items."""
type CaseProgressActivityNonlitConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseProgressActivityNonlitEdge]!
  aggregate: AggregateCaseProgressActivityNonlit!
}

input CaseProgressActivityNonlitCreateInput {
  kodeMt: String
  caseProgressActivityId: CaseProgressActivityCreateOneWithoutActivitiesnonlitInput
}

input CaseProgressActivityNonlitCreateManyWithoutCaseProgressActivityIdInput {
  create: [CaseProgressActivityNonlitCreateWithoutCaseProgressActivityIdInput!]
  connect: [CaseProgressActivityNonlitWhereUniqueInput!]
}

input CaseProgressActivityNonlitCreateWithoutCaseProgressActivityIdInput {
  kodeMt: String
}

"""An edge in a connection."""
type CaseProgressActivityNonlitEdge {
  """The item at the end of the edge."""
  node: CaseProgressActivityNonlit!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseProgressActivityNonlitOrderByInput {
  id_ASC
  id_DESC
  kodeMt_ASC
  kodeMt_DESC
}

type CaseProgressActivityNonlitPreviousValues {
  id: Int!
  kodeMt: String
}

input CaseProgressActivityNonlitScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityNonlitScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityNonlitScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityNonlitScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
}

type CaseProgressActivityNonlitSubscriptionPayload {
  mutation: MutationType!
  node: CaseProgressActivityNonlit
  updatedFields: [String!]
  previousValues: CaseProgressActivityNonlitPreviousValues
}

input CaseProgressActivityNonlitSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityNonlitSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityNonlitSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityNonlitSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseProgressActivityNonlitWhereInput
}

input CaseProgressActivityNonlitUpdateInput {
  kodeMt: String
  caseProgressActivityId: CaseProgressActivityUpdateOneWithoutActivitiesnonlitInput
}

input CaseProgressActivityNonlitUpdateManyDataInput {
  kodeMt: String
}

input CaseProgressActivityNonlitUpdateManyMutationInput {
  kodeMt: String
}

input CaseProgressActivityNonlitUpdateManyWithoutCaseProgressActivityIdInput {
  create: [CaseProgressActivityNonlitCreateWithoutCaseProgressActivityIdInput!]
  connect: [CaseProgressActivityNonlitWhereUniqueInput!]
  set: [CaseProgressActivityNonlitWhereUniqueInput!]
  disconnect: [CaseProgressActivityNonlitWhereUniqueInput!]
  delete: [CaseProgressActivityNonlitWhereUniqueInput!]
  update: [CaseProgressActivityNonlitUpdateWithWhereUniqueWithoutCaseProgressActivityIdInput!]
  updateMany: [CaseProgressActivityNonlitUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseProgressActivityNonlitScalarWhereInput!]
  upsert: [CaseProgressActivityNonlitUpsertWithWhereUniqueWithoutCaseProgressActivityIdInput!]
}

input CaseProgressActivityNonlitUpdateManyWithWhereNestedInput {
  where: CaseProgressActivityNonlitScalarWhereInput!
  data: CaseProgressActivityNonlitUpdateManyDataInput!
}

input CaseProgressActivityNonlitUpdateWithoutCaseProgressActivityIdDataInput {
  kodeMt: String
}

input CaseProgressActivityNonlitUpdateWithWhereUniqueWithoutCaseProgressActivityIdInput {
  where: CaseProgressActivityNonlitWhereUniqueInput!
  data: CaseProgressActivityNonlitUpdateWithoutCaseProgressActivityIdDataInput!
}

input CaseProgressActivityNonlitUpsertWithWhereUniqueWithoutCaseProgressActivityIdInput {
  where: CaseProgressActivityNonlitWhereUniqueInput!
  update: CaseProgressActivityNonlitUpdateWithoutCaseProgressActivityIdDataInput!
  create: CaseProgressActivityNonlitCreateWithoutCaseProgressActivityIdInput!
}

input CaseProgressActivityNonlitWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityNonlitWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityNonlitWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityNonlitWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
  caseProgressActivityId: CaseProgressActivityWhereInput
}

input CaseProgressActivityNonlitWhereUniqueInput {
  id: Int
}

enum CaseProgressActivityOrderByInput {
  id_ASC
  id_DESC
  capaian_ASC
  capaian_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  hambatan_ASC
  hambatan_DESC
  judulAktifitas_ASC
  judulAktifitas_DESC
  position_ASC
  position_DESC
  rencanaStrategi_ASC
  rencanaStrategi_DESC
  targetAdvokasi_ASC
  targetAdvokasi_DESC
  tglAktifitas_ASC
  tglAktifitas_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CaseProgressActivityPreviousValues {
  id: Int!
  capaian: String
  createdAt: DateTime!
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedAt: DateTime!
  updatedBy: String
}

input CaseProgressActivityScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  capaian: String

  """All values that are not equal to given value."""
  capaian_not: String

  """All values that are contained in given list."""
  capaian_in: [String!]

  """All values that are not contained in given list."""
  capaian_not_in: [String!]

  """All values less than the given value."""
  capaian_lt: String

  """All values less than or equal the given value."""
  capaian_lte: String

  """All values greater than the given value."""
  capaian_gt: String

  """All values greater than or equal the given value."""
  capaian_gte: String

  """All values containing the given string."""
  capaian_contains: String

  """All values not containing the given string."""
  capaian_not_contains: String

  """All values starting with the given string."""
  capaian_starts_with: String

  """All values not starting with the given string."""
  capaian_not_starts_with: String

  """All values ending with the given string."""
  capaian_ends_with: String

  """All values not ending with the given string."""
  capaian_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  hambatan: String

  """All values that are not equal to given value."""
  hambatan_not: String

  """All values that are contained in given list."""
  hambatan_in: [String!]

  """All values that are not contained in given list."""
  hambatan_not_in: [String!]

  """All values less than the given value."""
  hambatan_lt: String

  """All values less than or equal the given value."""
  hambatan_lte: String

  """All values greater than the given value."""
  hambatan_gt: String

  """All values greater than or equal the given value."""
  hambatan_gte: String

  """All values containing the given string."""
  hambatan_contains: String

  """All values not containing the given string."""
  hambatan_not_contains: String

  """All values starting with the given string."""
  hambatan_starts_with: String

  """All values not starting with the given string."""
  hambatan_not_starts_with: String

  """All values ending with the given string."""
  hambatan_ends_with: String

  """All values not ending with the given string."""
  hambatan_not_ends_with: String
  judulAktifitas: String

  """All values that are not equal to given value."""
  judulAktifitas_not: String

  """All values that are contained in given list."""
  judulAktifitas_in: [String!]

  """All values that are not contained in given list."""
  judulAktifitas_not_in: [String!]

  """All values less than the given value."""
  judulAktifitas_lt: String

  """All values less than or equal the given value."""
  judulAktifitas_lte: String

  """All values greater than the given value."""
  judulAktifitas_gt: String

  """All values greater than or equal the given value."""
  judulAktifitas_gte: String

  """All values containing the given string."""
  judulAktifitas_contains: String

  """All values not containing the given string."""
  judulAktifitas_not_contains: String

  """All values starting with the given string."""
  judulAktifitas_starts_with: String

  """All values not starting with the given string."""
  judulAktifitas_not_starts_with: String

  """All values ending with the given string."""
  judulAktifitas_ends_with: String

  """All values not ending with the given string."""
  judulAktifitas_not_ends_with: String
  position: String

  """All values that are not equal to given value."""
  position_not: String

  """All values that are contained in given list."""
  position_in: [String!]

  """All values that are not contained in given list."""
  position_not_in: [String!]

  """All values less than the given value."""
  position_lt: String

  """All values less than or equal the given value."""
  position_lte: String

  """All values greater than the given value."""
  position_gt: String

  """All values greater than or equal the given value."""
  position_gte: String

  """All values containing the given string."""
  position_contains: String

  """All values not containing the given string."""
  position_not_contains: String

  """All values starting with the given string."""
  position_starts_with: String

  """All values not starting with the given string."""
  position_not_starts_with: String

  """All values ending with the given string."""
  position_ends_with: String

  """All values not ending with the given string."""
  position_not_ends_with: String
  rencanaStrategi: String

  """All values that are not equal to given value."""
  rencanaStrategi_not: String

  """All values that are contained in given list."""
  rencanaStrategi_in: [String!]

  """All values that are not contained in given list."""
  rencanaStrategi_not_in: [String!]

  """All values less than the given value."""
  rencanaStrategi_lt: String

  """All values less than or equal the given value."""
  rencanaStrategi_lte: String

  """All values greater than the given value."""
  rencanaStrategi_gt: String

  """All values greater than or equal the given value."""
  rencanaStrategi_gte: String

  """All values containing the given string."""
  rencanaStrategi_contains: String

  """All values not containing the given string."""
  rencanaStrategi_not_contains: String

  """All values starting with the given string."""
  rencanaStrategi_starts_with: String

  """All values not starting with the given string."""
  rencanaStrategi_not_starts_with: String

  """All values ending with the given string."""
  rencanaStrategi_ends_with: String

  """All values not ending with the given string."""
  rencanaStrategi_not_ends_with: String
  targetAdvokasi: String

  """All values that are not equal to given value."""
  targetAdvokasi_not: String

  """All values that are contained in given list."""
  targetAdvokasi_in: [String!]

  """All values that are not contained in given list."""
  targetAdvokasi_not_in: [String!]

  """All values less than the given value."""
  targetAdvokasi_lt: String

  """All values less than or equal the given value."""
  targetAdvokasi_lte: String

  """All values greater than the given value."""
  targetAdvokasi_gt: String

  """All values greater than or equal the given value."""
  targetAdvokasi_gte: String

  """All values containing the given string."""
  targetAdvokasi_contains: String

  """All values not containing the given string."""
  targetAdvokasi_not_contains: String

  """All values starting with the given string."""
  targetAdvokasi_starts_with: String

  """All values not starting with the given string."""
  targetAdvokasi_not_starts_with: String

  """All values ending with the given string."""
  targetAdvokasi_ends_with: String

  """All values not ending with the given string."""
  targetAdvokasi_not_ends_with: String
  tglAktifitas: DateTime

  """All values that are not equal to given value."""
  tglAktifitas_not: DateTime

  """All values that are contained in given list."""
  tglAktifitas_in: [DateTime!]

  """All values that are not contained in given list."""
  tglAktifitas_not_in: [DateTime!]

  """All values less than the given value."""
  tglAktifitas_lt: DateTime

  """All values less than or equal the given value."""
  tglAktifitas_lte: DateTime

  """All values greater than the given value."""
  tglAktifitas_gt: DateTime

  """All values greater than or equal the given value."""
  tglAktifitas_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
}

type CaseProgressActivitySubscriptionPayload {
  mutation: MutationType!
  node: CaseProgressActivity
  updatedFields: [String!]
  previousValues: CaseProgressActivityPreviousValues
}

input CaseProgressActivitySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivitySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivitySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivitySubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseProgressActivityWhereInput
}

input CaseProgressActivityUpdateInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutActivitiesInput
  activitieslit: CaseProgressActivityLitUpdateManyWithoutCaseProgressActivityIdInput
  activitiesnonlit: CaseProgressActivityNonlitUpdateManyWithoutCaseProgressActivityIdInput
}

input CaseProgressActivityUpdateManyDataInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
}

input CaseProgressActivityUpdateManyMutationInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
}

input CaseProgressActivityUpdateManyWithoutCaseIdInput {
  create: [CaseProgressActivityCreateWithoutCaseIdInput!]
  connect: [CaseProgressActivityWhereUniqueInput!]
  set: [CaseProgressActivityWhereUniqueInput!]
  disconnect: [CaseProgressActivityWhereUniqueInput!]
  delete: [CaseProgressActivityWhereUniqueInput!]
  update: [CaseProgressActivityUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseProgressActivityUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseProgressActivityScalarWhereInput!]
  upsert: [CaseProgressActivityUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseProgressActivityUpdateManyWithWhereNestedInput {
  where: CaseProgressActivityScalarWhereInput!
  data: CaseProgressActivityUpdateManyDataInput!
}

input CaseProgressActivityUpdateOneWithoutActivitieslitInput {
  create: CaseProgressActivityCreateWithoutActivitieslitInput
  connect: CaseProgressActivityWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaseProgressActivityUpdateWithoutActivitieslitDataInput
  upsert: CaseProgressActivityUpsertWithoutActivitieslitInput
}

input CaseProgressActivityUpdateOneWithoutActivitiesnonlitInput {
  create: CaseProgressActivityCreateWithoutActivitiesnonlitInput
  connect: CaseProgressActivityWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaseProgressActivityUpdateWithoutActivitiesnonlitDataInput
  upsert: CaseProgressActivityUpsertWithoutActivitiesnonlitInput
}

input CaseProgressActivityUpdateWithoutActivitieslitDataInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutActivitiesInput
  activitiesnonlit: CaseProgressActivityNonlitUpdateManyWithoutCaseProgressActivityIdInput
}

input CaseProgressActivityUpdateWithoutActivitiesnonlitDataInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutActivitiesInput
  activitieslit: CaseProgressActivityLitUpdateManyWithoutCaseProgressActivityIdInput
}

input CaseProgressActivityUpdateWithoutCaseIdDataInput {
  capaian: String
  createdBy: String
  hambatan: String
  judulAktifitas: String
  position: String
  rencanaStrategi: String
  targetAdvokasi: String
  tglAktifitas: DateTime
  updatedBy: String
  activitieslit: CaseProgressActivityLitUpdateManyWithoutCaseProgressActivityIdInput
  activitiesnonlit: CaseProgressActivityNonlitUpdateManyWithoutCaseProgressActivityIdInput
}

input CaseProgressActivityUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseProgressActivityWhereUniqueInput!
  data: CaseProgressActivityUpdateWithoutCaseIdDataInput!
}

input CaseProgressActivityUpsertWithoutActivitieslitInput {
  update: CaseProgressActivityUpdateWithoutActivitieslitDataInput!
  create: CaseProgressActivityCreateWithoutActivitieslitInput!
}

input CaseProgressActivityUpsertWithoutActivitiesnonlitInput {
  update: CaseProgressActivityUpdateWithoutActivitiesnonlitDataInput!
  create: CaseProgressActivityCreateWithoutActivitiesnonlitInput!
}

input CaseProgressActivityUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseProgressActivityWhereUniqueInput!
  update: CaseProgressActivityUpdateWithoutCaseIdDataInput!
  create: CaseProgressActivityCreateWithoutCaseIdInput!
}

input CaseProgressActivityWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressActivityWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressActivityWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressActivityWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  capaian: String

  """All values that are not equal to given value."""
  capaian_not: String

  """All values that are contained in given list."""
  capaian_in: [String!]

  """All values that are not contained in given list."""
  capaian_not_in: [String!]

  """All values less than the given value."""
  capaian_lt: String

  """All values less than or equal the given value."""
  capaian_lte: String

  """All values greater than the given value."""
  capaian_gt: String

  """All values greater than or equal the given value."""
  capaian_gte: String

  """All values containing the given string."""
  capaian_contains: String

  """All values not containing the given string."""
  capaian_not_contains: String

  """All values starting with the given string."""
  capaian_starts_with: String

  """All values not starting with the given string."""
  capaian_not_starts_with: String

  """All values ending with the given string."""
  capaian_ends_with: String

  """All values not ending with the given string."""
  capaian_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  hambatan: String

  """All values that are not equal to given value."""
  hambatan_not: String

  """All values that are contained in given list."""
  hambatan_in: [String!]

  """All values that are not contained in given list."""
  hambatan_not_in: [String!]

  """All values less than the given value."""
  hambatan_lt: String

  """All values less than or equal the given value."""
  hambatan_lte: String

  """All values greater than the given value."""
  hambatan_gt: String

  """All values greater than or equal the given value."""
  hambatan_gte: String

  """All values containing the given string."""
  hambatan_contains: String

  """All values not containing the given string."""
  hambatan_not_contains: String

  """All values starting with the given string."""
  hambatan_starts_with: String

  """All values not starting with the given string."""
  hambatan_not_starts_with: String

  """All values ending with the given string."""
  hambatan_ends_with: String

  """All values not ending with the given string."""
  hambatan_not_ends_with: String
  judulAktifitas: String

  """All values that are not equal to given value."""
  judulAktifitas_not: String

  """All values that are contained in given list."""
  judulAktifitas_in: [String!]

  """All values that are not contained in given list."""
  judulAktifitas_not_in: [String!]

  """All values less than the given value."""
  judulAktifitas_lt: String

  """All values less than or equal the given value."""
  judulAktifitas_lte: String

  """All values greater than the given value."""
  judulAktifitas_gt: String

  """All values greater than or equal the given value."""
  judulAktifitas_gte: String

  """All values containing the given string."""
  judulAktifitas_contains: String

  """All values not containing the given string."""
  judulAktifitas_not_contains: String

  """All values starting with the given string."""
  judulAktifitas_starts_with: String

  """All values not starting with the given string."""
  judulAktifitas_not_starts_with: String

  """All values ending with the given string."""
  judulAktifitas_ends_with: String

  """All values not ending with the given string."""
  judulAktifitas_not_ends_with: String
  position: String

  """All values that are not equal to given value."""
  position_not: String

  """All values that are contained in given list."""
  position_in: [String!]

  """All values that are not contained in given list."""
  position_not_in: [String!]

  """All values less than the given value."""
  position_lt: String

  """All values less than or equal the given value."""
  position_lte: String

  """All values greater than the given value."""
  position_gt: String

  """All values greater than or equal the given value."""
  position_gte: String

  """All values containing the given string."""
  position_contains: String

  """All values not containing the given string."""
  position_not_contains: String

  """All values starting with the given string."""
  position_starts_with: String

  """All values not starting with the given string."""
  position_not_starts_with: String

  """All values ending with the given string."""
  position_ends_with: String

  """All values not ending with the given string."""
  position_not_ends_with: String
  rencanaStrategi: String

  """All values that are not equal to given value."""
  rencanaStrategi_not: String

  """All values that are contained in given list."""
  rencanaStrategi_in: [String!]

  """All values that are not contained in given list."""
  rencanaStrategi_not_in: [String!]

  """All values less than the given value."""
  rencanaStrategi_lt: String

  """All values less than or equal the given value."""
  rencanaStrategi_lte: String

  """All values greater than the given value."""
  rencanaStrategi_gt: String

  """All values greater than or equal the given value."""
  rencanaStrategi_gte: String

  """All values containing the given string."""
  rencanaStrategi_contains: String

  """All values not containing the given string."""
  rencanaStrategi_not_contains: String

  """All values starting with the given string."""
  rencanaStrategi_starts_with: String

  """All values not starting with the given string."""
  rencanaStrategi_not_starts_with: String

  """All values ending with the given string."""
  rencanaStrategi_ends_with: String

  """All values not ending with the given string."""
  rencanaStrategi_not_ends_with: String
  targetAdvokasi: String

  """All values that are not equal to given value."""
  targetAdvokasi_not: String

  """All values that are contained in given list."""
  targetAdvokasi_in: [String!]

  """All values that are not contained in given list."""
  targetAdvokasi_not_in: [String!]

  """All values less than the given value."""
  targetAdvokasi_lt: String

  """All values less than or equal the given value."""
  targetAdvokasi_lte: String

  """All values greater than the given value."""
  targetAdvokasi_gt: String

  """All values greater than or equal the given value."""
  targetAdvokasi_gte: String

  """All values containing the given string."""
  targetAdvokasi_contains: String

  """All values not containing the given string."""
  targetAdvokasi_not_contains: String

  """All values starting with the given string."""
  targetAdvokasi_starts_with: String

  """All values not starting with the given string."""
  targetAdvokasi_not_starts_with: String

  """All values ending with the given string."""
  targetAdvokasi_ends_with: String

  """All values not ending with the given string."""
  targetAdvokasi_not_ends_with: String
  tglAktifitas: DateTime

  """All values that are not equal to given value."""
  tglAktifitas_not: DateTime

  """All values that are contained in given list."""
  tglAktifitas_in: [DateTime!]

  """All values that are not contained in given list."""
  tglAktifitas_not_in: [DateTime!]

  """All values less than the given value."""
  tglAktifitas_lt: DateTime

  """All values less than or equal the given value."""
  tglAktifitas_lte: DateTime

  """All values greater than the given value."""
  tglAktifitas_gt: DateTime

  """All values greater than or equal the given value."""
  tglAktifitas_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
  activitieslit_every: CaseProgressActivityLitWhereInput
  activitieslit_some: CaseProgressActivityLitWhereInput
  activitieslit_none: CaseProgressActivityLitWhereInput
  activitiesnonlit_every: CaseProgressActivityNonlitWhereInput
  activitiesnonlit_some: CaseProgressActivityNonlitWhereInput
  activitiesnonlit_none: CaseProgressActivityNonlitWhereInput
}

input CaseProgressActivityWhereUniqueInput {
  id: Int
}

"""A connection to a list of items."""
type CaseProgressConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseProgressEdge]!
  aggregate: AggregateCaseProgress!
}

input CaseProgressCreateInput {
  catatan: String
  createdBy: String
  jenisPeradilan: String
  updatedBy: String
  caseId: CaseCreateOneWithoutProgressesInput!
}

input CaseProgressCreateOneWithoutCaseIdInput {
  create: CaseProgressCreateWithoutCaseIdInput
  connect: CaseProgressWhereUniqueInput
}

input CaseProgressCreateWithoutCaseIdInput {
  catatan: String
  createdBy: String
  jenisPeradilan: String
  updatedBy: String
}

"""An edge in a connection."""
type CaseProgressEdge {
  """The item at the end of the edge."""
  node: CaseProgress!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseProgressOrderByInput {
  id_ASC
  id_DESC
  catatan_ASC
  catatan_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  jenisPeradilan_ASC
  jenisPeradilan_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CaseProgressPreviousValues {
  id: Int!
  catatan: String
  createdAt: DateTime!
  createdBy: String
  jenisPeradilan: String
  updatedAt: DateTime!
  updatedBy: String
}

type CaseProgressSubscriptionPayload {
  mutation: MutationType!
  node: CaseProgress
  updatedFields: [String!]
  previousValues: CaseProgressPreviousValues
}

input CaseProgressSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseProgressWhereInput
}

input CaseProgressUpdateInput {
  catatan: String
  createdBy: String
  jenisPeradilan: String
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutProgressesInput
}

input CaseProgressUpdateManyMutationInput {
  catatan: String
  createdBy: String
  jenisPeradilan: String
  updatedBy: String
}

input CaseProgressUpdateOneWithoutCaseIdInput {
  create: CaseProgressCreateWithoutCaseIdInput
  connect: CaseProgressWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaseProgressUpdateWithoutCaseIdDataInput
  upsert: CaseProgressUpsertWithoutCaseIdInput
}

input CaseProgressUpdateWithoutCaseIdDataInput {
  catatan: String
  createdBy: String
  jenisPeradilan: String
  updatedBy: String
}

input CaseProgressUpsertWithoutCaseIdInput {
  update: CaseProgressUpdateWithoutCaseIdDataInput!
  create: CaseProgressCreateWithoutCaseIdInput!
}

input CaseProgressWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseProgressWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseProgressWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseProgressWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  catatan: String

  """All values that are not equal to given value."""
  catatan_not: String

  """All values that are contained in given list."""
  catatan_in: [String!]

  """All values that are not contained in given list."""
  catatan_not_in: [String!]

  """All values less than the given value."""
  catatan_lt: String

  """All values less than or equal the given value."""
  catatan_lte: String

  """All values greater than the given value."""
  catatan_gt: String

  """All values greater than or equal the given value."""
  catatan_gte: String

  """All values containing the given string."""
  catatan_contains: String

  """All values not containing the given string."""
  catatan_not_contains: String

  """All values starting with the given string."""
  catatan_starts_with: String

  """All values not starting with the given string."""
  catatan_not_starts_with: String

  """All values ending with the given string."""
  catatan_ends_with: String

  """All values not ending with the given string."""
  catatan_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  jenisPeradilan: String

  """All values that are not equal to given value."""
  jenisPeradilan_not: String

  """All values that are contained in given list."""
  jenisPeradilan_in: [String!]

  """All values that are not contained in given list."""
  jenisPeradilan_not_in: [String!]

  """All values less than the given value."""
  jenisPeradilan_lt: String

  """All values less than or equal the given value."""
  jenisPeradilan_lte: String

  """All values greater than the given value."""
  jenisPeradilan_gt: String

  """All values greater than or equal the given value."""
  jenisPeradilan_gte: String

  """All values containing the given string."""
  jenisPeradilan_contains: String

  """All values not containing the given string."""
  jenisPeradilan_not_contains: String

  """All values starting with the given string."""
  jenisPeradilan_starts_with: String

  """All values not starting with the given string."""
  jenisPeradilan_not_starts_with: String

  """All values ending with the given string."""
  jenisPeradilan_ends_with: String

  """All values not ending with the given string."""
  jenisPeradilan_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
}

input CaseProgressWhereUniqueInput {
  id: Int
}

type CaseReferral {
  id: Int!
  caseId: Case!
  client: Person!
  tglTransfer: DateTime
  catatan: String
  network: Network
  createdBy: String
  updatedBy: String
}

"""A connection to a list of items."""
type CaseReferralConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseReferralEdge]!
  aggregate: AggregateCaseReferral!
}

input CaseReferralCreateInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  caseId: CaseCreateOneWithoutReferralsInput!
  client: PersonCreateOneInput!
  network: NetworkCreateOneInput
}

input CaseReferralCreateManyWithoutCaseIdInput {
  create: [CaseReferralCreateWithoutCaseIdInput!]
  connect: [CaseReferralWhereUniqueInput!]
}

input CaseReferralCreateWithoutCaseIdInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  client: PersonCreateOneInput!
  network: NetworkCreateOneInput
}

"""An edge in a connection."""
type CaseReferralEdge {
  """The item at the end of the edge."""
  node: CaseReferral!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseReferralOrderByInput {
  id_ASC
  id_DESC
  tglTransfer_ASC
  tglTransfer_DESC
  catatan_ASC
  catatan_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CaseReferralPreviousValues {
  id: Int!
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
}

input CaseReferralScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseReferralScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseReferralScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseReferralScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  tglTransfer: DateTime

  """All values that are not equal to given value."""
  tglTransfer_not: DateTime

  """All values that are contained in given list."""
  tglTransfer_in: [DateTime!]

  """All values that are not contained in given list."""
  tglTransfer_not_in: [DateTime!]

  """All values less than the given value."""
  tglTransfer_lt: DateTime

  """All values less than or equal the given value."""
  tglTransfer_lte: DateTime

  """All values greater than the given value."""
  tglTransfer_gt: DateTime

  """All values greater than or equal the given value."""
  tglTransfer_gte: DateTime
  catatan: String

  """All values that are not equal to given value."""
  catatan_not: String

  """All values that are contained in given list."""
  catatan_in: [String!]

  """All values that are not contained in given list."""
  catatan_not_in: [String!]

  """All values less than the given value."""
  catatan_lt: String

  """All values less than or equal the given value."""
  catatan_lte: String

  """All values greater than the given value."""
  catatan_gt: String

  """All values greater than or equal the given value."""
  catatan_gte: String

  """All values containing the given string."""
  catatan_contains: String

  """All values not containing the given string."""
  catatan_not_contains: String

  """All values starting with the given string."""
  catatan_starts_with: String

  """All values not starting with the given string."""
  catatan_not_starts_with: String

  """All values ending with the given string."""
  catatan_ends_with: String

  """All values not ending with the given string."""
  catatan_not_ends_with: String
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
}

type CaseReferralSubscriptionPayload {
  mutation: MutationType!
  node: CaseReferral
  updatedFields: [String!]
  previousValues: CaseReferralPreviousValues
}

input CaseReferralSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseReferralSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseReferralSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseReferralSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseReferralWhereInput
}

input CaseReferralUpdateInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutReferralsInput
  client: PersonUpdateOneRequiredInput
  network: NetworkUpdateOneInput
}

input CaseReferralUpdateManyDataInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
}

input CaseReferralUpdateManyMutationInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
}

input CaseReferralUpdateManyWithoutCaseIdInput {
  create: [CaseReferralCreateWithoutCaseIdInput!]
  connect: [CaseReferralWhereUniqueInput!]
  set: [CaseReferralWhereUniqueInput!]
  disconnect: [CaseReferralWhereUniqueInput!]
  delete: [CaseReferralWhereUniqueInput!]
  update: [CaseReferralUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseReferralUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseReferralScalarWhereInput!]
  upsert: [CaseReferralUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseReferralUpdateManyWithWhereNestedInput {
  where: CaseReferralScalarWhereInput!
  data: CaseReferralUpdateManyDataInput!
}

input CaseReferralUpdateWithoutCaseIdDataInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  client: PersonUpdateOneRequiredInput
  network: NetworkUpdateOneInput
}

input CaseReferralUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseReferralWhereUniqueInput!
  data: CaseReferralUpdateWithoutCaseIdDataInput!
}

input CaseReferralUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseReferralWhereUniqueInput!
  update: CaseReferralUpdateWithoutCaseIdDataInput!
  create: CaseReferralCreateWithoutCaseIdInput!
}

input CaseReferralWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseReferralWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseReferralWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseReferralWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  tglTransfer: DateTime

  """All values that are not equal to given value."""
  tglTransfer_not: DateTime

  """All values that are contained in given list."""
  tglTransfer_in: [DateTime!]

  """All values that are not contained in given list."""
  tglTransfer_not_in: [DateTime!]

  """All values less than the given value."""
  tglTransfer_lt: DateTime

  """All values less than or equal the given value."""
  tglTransfer_lte: DateTime

  """All values greater than the given value."""
  tglTransfer_gt: DateTime

  """All values greater than or equal the given value."""
  tglTransfer_gte: DateTime
  catatan: String

  """All values that are not equal to given value."""
  catatan_not: String

  """All values that are contained in given list."""
  catatan_in: [String!]

  """All values that are not contained in given list."""
  catatan_not_in: [String!]

  """All values less than the given value."""
  catatan_lt: String

  """All values less than or equal the given value."""
  catatan_lte: String

  """All values greater than the given value."""
  catatan_gt: String

  """All values greater than or equal the given value."""
  catatan_gte: String

  """All values containing the given string."""
  catatan_contains: String

  """All values not containing the given string."""
  catatan_not_contains: String

  """All values starting with the given string."""
  catatan_starts_with: String

  """All values not starting with the given string."""
  catatan_not_starts_with: String

  """All values ending with the given string."""
  catatan_ends_with: String

  """All values not ending with the given string."""
  catatan_not_ends_with: String
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
  client: PersonWhereInput
  network: NetworkWhereInput
}

input CaseReferralWhereUniqueInput {
  id: Int
}

type CaseSubscriptionPayload {
  mutation: MutationType!
  node: Case
  updatedFields: [String!]
  previousValues: CasePreviousValues
}

input CaseSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseWhereInput
}

type CaseTransfer {
  id: Int!
  caseId: Case!
  tglTransfer: DateTime
  catatan: String
  network: Network
  createdBy: String
  updatedBy: String
}

"""A connection to a list of items."""
type CaseTransferConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseTransferEdge]!
  aggregate: AggregateCaseTransfer!
}

input CaseTransferCreateInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  caseId: CaseCreateOneWithoutTransferInput!
  network: NetworkCreateOneInput
}

input CaseTransferCreateOneWithoutCaseIdInput {
  create: CaseTransferCreateWithoutCaseIdInput
  connect: CaseTransferWhereUniqueInput
}

input CaseTransferCreateWithoutCaseIdInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  network: NetworkCreateOneInput
}

"""An edge in a connection."""
type CaseTransferEdge {
  """The item at the end of the edge."""
  node: CaseTransfer!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseTransferOrderByInput {
  id_ASC
  id_DESC
  tglTransfer_ASC
  tglTransfer_DESC
  catatan_ASC
  catatan_DESC
  createdBy_ASC
  createdBy_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CaseTransferPreviousValues {
  id: Int!
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
}

type CaseTransferReferral {
  id: Int!
  caseId: Case!
  catatan: String
  createdAt: DateTime!
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedAt: DateTime!
  updatedBy: String
}

"""A connection to a list of items."""
type CaseTransferReferralConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseTransferReferralEdge]!
  aggregate: AggregateCaseTransferReferral!
}

input CaseTransferReferralCreateInput {
  catatan: String
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedBy: String
  caseId: CaseCreateOneWithoutTransferreferralsInput!
}

input CaseTransferReferralCreateManyWithoutCaseIdInput {
  create: [CaseTransferReferralCreateWithoutCaseIdInput!]
  connect: [CaseTransferReferralWhereUniqueInput!]
}

input CaseTransferReferralCreateWithoutCaseIdInput {
  catatan: String
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedBy: String
}

"""An edge in a connection."""
type CaseTransferReferralEdge {
  """The item at the end of the edge."""
  node: CaseTransferReferral!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseTransferReferralOrderByInput {
  id_ASC
  id_DESC
  catatan_ASC
  catatan_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  document_ASC
  document_DESC
  jenisTransferReferral_ASC
  jenisTransferReferral_DESC
  networkId_ASC
  networkId_DESC
  tglTransferReferral_ASC
  tglTransferReferral_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
}

type CaseTransferReferralPreviousValues {
  id: Int!
  catatan: String
  createdAt: DateTime!
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedAt: DateTime!
  updatedBy: String
}

input CaseTransferReferralScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseTransferReferralScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseTransferReferralScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseTransferReferralScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  catatan: String

  """All values that are not equal to given value."""
  catatan_not: String

  """All values that are contained in given list."""
  catatan_in: [String!]

  """All values that are not contained in given list."""
  catatan_not_in: [String!]

  """All values less than the given value."""
  catatan_lt: String

  """All values less than or equal the given value."""
  catatan_lte: String

  """All values greater than the given value."""
  catatan_gt: String

  """All values greater than or equal the given value."""
  catatan_gte: String

  """All values containing the given string."""
  catatan_contains: String

  """All values not containing the given string."""
  catatan_not_contains: String

  """All values starting with the given string."""
  catatan_starts_with: String

  """All values not starting with the given string."""
  catatan_not_starts_with: String

  """All values ending with the given string."""
  catatan_ends_with: String

  """All values not ending with the given string."""
  catatan_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  document: String

  """All values that are not equal to given value."""
  document_not: String

  """All values that are contained in given list."""
  document_in: [String!]

  """All values that are not contained in given list."""
  document_not_in: [String!]

  """All values less than the given value."""
  document_lt: String

  """All values less than or equal the given value."""
  document_lte: String

  """All values greater than the given value."""
  document_gt: String

  """All values greater than or equal the given value."""
  document_gte: String

  """All values containing the given string."""
  document_contains: String

  """All values not containing the given string."""
  document_not_contains: String

  """All values starting with the given string."""
  document_starts_with: String

  """All values not starting with the given string."""
  document_not_starts_with: String

  """All values ending with the given string."""
  document_ends_with: String

  """All values not ending with the given string."""
  document_not_ends_with: String
  jenisTransferReferral: String

  """All values that are not equal to given value."""
  jenisTransferReferral_not: String

  """All values that are contained in given list."""
  jenisTransferReferral_in: [String!]

  """All values that are not contained in given list."""
  jenisTransferReferral_not_in: [String!]

  """All values less than the given value."""
  jenisTransferReferral_lt: String

  """All values less than or equal the given value."""
  jenisTransferReferral_lte: String

  """All values greater than the given value."""
  jenisTransferReferral_gt: String

  """All values greater than or equal the given value."""
  jenisTransferReferral_gte: String

  """All values containing the given string."""
  jenisTransferReferral_contains: String

  """All values not containing the given string."""
  jenisTransferReferral_not_contains: String

  """All values starting with the given string."""
  jenisTransferReferral_starts_with: String

  """All values not starting with the given string."""
  jenisTransferReferral_not_starts_with: String

  """All values ending with the given string."""
  jenisTransferReferral_ends_with: String

  """All values not ending with the given string."""
  jenisTransferReferral_not_ends_with: String
  networkId: Int

  """All values that are not equal to given value."""
  networkId_not: Int

  """All values that are contained in given list."""
  networkId_in: [Int!]

  """All values that are not contained in given list."""
  networkId_not_in: [Int!]

  """All values less than the given value."""
  networkId_lt: Int

  """All values less than or equal the given value."""
  networkId_lte: Int

  """All values greater than the given value."""
  networkId_gt: Int

  """All values greater than or equal the given value."""
  networkId_gte: Int
  tglTransferReferral: DateTime

  """All values that are not equal to given value."""
  tglTransferReferral_not: DateTime

  """All values that are contained in given list."""
  tglTransferReferral_in: [DateTime!]

  """All values that are not contained in given list."""
  tglTransferReferral_not_in: [DateTime!]

  """All values less than the given value."""
  tglTransferReferral_lt: DateTime

  """All values less than or equal the given value."""
  tglTransferReferral_lte: DateTime

  """All values greater than the given value."""
  tglTransferReferral_gt: DateTime

  """All values greater than or equal the given value."""
  tglTransferReferral_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
}

type CaseTransferReferralSubscriptionPayload {
  mutation: MutationType!
  node: CaseTransferReferral
  updatedFields: [String!]
  previousValues: CaseTransferReferralPreviousValues
}

input CaseTransferReferralSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseTransferReferralSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseTransferReferralSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseTransferReferralSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseTransferReferralWhereInput
}

input CaseTransferReferralUpdateInput {
  catatan: String
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutTransferreferralsInput
}

input CaseTransferReferralUpdateManyDataInput {
  catatan: String
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedBy: String
}

input CaseTransferReferralUpdateManyMutationInput {
  catatan: String
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedBy: String
}

input CaseTransferReferralUpdateManyWithoutCaseIdInput {
  create: [CaseTransferReferralCreateWithoutCaseIdInput!]
  connect: [CaseTransferReferralWhereUniqueInput!]
  set: [CaseTransferReferralWhereUniqueInput!]
  disconnect: [CaseTransferReferralWhereUniqueInput!]
  delete: [CaseTransferReferralWhereUniqueInput!]
  update: [CaseTransferReferralUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseTransferReferralUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseTransferReferralScalarWhereInput!]
  upsert: [CaseTransferReferralUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseTransferReferralUpdateManyWithWhereNestedInput {
  where: CaseTransferReferralScalarWhereInput!
  data: CaseTransferReferralUpdateManyDataInput!
}

input CaseTransferReferralUpdateWithoutCaseIdDataInput {
  catatan: String
  createdBy: String
  document: String
  jenisTransferReferral: String
  networkId: Int
  tglTransferReferral: DateTime
  updatedBy: String
}

input CaseTransferReferralUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseTransferReferralWhereUniqueInput!
  data: CaseTransferReferralUpdateWithoutCaseIdDataInput!
}

input CaseTransferReferralUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseTransferReferralWhereUniqueInput!
  update: CaseTransferReferralUpdateWithoutCaseIdDataInput!
  create: CaseTransferReferralCreateWithoutCaseIdInput!
}

input CaseTransferReferralWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseTransferReferralWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseTransferReferralWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseTransferReferralWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  catatan: String

  """All values that are not equal to given value."""
  catatan_not: String

  """All values that are contained in given list."""
  catatan_in: [String!]

  """All values that are not contained in given list."""
  catatan_not_in: [String!]

  """All values less than the given value."""
  catatan_lt: String

  """All values less than or equal the given value."""
  catatan_lte: String

  """All values greater than the given value."""
  catatan_gt: String

  """All values greater than or equal the given value."""
  catatan_gte: String

  """All values containing the given string."""
  catatan_contains: String

  """All values not containing the given string."""
  catatan_not_contains: String

  """All values starting with the given string."""
  catatan_starts_with: String

  """All values not starting with the given string."""
  catatan_not_starts_with: String

  """All values ending with the given string."""
  catatan_ends_with: String

  """All values not ending with the given string."""
  catatan_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  document: String

  """All values that are not equal to given value."""
  document_not: String

  """All values that are contained in given list."""
  document_in: [String!]

  """All values that are not contained in given list."""
  document_not_in: [String!]

  """All values less than the given value."""
  document_lt: String

  """All values less than or equal the given value."""
  document_lte: String

  """All values greater than the given value."""
  document_gt: String

  """All values greater than or equal the given value."""
  document_gte: String

  """All values containing the given string."""
  document_contains: String

  """All values not containing the given string."""
  document_not_contains: String

  """All values starting with the given string."""
  document_starts_with: String

  """All values not starting with the given string."""
  document_not_starts_with: String

  """All values ending with the given string."""
  document_ends_with: String

  """All values not ending with the given string."""
  document_not_ends_with: String
  jenisTransferReferral: String

  """All values that are not equal to given value."""
  jenisTransferReferral_not: String

  """All values that are contained in given list."""
  jenisTransferReferral_in: [String!]

  """All values that are not contained in given list."""
  jenisTransferReferral_not_in: [String!]

  """All values less than the given value."""
  jenisTransferReferral_lt: String

  """All values less than or equal the given value."""
  jenisTransferReferral_lte: String

  """All values greater than the given value."""
  jenisTransferReferral_gt: String

  """All values greater than or equal the given value."""
  jenisTransferReferral_gte: String

  """All values containing the given string."""
  jenisTransferReferral_contains: String

  """All values not containing the given string."""
  jenisTransferReferral_not_contains: String

  """All values starting with the given string."""
  jenisTransferReferral_starts_with: String

  """All values not starting with the given string."""
  jenisTransferReferral_not_starts_with: String

  """All values ending with the given string."""
  jenisTransferReferral_ends_with: String

  """All values not ending with the given string."""
  jenisTransferReferral_not_ends_with: String
  networkId: Int

  """All values that are not equal to given value."""
  networkId_not: Int

  """All values that are contained in given list."""
  networkId_in: [Int!]

  """All values that are not contained in given list."""
  networkId_not_in: [Int!]

  """All values less than the given value."""
  networkId_lt: Int

  """All values less than or equal the given value."""
  networkId_lte: Int

  """All values greater than the given value."""
  networkId_gt: Int

  """All values greater than or equal the given value."""
  networkId_gte: Int
  tglTransferReferral: DateTime

  """All values that are not equal to given value."""
  tglTransferReferral_not: DateTime

  """All values that are contained in given list."""
  tglTransferReferral_in: [DateTime!]

  """All values that are not contained in given list."""
  tglTransferReferral_not_in: [DateTime!]

  """All values less than the given value."""
  tglTransferReferral_lt: DateTime

  """All values less than or equal the given value."""
  tglTransferReferral_lte: DateTime

  """All values greater than the given value."""
  tglTransferReferral_gt: DateTime

  """All values greater than or equal the given value."""
  tglTransferReferral_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
}

input CaseTransferReferralWhereUniqueInput {
  id: Int
}

type CaseTransferSubscriptionPayload {
  mutation: MutationType!
  node: CaseTransfer
  updatedFields: [String!]
  previousValues: CaseTransferPreviousValues
}

input CaseTransferSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseTransferSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseTransferSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseTransferSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseTransferWhereInput
}

input CaseTransferUpdateInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  caseId: CaseUpdateOneRequiredWithoutTransferInput
  network: NetworkUpdateOneInput
}

input CaseTransferUpdateManyMutationInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
}

input CaseTransferUpdateOneWithoutCaseIdInput {
  create: CaseTransferCreateWithoutCaseIdInput
  connect: CaseTransferWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaseTransferUpdateWithoutCaseIdDataInput
  upsert: CaseTransferUpsertWithoutCaseIdInput
}

input CaseTransferUpdateWithoutCaseIdDataInput {
  tglTransfer: DateTime
  catatan: String
  createdBy: String
  updatedBy: String
  network: NetworkUpdateOneInput
}

input CaseTransferUpsertWithoutCaseIdInput {
  update: CaseTransferUpdateWithoutCaseIdDataInput!
  create: CaseTransferCreateWithoutCaseIdInput!
}

input CaseTransferWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseTransferWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseTransferWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseTransferWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  tglTransfer: DateTime

  """All values that are not equal to given value."""
  tglTransfer_not: DateTime

  """All values that are contained in given list."""
  tglTransfer_in: [DateTime!]

  """All values that are not contained in given list."""
  tglTransfer_not_in: [DateTime!]

  """All values less than the given value."""
  tglTransfer_lt: DateTime

  """All values less than or equal the given value."""
  tglTransfer_lte: DateTime

  """All values greater than the given value."""
  tglTransfer_gt: DateTime

  """All values greater than or equal the given value."""
  tglTransfer_gte: DateTime
  catatan: String

  """All values that are not equal to given value."""
  catatan_not: String

  """All values that are contained in given list."""
  catatan_in: [String!]

  """All values that are not contained in given list."""
  catatan_not_in: [String!]

  """All values less than the given value."""
  catatan_lt: String

  """All values less than or equal the given value."""
  catatan_lte: String

  """All values greater than the given value."""
  catatan_gt: String

  """All values greater than or equal the given value."""
  catatan_gte: String

  """All values containing the given string."""
  catatan_contains: String

  """All values not containing the given string."""
  catatan_not_contains: String

  """All values starting with the given string."""
  catatan_starts_with: String

  """All values not starting with the given string."""
  catatan_not_starts_with: String

  """All values ending with the given string."""
  catatan_ends_with: String

  """All values not ending with the given string."""
  catatan_not_ends_with: String
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  caseId: CaseWhereInput
  network: NetworkWhereInput
}

input CaseTransferWhereUniqueInput {
  id: Int
}

input CaseUpdateInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateManyMutationInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
}

input CaseUpdateOneRequiredWithoutActivitiesInput {
  create: CaseCreateWithoutActivitiesInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutActivitiesDataInput
  upsert: CaseUpsertWithoutActivitiesInput
}

input CaseUpdateOneRequiredWithoutClassificationsInput {
  create: CaseCreateWithoutClassificationsInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutClassificationsDataInput
  upsert: CaseUpsertWithoutClassificationsInput
}

input CaseUpdateOneRequiredWithoutConsultationsInput {
  create: CaseCreateWithoutConsultationsInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutConsultationsDataInput
  upsert: CaseUpsertWithoutConsultationsInput
}

input CaseUpdateOneRequiredWithoutDocumentsInput {
  create: CaseCreateWithoutDocumentsInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutDocumentsDataInput
  upsert: CaseUpsertWithoutDocumentsInput
}

input CaseUpdateOneRequiredWithoutIssuesInput {
  create: CaseCreateWithoutIssuesInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutIssuesDataInput
  upsert: CaseUpsertWithoutIssuesInput
}

input CaseUpdateOneRequiredWithoutKorbansInput {
  create: CaseCreateWithoutKorbansInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutKorbansDataInput
  upsert: CaseUpsertWithoutKorbansInput
}

input CaseUpdateOneRequiredWithoutPelakusInput {
  create: CaseCreateWithoutPelakusInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutPelakusDataInput
  upsert: CaseUpsertWithoutPelakusInput
}

input CaseUpdateOneRequiredWithoutPkInput {
  create: CaseCreateWithoutPkInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutPkDataInput
  upsert: CaseUpsertWithoutPkInput
}

input CaseUpdateOneRequiredWithoutProgressesInput {
  create: CaseCreateWithoutProgressesInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutProgressesDataInput
  upsert: CaseUpsertWithoutProgressesInput
}

input CaseUpdateOneRequiredWithoutReferralsInput {
  create: CaseCreateWithoutReferralsInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutReferralsDataInput
  upsert: CaseUpsertWithoutReferralsInput
}

input CaseUpdateOneRequiredWithoutTransferInput {
  create: CaseCreateWithoutTransferInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutTransferDataInput
  upsert: CaseUpsertWithoutTransferInput
}

input CaseUpdateOneRequiredWithoutTransferreferralsInput {
  create: CaseCreateWithoutTransferreferralsInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutTransferreferralsDataInput
  upsert: CaseUpsertWithoutTransferreferralsInput
}

input CaseUpdateOneRequiredWithoutViolatedrightsInput {
  create: CaseCreateWithoutViolatedrightsInput
  connect: CaseWhereUniqueInput
  update: CaseUpdateWithoutViolatedrightsDataInput
  upsert: CaseUpsertWithoutViolatedrightsInput
}

input CaseUpdateOneWithoutApplicationInput {
  create: CaseCreateWithoutApplicationInput
  connect: CaseWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaseUpdateWithoutApplicationDataInput
  upsert: CaseUpsertWithoutApplicationInput
}

input CaseUpdateOneWithoutLogRequestsInput {
  create: CaseCreateWithoutLogRequestsInput
  connect: CaseWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaseUpdateWithoutLogRequestsDataInput
  upsert: CaseUpsertWithoutLogRequestsInput
}

input CaseUpdateWithoutActivitiesDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutApplicationDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutClassificationsDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutConsultationsDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutDocumentsDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutIssuesDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutKorbansDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutLogRequestsDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutPelakusDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutPkDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutProgressesDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutReferralsDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
}

input CaseUpdateWithoutTransferDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutTransferreferralsDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  violatedrights: CaseViolatedRightUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpdateWithoutViolatedrightsDataInput {
  applicationId: Int
  caseClosed: Boolean
  caseClosedJenis: String
  createdBy: String
  hakTerlanggar: String
  issue: String
  judulKasus: String
  klasifikasiDok: String
  kronologiKasus: String
  lockDitolak: Boolean
  statusPendampingan: String
  targetAdvokasi: String
  unlockPk: Boolean
  unlockTransfer: Boolean
  updatedBy: String
  application: ApplicationUpdateOneRequiredWithoutCaseInput
  classifications: CaseClassificationUpdateManyWithoutCaseIdInput
  consultations: CaseConsultationUpdateManyWithoutCaseIdInput
  documents: CaseDocumentUpdateManyWithoutCaseIdInput
  issues: CaseIssueUpdateManyWithoutCaseIdInput
  korbans: CaseKorbanUpdateManyWithoutCaseIdInput
  pelakus: CasePelakuUpdateManyWithoutCaseIdInput
  pk: CasePkUpdateOneWithoutCaseIdInput
  progresses: CaseProgressUpdateOneWithoutCaseIdInput
  activities: CaseProgressActivityUpdateManyWithoutCaseIdInput
  transferreferrals: CaseTransferReferralUpdateManyWithoutCaseIdInput
  logRequests: LogRequestUpdateManyWithoutCaseIdInput
  transfer: CaseTransferUpdateOneWithoutCaseIdInput
  referrals: CaseReferralUpdateManyWithoutCaseIdInput
}

input CaseUpsertWithoutActivitiesInput {
  update: CaseUpdateWithoutActivitiesDataInput!
  create: CaseCreateWithoutActivitiesInput!
}

input CaseUpsertWithoutApplicationInput {
  update: CaseUpdateWithoutApplicationDataInput!
  create: CaseCreateWithoutApplicationInput!
}

input CaseUpsertWithoutClassificationsInput {
  update: CaseUpdateWithoutClassificationsDataInput!
  create: CaseCreateWithoutClassificationsInput!
}

input CaseUpsertWithoutConsultationsInput {
  update: CaseUpdateWithoutConsultationsDataInput!
  create: CaseCreateWithoutConsultationsInput!
}

input CaseUpsertWithoutDocumentsInput {
  update: CaseUpdateWithoutDocumentsDataInput!
  create: CaseCreateWithoutDocumentsInput!
}

input CaseUpsertWithoutIssuesInput {
  update: CaseUpdateWithoutIssuesDataInput!
  create: CaseCreateWithoutIssuesInput!
}

input CaseUpsertWithoutKorbansInput {
  update: CaseUpdateWithoutKorbansDataInput!
  create: CaseCreateWithoutKorbansInput!
}

input CaseUpsertWithoutLogRequestsInput {
  update: CaseUpdateWithoutLogRequestsDataInput!
  create: CaseCreateWithoutLogRequestsInput!
}

input CaseUpsertWithoutPelakusInput {
  update: CaseUpdateWithoutPelakusDataInput!
  create: CaseCreateWithoutPelakusInput!
}

input CaseUpsertWithoutPkInput {
  update: CaseUpdateWithoutPkDataInput!
  create: CaseCreateWithoutPkInput!
}

input CaseUpsertWithoutProgressesInput {
  update: CaseUpdateWithoutProgressesDataInput!
  create: CaseCreateWithoutProgressesInput!
}

input CaseUpsertWithoutReferralsInput {
  update: CaseUpdateWithoutReferralsDataInput!
  create: CaseCreateWithoutReferralsInput!
}

input CaseUpsertWithoutTransferInput {
  update: CaseUpdateWithoutTransferDataInput!
  create: CaseCreateWithoutTransferInput!
}

input CaseUpsertWithoutTransferreferralsInput {
  update: CaseUpdateWithoutTransferreferralsDataInput!
  create: CaseCreateWithoutTransferreferralsInput!
}

input CaseUpsertWithoutViolatedrightsInput {
  update: CaseUpdateWithoutViolatedrightsDataInput!
  create: CaseCreateWithoutViolatedrightsInput!
}

type CaseViolatedRight {
  id: Int!
  caseId: Case!
  kodeMt: String
}

"""A connection to a list of items."""
type CaseViolatedRightConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaseViolatedRightEdge]!
  aggregate: AggregateCaseViolatedRight!
}

input CaseViolatedRightCreateInput {
  kodeMt: String
  caseId: CaseCreateOneWithoutViolatedrightsInput!
}

input CaseViolatedRightCreateManyWithoutCaseIdInput {
  create: [CaseViolatedRightCreateWithoutCaseIdInput!]
  connect: [CaseViolatedRightWhereUniqueInput!]
}

input CaseViolatedRightCreateWithoutCaseIdInput {
  kodeMt: String
}

"""An edge in a connection."""
type CaseViolatedRightEdge {
  """The item at the end of the edge."""
  node: CaseViolatedRight!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaseViolatedRightOrderByInput {
  id_ASC
  id_DESC
  kodeMt_ASC
  kodeMt_DESC
}

type CaseViolatedRightPreviousValues {
  id: Int!
  kodeMt: String
}

input CaseViolatedRightScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseViolatedRightScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseViolatedRightScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseViolatedRightScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
}

type CaseViolatedRightSubscriptionPayload {
  mutation: MutationType!
  node: CaseViolatedRight
  updatedFields: [String!]
  previousValues: CaseViolatedRightPreviousValues
}

input CaseViolatedRightSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseViolatedRightSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseViolatedRightSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseViolatedRightSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaseViolatedRightWhereInput
}

input CaseViolatedRightUpdateInput {
  kodeMt: String
  caseId: CaseUpdateOneRequiredWithoutViolatedrightsInput
}

input CaseViolatedRightUpdateManyDataInput {
  kodeMt: String
}

input CaseViolatedRightUpdateManyMutationInput {
  kodeMt: String
}

input CaseViolatedRightUpdateManyWithoutCaseIdInput {
  create: [CaseViolatedRightCreateWithoutCaseIdInput!]
  connect: [CaseViolatedRightWhereUniqueInput!]
  set: [CaseViolatedRightWhereUniqueInput!]
  disconnect: [CaseViolatedRightWhereUniqueInput!]
  delete: [CaseViolatedRightWhereUniqueInput!]
  update: [CaseViolatedRightUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [CaseViolatedRightUpdateManyWithWhereNestedInput!]
  deleteMany: [CaseViolatedRightScalarWhereInput!]
  upsert: [CaseViolatedRightUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input CaseViolatedRightUpdateManyWithWhereNestedInput {
  where: CaseViolatedRightScalarWhereInput!
  data: CaseViolatedRightUpdateManyDataInput!
}

input CaseViolatedRightUpdateWithoutCaseIdDataInput {
  kodeMt: String
}

input CaseViolatedRightUpdateWithWhereUniqueWithoutCaseIdInput {
  where: CaseViolatedRightWhereUniqueInput!
  data: CaseViolatedRightUpdateWithoutCaseIdDataInput!
}

input CaseViolatedRightUpsertWithWhereUniqueWithoutCaseIdInput {
  where: CaseViolatedRightWhereUniqueInput!
  update: CaseViolatedRightUpdateWithoutCaseIdDataInput!
  create: CaseViolatedRightCreateWithoutCaseIdInput!
}

input CaseViolatedRightWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseViolatedRightWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseViolatedRightWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseViolatedRightWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  kodeMt: String

  """All values that are not equal to given value."""
  kodeMt_not: String

  """All values that are contained in given list."""
  kodeMt_in: [String!]

  """All values that are not contained in given list."""
  kodeMt_not_in: [String!]

  """All values less than the given value."""
  kodeMt_lt: String

  """All values less than or equal the given value."""
  kodeMt_lte: String

  """All values greater than the given value."""
  kodeMt_gt: String

  """All values greater than or equal the given value."""
  kodeMt_gte: String

  """All values containing the given string."""
  kodeMt_contains: String

  """All values not containing the given string."""
  kodeMt_not_contains: String

  """All values starting with the given string."""
  kodeMt_starts_with: String

  """All values not starting with the given string."""
  kodeMt_not_starts_with: String

  """All values ending with the given string."""
  kodeMt_ends_with: String

  """All values not ending with the given string."""
  kodeMt_not_ends_with: String
  caseId: CaseWhereInput
}

input CaseViolatedRightWhereUniqueInput {
  id: Int
}

input CaseWhereInput {
  """Logical AND on all given filters."""
  AND: [CaseWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaseWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaseWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  applicationId: Int

  """All values that are not equal to given value."""
  applicationId_not: Int

  """All values that are contained in given list."""
  applicationId_in: [Int!]

  """All values that are not contained in given list."""
  applicationId_not_in: [Int!]

  """All values less than the given value."""
  applicationId_lt: Int

  """All values less than or equal the given value."""
  applicationId_lte: Int

  """All values greater than the given value."""
  applicationId_gt: Int

  """All values greater than or equal the given value."""
  applicationId_gte: Int
  caseClosed: Boolean

  """All values that are not equal to given value."""
  caseClosed_not: Boolean
  caseClosedJenis: String

  """All values that are not equal to given value."""
  caseClosedJenis_not: String

  """All values that are contained in given list."""
  caseClosedJenis_in: [String!]

  """All values that are not contained in given list."""
  caseClosedJenis_not_in: [String!]

  """All values less than the given value."""
  caseClosedJenis_lt: String

  """All values less than or equal the given value."""
  caseClosedJenis_lte: String

  """All values greater than the given value."""
  caseClosedJenis_gt: String

  """All values greater than or equal the given value."""
  caseClosedJenis_gte: String

  """All values containing the given string."""
  caseClosedJenis_contains: String

  """All values not containing the given string."""
  caseClosedJenis_not_contains: String

  """All values starting with the given string."""
  caseClosedJenis_starts_with: String

  """All values not starting with the given string."""
  caseClosedJenis_not_starts_with: String

  """All values ending with the given string."""
  caseClosedJenis_ends_with: String

  """All values not ending with the given string."""
  caseClosedJenis_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  hakTerlanggar: String

  """All values that are not equal to given value."""
  hakTerlanggar_not: String

  """All values that are contained in given list."""
  hakTerlanggar_in: [String!]

  """All values that are not contained in given list."""
  hakTerlanggar_not_in: [String!]

  """All values less than the given value."""
  hakTerlanggar_lt: String

  """All values less than or equal the given value."""
  hakTerlanggar_lte: String

  """All values greater than the given value."""
  hakTerlanggar_gt: String

  """All values greater than or equal the given value."""
  hakTerlanggar_gte: String

  """All values containing the given string."""
  hakTerlanggar_contains: String

  """All values not containing the given string."""
  hakTerlanggar_not_contains: String

  """All values starting with the given string."""
  hakTerlanggar_starts_with: String

  """All values not starting with the given string."""
  hakTerlanggar_not_starts_with: String

  """All values ending with the given string."""
  hakTerlanggar_ends_with: String

  """All values not ending with the given string."""
  hakTerlanggar_not_ends_with: String
  issue: String

  """All values that are not equal to given value."""
  issue_not: String

  """All values that are contained in given list."""
  issue_in: [String!]

  """All values that are not contained in given list."""
  issue_not_in: [String!]

  """All values less than the given value."""
  issue_lt: String

  """All values less than or equal the given value."""
  issue_lte: String

  """All values greater than the given value."""
  issue_gt: String

  """All values greater than or equal the given value."""
  issue_gte: String

  """All values containing the given string."""
  issue_contains: String

  """All values not containing the given string."""
  issue_not_contains: String

  """All values starting with the given string."""
  issue_starts_with: String

  """All values not starting with the given string."""
  issue_not_starts_with: String

  """All values ending with the given string."""
  issue_ends_with: String

  """All values not ending with the given string."""
  issue_not_ends_with: String
  judulKasus: String

  """All values that are not equal to given value."""
  judulKasus_not: String

  """All values that are contained in given list."""
  judulKasus_in: [String!]

  """All values that are not contained in given list."""
  judulKasus_not_in: [String!]

  """All values less than the given value."""
  judulKasus_lt: String

  """All values less than or equal the given value."""
  judulKasus_lte: String

  """All values greater than the given value."""
  judulKasus_gt: String

  """All values greater than or equal the given value."""
  judulKasus_gte: String

  """All values containing the given string."""
  judulKasus_contains: String

  """All values not containing the given string."""
  judulKasus_not_contains: String

  """All values starting with the given string."""
  judulKasus_starts_with: String

  """All values not starting with the given string."""
  judulKasus_not_starts_with: String

  """All values ending with the given string."""
  judulKasus_ends_with: String

  """All values not ending with the given string."""
  judulKasus_not_ends_with: String
  klasifikasiDok: String

  """All values that are not equal to given value."""
  klasifikasiDok_not: String

  """All values that are contained in given list."""
  klasifikasiDok_in: [String!]

  """All values that are not contained in given list."""
  klasifikasiDok_not_in: [String!]

  """All values less than the given value."""
  klasifikasiDok_lt: String

  """All values less than or equal the given value."""
  klasifikasiDok_lte: String

  """All values greater than the given value."""
  klasifikasiDok_gt: String

  """All values greater than or equal the given value."""
  klasifikasiDok_gte: String

  """All values containing the given string."""
  klasifikasiDok_contains: String

  """All values not containing the given string."""
  klasifikasiDok_not_contains: String

  """All values starting with the given string."""
  klasifikasiDok_starts_with: String

  """All values not starting with the given string."""
  klasifikasiDok_not_starts_with: String

  """All values ending with the given string."""
  klasifikasiDok_ends_with: String

  """All values not ending with the given string."""
  klasifikasiDok_not_ends_with: String
  kronologiKasus: String

  """All values that are not equal to given value."""
  kronologiKasus_not: String

  """All values that are contained in given list."""
  kronologiKasus_in: [String!]

  """All values that are not contained in given list."""
  kronologiKasus_not_in: [String!]

  """All values less than the given value."""
  kronologiKasus_lt: String

  """All values less than or equal the given value."""
  kronologiKasus_lte: String

  """All values greater than the given value."""
  kronologiKasus_gt: String

  """All values greater than or equal the given value."""
  kronologiKasus_gte: String

  """All values containing the given string."""
  kronologiKasus_contains: String

  """All values not containing the given string."""
  kronologiKasus_not_contains: String

  """All values starting with the given string."""
  kronologiKasus_starts_with: String

  """All values not starting with the given string."""
  kronologiKasus_not_starts_with: String

  """All values ending with the given string."""
  kronologiKasus_ends_with: String

  """All values not ending with the given string."""
  kronologiKasus_not_ends_with: String
  lockDitolak: Boolean

  """All values that are not equal to given value."""
  lockDitolak_not: Boolean
  statusPendampingan: String

  """All values that are not equal to given value."""
  statusPendampingan_not: String

  """All values that are contained in given list."""
  statusPendampingan_in: [String!]

  """All values that are not contained in given list."""
  statusPendampingan_not_in: [String!]

  """All values less than the given value."""
  statusPendampingan_lt: String

  """All values less than or equal the given value."""
  statusPendampingan_lte: String

  """All values greater than the given value."""
  statusPendampingan_gt: String

  """All values greater than or equal the given value."""
  statusPendampingan_gte: String

  """All values containing the given string."""
  statusPendampingan_contains: String

  """All values not containing the given string."""
  statusPendampingan_not_contains: String

  """All values starting with the given string."""
  statusPendampingan_starts_with: String

  """All values not starting with the given string."""
  statusPendampingan_not_starts_with: String

  """All values ending with the given string."""
  statusPendampingan_ends_with: String

  """All values not ending with the given string."""
  statusPendampingan_not_ends_with: String
  targetAdvokasi: String

  """All values that are not equal to given value."""
  targetAdvokasi_not: String

  """All values that are contained in given list."""
  targetAdvokasi_in: [String!]

  """All values that are not contained in given list."""
  targetAdvokasi_not_in: [String!]

  """All values less than the given value."""
  targetAdvokasi_lt: String

  """All values less than or equal the given value."""
  targetAdvokasi_lte: String

  """All values greater than the given value."""
  targetAdvokasi_gt: String

  """All values greater than or equal the given value."""
  targetAdvokasi_gte: String

  """All values containing the given string."""
  targetAdvokasi_contains: String

  """All values not containing the given string."""
  targetAdvokasi_not_contains: String

  """All values starting with the given string."""
  targetAdvokasi_starts_with: String

  """All values not starting with the given string."""
  targetAdvokasi_not_starts_with: String

  """All values ending with the given string."""
  targetAdvokasi_ends_with: String

  """All values not ending with the given string."""
  targetAdvokasi_not_ends_with: String
  unlockPk: Boolean

  """All values that are not equal to given value."""
  unlockPk_not: Boolean
  unlockTransfer: Boolean

  """All values that are not equal to given value."""
  unlockTransfer_not: Boolean
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  application: ApplicationWhereInput
  classifications_every: CaseClassificationWhereInput
  classifications_some: CaseClassificationWhereInput
  classifications_none: CaseClassificationWhereInput
  consultations_every: CaseConsultationWhereInput
  consultations_some: CaseConsultationWhereInput
  consultations_none: CaseConsultationWhereInput
  documents_every: CaseDocumentWhereInput
  documents_some: CaseDocumentWhereInput
  documents_none: CaseDocumentWhereInput
  issues_every: CaseIssueWhereInput
  issues_some: CaseIssueWhereInput
  issues_none: CaseIssueWhereInput
  korbans_every: CaseKorbanWhereInput
  korbans_some: CaseKorbanWhereInput
  korbans_none: CaseKorbanWhereInput
  pelakus_every: CasePelakuWhereInput
  pelakus_some: CasePelakuWhereInput
  pelakus_none: CasePelakuWhereInput
  pk: CasePkWhereInput
  progresses: CaseProgressWhereInput
  activities_every: CaseProgressActivityWhereInput
  activities_some: CaseProgressActivityWhereInput
  activities_none: CaseProgressActivityWhereInput
  transferreferrals_every: CaseTransferReferralWhereInput
  transferreferrals_some: CaseTransferReferralWhereInput
  transferreferrals_none: CaseTransferReferralWhereInput
  violatedrights_every: CaseViolatedRightWhereInput
  violatedrights_some: CaseViolatedRightWhereInput
  violatedrights_none: CaseViolatedRightWhereInput
  logRequests_every: LogRequestWhereInput
  logRequests_some: LogRequestWhereInput
  logRequests_none: LogRequestWhereInput
  transfer: CaseTransferWhereInput
  referrals_every: CaseReferralWhereInput
  referrals_some: CaseReferralWhereInput
  referrals_none: CaseReferralWhereInput
}

input CaseWhereUniqueInput {
  id: Int
}

type Client {
  id: Int!
  alamatLokasi: String
  applicationId: Application!
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdAt: DateTime!
  createdBy: String
  pendapatan: String
  personId: Person!
  sktm: Boolean!
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedAt: DateTime!
  updatedBy: String
  usiaSaatKlien: Int
  logRequests(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequest!]
}

"""A connection to a list of items."""
type ClientConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ClientEdge]!
  aggregate: AggregateClient!
}

input ClientCreateInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean!
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
  applicationId: ApplicationCreateOneWithoutClientsInput!
  personId: PersonCreateOneWithoutClientsInput!
  logRequests: LogRequestCreateManyInput
}

input ClientCreateManyWithoutApplicationIdInput {
  create: [ClientCreateWithoutApplicationIdInput!]
  connect: [ClientWhereUniqueInput!]
}

input ClientCreateManyWithoutPersonIdInput {
  create: [ClientCreateWithoutPersonIdInput!]
  connect: [ClientWhereUniqueInput!]
}

input ClientCreateWithoutApplicationIdInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean!
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
  personId: PersonCreateOneWithoutClientsInput!
  logRequests: LogRequestCreateManyInput
}

input ClientCreateWithoutPersonIdInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean!
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
  applicationId: ApplicationCreateOneWithoutClientsInput!
  logRequests: LogRequestCreateManyInput
}

"""An edge in a connection."""
type ClientEdge {
  """The item at the end of the edge."""
  node: Client!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ClientOrderByInput {
  id_ASC
  id_DESC
  alamatLokasi_ASC
  alamatLokasi_DESC
  asetGedung_ASC
  asetGedung_DESC
  asetKios_ASC
  asetKios_DESC
  asetLahanGarapan_ASC
  asetLahanGarapan_DESC
  asetLapak_ASC
  asetLapak_DESC
  asetMobil_ASC
  asetMobil_DESC
  asetMotor_ASC
  asetMotor_DESC
  asetRumah_ASC
  asetRumah_DESC
  asetTanah_ASC
  asetTanah_DESC
  asetToko_ASC
  asetToko_DESC
  asetWarung_ASC
  asetWarung_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  pendapatan_ASC
  pendapatan_DESC
  sktm_ASC
  sktm_DESC
  sktmUpload_ASC
  sktmUpload_DESC
  stmKeterangan_ASC
  stmKeterangan_DESC
  tanggunganAnak_ASC
  tanggunganAnak_DESC
  tanggunganFamili_ASC
  tanggunganFamili_DESC
  tanggunganLain_ASC
  tanggunganLain_DESC
  tanggunganPasangan_ASC
  tanggunganPasangan_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
  usiaSaatKlien_ASC
  usiaSaatKlien_DESC
}

type ClientPreviousValues {
  id: Int!
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdAt: DateTime!
  createdBy: String
  pendapatan: String
  sktm: Boolean!
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedAt: DateTime!
  updatedBy: String
  usiaSaatKlien: Int
}

input ClientScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ClientScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClientScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClientScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  alamatLokasi: String

  """All values that are not equal to given value."""
  alamatLokasi_not: String

  """All values that are contained in given list."""
  alamatLokasi_in: [String!]

  """All values that are not contained in given list."""
  alamatLokasi_not_in: [String!]

  """All values less than the given value."""
  alamatLokasi_lt: String

  """All values less than or equal the given value."""
  alamatLokasi_lte: String

  """All values greater than the given value."""
  alamatLokasi_gt: String

  """All values greater than or equal the given value."""
  alamatLokasi_gte: String

  """All values containing the given string."""
  alamatLokasi_contains: String

  """All values not containing the given string."""
  alamatLokasi_not_contains: String

  """All values starting with the given string."""
  alamatLokasi_starts_with: String

  """All values not starting with the given string."""
  alamatLokasi_not_starts_with: String

  """All values ending with the given string."""
  alamatLokasi_ends_with: String

  """All values not ending with the given string."""
  alamatLokasi_not_ends_with: String
  asetGedung: String

  """All values that are not equal to given value."""
  asetGedung_not: String

  """All values that are contained in given list."""
  asetGedung_in: [String!]

  """All values that are not contained in given list."""
  asetGedung_not_in: [String!]

  """All values less than the given value."""
  asetGedung_lt: String

  """All values less than or equal the given value."""
  asetGedung_lte: String

  """All values greater than the given value."""
  asetGedung_gt: String

  """All values greater than or equal the given value."""
  asetGedung_gte: String

  """All values containing the given string."""
  asetGedung_contains: String

  """All values not containing the given string."""
  asetGedung_not_contains: String

  """All values starting with the given string."""
  asetGedung_starts_with: String

  """All values not starting with the given string."""
  asetGedung_not_starts_with: String

  """All values ending with the given string."""
  asetGedung_ends_with: String

  """All values not ending with the given string."""
  asetGedung_not_ends_with: String
  asetKios: String

  """All values that are not equal to given value."""
  asetKios_not: String

  """All values that are contained in given list."""
  asetKios_in: [String!]

  """All values that are not contained in given list."""
  asetKios_not_in: [String!]

  """All values less than the given value."""
  asetKios_lt: String

  """All values less than or equal the given value."""
  asetKios_lte: String

  """All values greater than the given value."""
  asetKios_gt: String

  """All values greater than or equal the given value."""
  asetKios_gte: String

  """All values containing the given string."""
  asetKios_contains: String

  """All values not containing the given string."""
  asetKios_not_contains: String

  """All values starting with the given string."""
  asetKios_starts_with: String

  """All values not starting with the given string."""
  asetKios_not_starts_with: String

  """All values ending with the given string."""
  asetKios_ends_with: String

  """All values not ending with the given string."""
  asetKios_not_ends_with: String
  asetLahanGarapan: String

  """All values that are not equal to given value."""
  asetLahanGarapan_not: String

  """All values that are contained in given list."""
  asetLahanGarapan_in: [String!]

  """All values that are not contained in given list."""
  asetLahanGarapan_not_in: [String!]

  """All values less than the given value."""
  asetLahanGarapan_lt: String

  """All values less than or equal the given value."""
  asetLahanGarapan_lte: String

  """All values greater than the given value."""
  asetLahanGarapan_gt: String

  """All values greater than or equal the given value."""
  asetLahanGarapan_gte: String

  """All values containing the given string."""
  asetLahanGarapan_contains: String

  """All values not containing the given string."""
  asetLahanGarapan_not_contains: String

  """All values starting with the given string."""
  asetLahanGarapan_starts_with: String

  """All values not starting with the given string."""
  asetLahanGarapan_not_starts_with: String

  """All values ending with the given string."""
  asetLahanGarapan_ends_with: String

  """All values not ending with the given string."""
  asetLahanGarapan_not_ends_with: String
  asetLapak: String

  """All values that are not equal to given value."""
  asetLapak_not: String

  """All values that are contained in given list."""
  asetLapak_in: [String!]

  """All values that are not contained in given list."""
  asetLapak_not_in: [String!]

  """All values less than the given value."""
  asetLapak_lt: String

  """All values less than or equal the given value."""
  asetLapak_lte: String

  """All values greater than the given value."""
  asetLapak_gt: String

  """All values greater than or equal the given value."""
  asetLapak_gte: String

  """All values containing the given string."""
  asetLapak_contains: String

  """All values not containing the given string."""
  asetLapak_not_contains: String

  """All values starting with the given string."""
  asetLapak_starts_with: String

  """All values not starting with the given string."""
  asetLapak_not_starts_with: String

  """All values ending with the given string."""
  asetLapak_ends_with: String

  """All values not ending with the given string."""
  asetLapak_not_ends_with: String
  asetMobil: String

  """All values that are not equal to given value."""
  asetMobil_not: String

  """All values that are contained in given list."""
  asetMobil_in: [String!]

  """All values that are not contained in given list."""
  asetMobil_not_in: [String!]

  """All values less than the given value."""
  asetMobil_lt: String

  """All values less than or equal the given value."""
  asetMobil_lte: String

  """All values greater than the given value."""
  asetMobil_gt: String

  """All values greater than or equal the given value."""
  asetMobil_gte: String

  """All values containing the given string."""
  asetMobil_contains: String

  """All values not containing the given string."""
  asetMobil_not_contains: String

  """All values starting with the given string."""
  asetMobil_starts_with: String

  """All values not starting with the given string."""
  asetMobil_not_starts_with: String

  """All values ending with the given string."""
  asetMobil_ends_with: String

  """All values not ending with the given string."""
  asetMobil_not_ends_with: String
  asetMotor: String

  """All values that are not equal to given value."""
  asetMotor_not: String

  """All values that are contained in given list."""
  asetMotor_in: [String!]

  """All values that are not contained in given list."""
  asetMotor_not_in: [String!]

  """All values less than the given value."""
  asetMotor_lt: String

  """All values less than or equal the given value."""
  asetMotor_lte: String

  """All values greater than the given value."""
  asetMotor_gt: String

  """All values greater than or equal the given value."""
  asetMotor_gte: String

  """All values containing the given string."""
  asetMotor_contains: String

  """All values not containing the given string."""
  asetMotor_not_contains: String

  """All values starting with the given string."""
  asetMotor_starts_with: String

  """All values not starting with the given string."""
  asetMotor_not_starts_with: String

  """All values ending with the given string."""
  asetMotor_ends_with: String

  """All values not ending with the given string."""
  asetMotor_not_ends_with: String
  asetRumah: String

  """All values that are not equal to given value."""
  asetRumah_not: String

  """All values that are contained in given list."""
  asetRumah_in: [String!]

  """All values that are not contained in given list."""
  asetRumah_not_in: [String!]

  """All values less than the given value."""
  asetRumah_lt: String

  """All values less than or equal the given value."""
  asetRumah_lte: String

  """All values greater than the given value."""
  asetRumah_gt: String

  """All values greater than or equal the given value."""
  asetRumah_gte: String

  """All values containing the given string."""
  asetRumah_contains: String

  """All values not containing the given string."""
  asetRumah_not_contains: String

  """All values starting with the given string."""
  asetRumah_starts_with: String

  """All values not starting with the given string."""
  asetRumah_not_starts_with: String

  """All values ending with the given string."""
  asetRumah_ends_with: String

  """All values not ending with the given string."""
  asetRumah_not_ends_with: String
  asetTanah: String

  """All values that are not equal to given value."""
  asetTanah_not: String

  """All values that are contained in given list."""
  asetTanah_in: [String!]

  """All values that are not contained in given list."""
  asetTanah_not_in: [String!]

  """All values less than the given value."""
  asetTanah_lt: String

  """All values less than or equal the given value."""
  asetTanah_lte: String

  """All values greater than the given value."""
  asetTanah_gt: String

  """All values greater than or equal the given value."""
  asetTanah_gte: String

  """All values containing the given string."""
  asetTanah_contains: String

  """All values not containing the given string."""
  asetTanah_not_contains: String

  """All values starting with the given string."""
  asetTanah_starts_with: String

  """All values not starting with the given string."""
  asetTanah_not_starts_with: String

  """All values ending with the given string."""
  asetTanah_ends_with: String

  """All values not ending with the given string."""
  asetTanah_not_ends_with: String
  asetToko: String

  """All values that are not equal to given value."""
  asetToko_not: String

  """All values that are contained in given list."""
  asetToko_in: [String!]

  """All values that are not contained in given list."""
  asetToko_not_in: [String!]

  """All values less than the given value."""
  asetToko_lt: String

  """All values less than or equal the given value."""
  asetToko_lte: String

  """All values greater than the given value."""
  asetToko_gt: String

  """All values greater than or equal the given value."""
  asetToko_gte: String

  """All values containing the given string."""
  asetToko_contains: String

  """All values not containing the given string."""
  asetToko_not_contains: String

  """All values starting with the given string."""
  asetToko_starts_with: String

  """All values not starting with the given string."""
  asetToko_not_starts_with: String

  """All values ending with the given string."""
  asetToko_ends_with: String

  """All values not ending with the given string."""
  asetToko_not_ends_with: String
  asetWarung: String

  """All values that are not equal to given value."""
  asetWarung_not: String

  """All values that are contained in given list."""
  asetWarung_in: [String!]

  """All values that are not contained in given list."""
  asetWarung_not_in: [String!]

  """All values less than the given value."""
  asetWarung_lt: String

  """All values less than or equal the given value."""
  asetWarung_lte: String

  """All values greater than the given value."""
  asetWarung_gt: String

  """All values greater than or equal the given value."""
  asetWarung_gte: String

  """All values containing the given string."""
  asetWarung_contains: String

  """All values not containing the given string."""
  asetWarung_not_contains: String

  """All values starting with the given string."""
  asetWarung_starts_with: String

  """All values not starting with the given string."""
  asetWarung_not_starts_with: String

  """All values ending with the given string."""
  asetWarung_ends_with: String

  """All values not ending with the given string."""
  asetWarung_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  pendapatan: String

  """All values that are not equal to given value."""
  pendapatan_not: String

  """All values that are contained in given list."""
  pendapatan_in: [String!]

  """All values that are not contained in given list."""
  pendapatan_not_in: [String!]

  """All values less than the given value."""
  pendapatan_lt: String

  """All values less than or equal the given value."""
  pendapatan_lte: String

  """All values greater than the given value."""
  pendapatan_gt: String

  """All values greater than or equal the given value."""
  pendapatan_gte: String

  """All values containing the given string."""
  pendapatan_contains: String

  """All values not containing the given string."""
  pendapatan_not_contains: String

  """All values starting with the given string."""
  pendapatan_starts_with: String

  """All values not starting with the given string."""
  pendapatan_not_starts_with: String

  """All values ending with the given string."""
  pendapatan_ends_with: String

  """All values not ending with the given string."""
  pendapatan_not_ends_with: String
  sktm: Boolean

  """All values that are not equal to given value."""
  sktm_not: Boolean
  sktmUpload: String

  """All values that are not equal to given value."""
  sktmUpload_not: String

  """All values that are contained in given list."""
  sktmUpload_in: [String!]

  """All values that are not contained in given list."""
  sktmUpload_not_in: [String!]

  """All values less than the given value."""
  sktmUpload_lt: String

  """All values less than or equal the given value."""
  sktmUpload_lte: String

  """All values greater than the given value."""
  sktmUpload_gt: String

  """All values greater than or equal the given value."""
  sktmUpload_gte: String

  """All values containing the given string."""
  sktmUpload_contains: String

  """All values not containing the given string."""
  sktmUpload_not_contains: String

  """All values starting with the given string."""
  sktmUpload_starts_with: String

  """All values not starting with the given string."""
  sktmUpload_not_starts_with: String

  """All values ending with the given string."""
  sktmUpload_ends_with: String

  """All values not ending with the given string."""
  sktmUpload_not_ends_with: String
  stmKeterangan: String

  """All values that are not equal to given value."""
  stmKeterangan_not: String

  """All values that are contained in given list."""
  stmKeterangan_in: [String!]

  """All values that are not contained in given list."""
  stmKeterangan_not_in: [String!]

  """All values less than the given value."""
  stmKeterangan_lt: String

  """All values less than or equal the given value."""
  stmKeterangan_lte: String

  """All values greater than the given value."""
  stmKeterangan_gt: String

  """All values greater than or equal the given value."""
  stmKeterangan_gte: String

  """All values containing the given string."""
  stmKeterangan_contains: String

  """All values not containing the given string."""
  stmKeterangan_not_contains: String

  """All values starting with the given string."""
  stmKeterangan_starts_with: String

  """All values not starting with the given string."""
  stmKeterangan_not_starts_with: String

  """All values ending with the given string."""
  stmKeterangan_ends_with: String

  """All values not ending with the given string."""
  stmKeterangan_not_ends_with: String
  tanggunganAnak: Int

  """All values that are not equal to given value."""
  tanggunganAnak_not: Int

  """All values that are contained in given list."""
  tanggunganAnak_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganAnak_not_in: [Int!]

  """All values less than the given value."""
  tanggunganAnak_lt: Int

  """All values less than or equal the given value."""
  tanggunganAnak_lte: Int

  """All values greater than the given value."""
  tanggunganAnak_gt: Int

  """All values greater than or equal the given value."""
  tanggunganAnak_gte: Int
  tanggunganFamili: Int

  """All values that are not equal to given value."""
  tanggunganFamili_not: Int

  """All values that are contained in given list."""
  tanggunganFamili_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganFamili_not_in: [Int!]

  """All values less than the given value."""
  tanggunganFamili_lt: Int

  """All values less than or equal the given value."""
  tanggunganFamili_lte: Int

  """All values greater than the given value."""
  tanggunganFamili_gt: Int

  """All values greater than or equal the given value."""
  tanggunganFamili_gte: Int
  tanggunganLain: Int

  """All values that are not equal to given value."""
  tanggunganLain_not: Int

  """All values that are contained in given list."""
  tanggunganLain_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganLain_not_in: [Int!]

  """All values less than the given value."""
  tanggunganLain_lt: Int

  """All values less than or equal the given value."""
  tanggunganLain_lte: Int

  """All values greater than the given value."""
  tanggunganLain_gt: Int

  """All values greater than or equal the given value."""
  tanggunganLain_gte: Int
  tanggunganPasangan: Int

  """All values that are not equal to given value."""
  tanggunganPasangan_not: Int

  """All values that are contained in given list."""
  tanggunganPasangan_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganPasangan_not_in: [Int!]

  """All values less than the given value."""
  tanggunganPasangan_lt: Int

  """All values less than or equal the given value."""
  tanggunganPasangan_lte: Int

  """All values greater than the given value."""
  tanggunganPasangan_gt: Int

  """All values greater than or equal the given value."""
  tanggunganPasangan_gte: Int
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  usiaSaatKlien: Int

  """All values that are not equal to given value."""
  usiaSaatKlien_not: Int

  """All values that are contained in given list."""
  usiaSaatKlien_in: [Int!]

  """All values that are not contained in given list."""
  usiaSaatKlien_not_in: [Int!]

  """All values less than the given value."""
  usiaSaatKlien_lt: Int

  """All values less than or equal the given value."""
  usiaSaatKlien_lte: Int

  """All values greater than the given value."""
  usiaSaatKlien_gt: Int

  """All values greater than or equal the given value."""
  usiaSaatKlien_gte: Int
}

type ClientSubscriptionPayload {
  mutation: MutationType!
  node: Client
  updatedFields: [String!]
  previousValues: ClientPreviousValues
}

input ClientSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ClientSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClientSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClientSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ClientWhereInput
}

input ClientUpdateInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
  applicationId: ApplicationUpdateOneRequiredWithoutClientsInput
  personId: PersonUpdateOneRequiredWithoutClientsInput
  logRequests: LogRequestUpdateManyInput
}

input ClientUpdateManyDataInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
}

input ClientUpdateManyMutationInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
}

input ClientUpdateManyWithoutApplicationIdInput {
  create: [ClientCreateWithoutApplicationIdInput!]
  connect: [ClientWhereUniqueInput!]
  set: [ClientWhereUniqueInput!]
  disconnect: [ClientWhereUniqueInput!]
  delete: [ClientWhereUniqueInput!]
  update: [ClientUpdateWithWhereUniqueWithoutApplicationIdInput!]
  updateMany: [ClientUpdateManyWithWhereNestedInput!]
  deleteMany: [ClientScalarWhereInput!]
  upsert: [ClientUpsertWithWhereUniqueWithoutApplicationIdInput!]
}

input ClientUpdateManyWithoutPersonIdInput {
  create: [ClientCreateWithoutPersonIdInput!]
  connect: [ClientWhereUniqueInput!]
  set: [ClientWhereUniqueInput!]
  disconnect: [ClientWhereUniqueInput!]
  delete: [ClientWhereUniqueInput!]
  update: [ClientUpdateWithWhereUniqueWithoutPersonIdInput!]
  updateMany: [ClientUpdateManyWithWhereNestedInput!]
  deleteMany: [ClientScalarWhereInput!]
  upsert: [ClientUpsertWithWhereUniqueWithoutPersonIdInput!]
}

input ClientUpdateManyWithWhereNestedInput {
  where: ClientScalarWhereInput!
  data: ClientUpdateManyDataInput!
}

input ClientUpdateWithoutApplicationIdDataInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
  personId: PersonUpdateOneRequiredWithoutClientsInput
  logRequests: LogRequestUpdateManyInput
}

input ClientUpdateWithoutPersonIdDataInput {
  alamatLokasi: String
  asetGedung: String
  asetKios: String
  asetLahanGarapan: String
  asetLapak: String
  asetMobil: String
  asetMotor: String
  asetRumah: String
  asetTanah: String
  asetToko: String
  asetWarung: String
  createdBy: String
  pendapatan: String
  sktm: Boolean
  sktmUpload: String
  stmKeterangan: String
  tanggunganAnak: Int
  tanggunganFamili: Int
  tanggunganLain: Int
  tanggunganPasangan: Int
  updatedBy: String
  usiaSaatKlien: Int
  applicationId: ApplicationUpdateOneRequiredWithoutClientsInput
  logRequests: LogRequestUpdateManyInput
}

input ClientUpdateWithWhereUniqueWithoutApplicationIdInput {
  where: ClientWhereUniqueInput!
  data: ClientUpdateWithoutApplicationIdDataInput!
}

input ClientUpdateWithWhereUniqueWithoutPersonIdInput {
  where: ClientWhereUniqueInput!
  data: ClientUpdateWithoutPersonIdDataInput!
}

input ClientUpsertWithWhereUniqueWithoutApplicationIdInput {
  where: ClientWhereUniqueInput!
  update: ClientUpdateWithoutApplicationIdDataInput!
  create: ClientCreateWithoutApplicationIdInput!
}

input ClientUpsertWithWhereUniqueWithoutPersonIdInput {
  where: ClientWhereUniqueInput!
  update: ClientUpdateWithoutPersonIdDataInput!
  create: ClientCreateWithoutPersonIdInput!
}

input ClientWhereInput {
  """Logical AND on all given filters."""
  AND: [ClientWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClientWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClientWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  alamatLokasi: String

  """All values that are not equal to given value."""
  alamatLokasi_not: String

  """All values that are contained in given list."""
  alamatLokasi_in: [String!]

  """All values that are not contained in given list."""
  alamatLokasi_not_in: [String!]

  """All values less than the given value."""
  alamatLokasi_lt: String

  """All values less than or equal the given value."""
  alamatLokasi_lte: String

  """All values greater than the given value."""
  alamatLokasi_gt: String

  """All values greater than or equal the given value."""
  alamatLokasi_gte: String

  """All values containing the given string."""
  alamatLokasi_contains: String

  """All values not containing the given string."""
  alamatLokasi_not_contains: String

  """All values starting with the given string."""
  alamatLokasi_starts_with: String

  """All values not starting with the given string."""
  alamatLokasi_not_starts_with: String

  """All values ending with the given string."""
  alamatLokasi_ends_with: String

  """All values not ending with the given string."""
  alamatLokasi_not_ends_with: String
  asetGedung: String

  """All values that are not equal to given value."""
  asetGedung_not: String

  """All values that are contained in given list."""
  asetGedung_in: [String!]

  """All values that are not contained in given list."""
  asetGedung_not_in: [String!]

  """All values less than the given value."""
  asetGedung_lt: String

  """All values less than or equal the given value."""
  asetGedung_lte: String

  """All values greater than the given value."""
  asetGedung_gt: String

  """All values greater than or equal the given value."""
  asetGedung_gte: String

  """All values containing the given string."""
  asetGedung_contains: String

  """All values not containing the given string."""
  asetGedung_not_contains: String

  """All values starting with the given string."""
  asetGedung_starts_with: String

  """All values not starting with the given string."""
  asetGedung_not_starts_with: String

  """All values ending with the given string."""
  asetGedung_ends_with: String

  """All values not ending with the given string."""
  asetGedung_not_ends_with: String
  asetKios: String

  """All values that are not equal to given value."""
  asetKios_not: String

  """All values that are contained in given list."""
  asetKios_in: [String!]

  """All values that are not contained in given list."""
  asetKios_not_in: [String!]

  """All values less than the given value."""
  asetKios_lt: String

  """All values less than or equal the given value."""
  asetKios_lte: String

  """All values greater than the given value."""
  asetKios_gt: String

  """All values greater than or equal the given value."""
  asetKios_gte: String

  """All values containing the given string."""
  asetKios_contains: String

  """All values not containing the given string."""
  asetKios_not_contains: String

  """All values starting with the given string."""
  asetKios_starts_with: String

  """All values not starting with the given string."""
  asetKios_not_starts_with: String

  """All values ending with the given string."""
  asetKios_ends_with: String

  """All values not ending with the given string."""
  asetKios_not_ends_with: String
  asetLahanGarapan: String

  """All values that are not equal to given value."""
  asetLahanGarapan_not: String

  """All values that are contained in given list."""
  asetLahanGarapan_in: [String!]

  """All values that are not contained in given list."""
  asetLahanGarapan_not_in: [String!]

  """All values less than the given value."""
  asetLahanGarapan_lt: String

  """All values less than or equal the given value."""
  asetLahanGarapan_lte: String

  """All values greater than the given value."""
  asetLahanGarapan_gt: String

  """All values greater than or equal the given value."""
  asetLahanGarapan_gte: String

  """All values containing the given string."""
  asetLahanGarapan_contains: String

  """All values not containing the given string."""
  asetLahanGarapan_not_contains: String

  """All values starting with the given string."""
  asetLahanGarapan_starts_with: String

  """All values not starting with the given string."""
  asetLahanGarapan_not_starts_with: String

  """All values ending with the given string."""
  asetLahanGarapan_ends_with: String

  """All values not ending with the given string."""
  asetLahanGarapan_not_ends_with: String
  asetLapak: String

  """All values that are not equal to given value."""
  asetLapak_not: String

  """All values that are contained in given list."""
  asetLapak_in: [String!]

  """All values that are not contained in given list."""
  asetLapak_not_in: [String!]

  """All values less than the given value."""
  asetLapak_lt: String

  """All values less than or equal the given value."""
  asetLapak_lte: String

  """All values greater than the given value."""
  asetLapak_gt: String

  """All values greater than or equal the given value."""
  asetLapak_gte: String

  """All values containing the given string."""
  asetLapak_contains: String

  """All values not containing the given string."""
  asetLapak_not_contains: String

  """All values starting with the given string."""
  asetLapak_starts_with: String

  """All values not starting with the given string."""
  asetLapak_not_starts_with: String

  """All values ending with the given string."""
  asetLapak_ends_with: String

  """All values not ending with the given string."""
  asetLapak_not_ends_with: String
  asetMobil: String

  """All values that are not equal to given value."""
  asetMobil_not: String

  """All values that are contained in given list."""
  asetMobil_in: [String!]

  """All values that are not contained in given list."""
  asetMobil_not_in: [String!]

  """All values less than the given value."""
  asetMobil_lt: String

  """All values less than or equal the given value."""
  asetMobil_lte: String

  """All values greater than the given value."""
  asetMobil_gt: String

  """All values greater than or equal the given value."""
  asetMobil_gte: String

  """All values containing the given string."""
  asetMobil_contains: String

  """All values not containing the given string."""
  asetMobil_not_contains: String

  """All values starting with the given string."""
  asetMobil_starts_with: String

  """All values not starting with the given string."""
  asetMobil_not_starts_with: String

  """All values ending with the given string."""
  asetMobil_ends_with: String

  """All values not ending with the given string."""
  asetMobil_not_ends_with: String
  asetMotor: String

  """All values that are not equal to given value."""
  asetMotor_not: String

  """All values that are contained in given list."""
  asetMotor_in: [String!]

  """All values that are not contained in given list."""
  asetMotor_not_in: [String!]

  """All values less than the given value."""
  asetMotor_lt: String

  """All values less than or equal the given value."""
  asetMotor_lte: String

  """All values greater than the given value."""
  asetMotor_gt: String

  """All values greater than or equal the given value."""
  asetMotor_gte: String

  """All values containing the given string."""
  asetMotor_contains: String

  """All values not containing the given string."""
  asetMotor_not_contains: String

  """All values starting with the given string."""
  asetMotor_starts_with: String

  """All values not starting with the given string."""
  asetMotor_not_starts_with: String

  """All values ending with the given string."""
  asetMotor_ends_with: String

  """All values not ending with the given string."""
  asetMotor_not_ends_with: String
  asetRumah: String

  """All values that are not equal to given value."""
  asetRumah_not: String

  """All values that are contained in given list."""
  asetRumah_in: [String!]

  """All values that are not contained in given list."""
  asetRumah_not_in: [String!]

  """All values less than the given value."""
  asetRumah_lt: String

  """All values less than or equal the given value."""
  asetRumah_lte: String

  """All values greater than the given value."""
  asetRumah_gt: String

  """All values greater than or equal the given value."""
  asetRumah_gte: String

  """All values containing the given string."""
  asetRumah_contains: String

  """All values not containing the given string."""
  asetRumah_not_contains: String

  """All values starting with the given string."""
  asetRumah_starts_with: String

  """All values not starting with the given string."""
  asetRumah_not_starts_with: String

  """All values ending with the given string."""
  asetRumah_ends_with: String

  """All values not ending with the given string."""
  asetRumah_not_ends_with: String
  asetTanah: String

  """All values that are not equal to given value."""
  asetTanah_not: String

  """All values that are contained in given list."""
  asetTanah_in: [String!]

  """All values that are not contained in given list."""
  asetTanah_not_in: [String!]

  """All values less than the given value."""
  asetTanah_lt: String

  """All values less than or equal the given value."""
  asetTanah_lte: String

  """All values greater than the given value."""
  asetTanah_gt: String

  """All values greater than or equal the given value."""
  asetTanah_gte: String

  """All values containing the given string."""
  asetTanah_contains: String

  """All values not containing the given string."""
  asetTanah_not_contains: String

  """All values starting with the given string."""
  asetTanah_starts_with: String

  """All values not starting with the given string."""
  asetTanah_not_starts_with: String

  """All values ending with the given string."""
  asetTanah_ends_with: String

  """All values not ending with the given string."""
  asetTanah_not_ends_with: String
  asetToko: String

  """All values that are not equal to given value."""
  asetToko_not: String

  """All values that are contained in given list."""
  asetToko_in: [String!]

  """All values that are not contained in given list."""
  asetToko_not_in: [String!]

  """All values less than the given value."""
  asetToko_lt: String

  """All values less than or equal the given value."""
  asetToko_lte: String

  """All values greater than the given value."""
  asetToko_gt: String

  """All values greater than or equal the given value."""
  asetToko_gte: String

  """All values containing the given string."""
  asetToko_contains: String

  """All values not containing the given string."""
  asetToko_not_contains: String

  """All values starting with the given string."""
  asetToko_starts_with: String

  """All values not starting with the given string."""
  asetToko_not_starts_with: String

  """All values ending with the given string."""
  asetToko_ends_with: String

  """All values not ending with the given string."""
  asetToko_not_ends_with: String
  asetWarung: String

  """All values that are not equal to given value."""
  asetWarung_not: String

  """All values that are contained in given list."""
  asetWarung_in: [String!]

  """All values that are not contained in given list."""
  asetWarung_not_in: [String!]

  """All values less than the given value."""
  asetWarung_lt: String

  """All values less than or equal the given value."""
  asetWarung_lte: String

  """All values greater than the given value."""
  asetWarung_gt: String

  """All values greater than or equal the given value."""
  asetWarung_gte: String

  """All values containing the given string."""
  asetWarung_contains: String

  """All values not containing the given string."""
  asetWarung_not_contains: String

  """All values starting with the given string."""
  asetWarung_starts_with: String

  """All values not starting with the given string."""
  asetWarung_not_starts_with: String

  """All values ending with the given string."""
  asetWarung_ends_with: String

  """All values not ending with the given string."""
  asetWarung_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  pendapatan: String

  """All values that are not equal to given value."""
  pendapatan_not: String

  """All values that are contained in given list."""
  pendapatan_in: [String!]

  """All values that are not contained in given list."""
  pendapatan_not_in: [String!]

  """All values less than the given value."""
  pendapatan_lt: String

  """All values less than or equal the given value."""
  pendapatan_lte: String

  """All values greater than the given value."""
  pendapatan_gt: String

  """All values greater than or equal the given value."""
  pendapatan_gte: String

  """All values containing the given string."""
  pendapatan_contains: String

  """All values not containing the given string."""
  pendapatan_not_contains: String

  """All values starting with the given string."""
  pendapatan_starts_with: String

  """All values not starting with the given string."""
  pendapatan_not_starts_with: String

  """All values ending with the given string."""
  pendapatan_ends_with: String

  """All values not ending with the given string."""
  pendapatan_not_ends_with: String
  sktm: Boolean

  """All values that are not equal to given value."""
  sktm_not: Boolean
  sktmUpload: String

  """All values that are not equal to given value."""
  sktmUpload_not: String

  """All values that are contained in given list."""
  sktmUpload_in: [String!]

  """All values that are not contained in given list."""
  sktmUpload_not_in: [String!]

  """All values less than the given value."""
  sktmUpload_lt: String

  """All values less than or equal the given value."""
  sktmUpload_lte: String

  """All values greater than the given value."""
  sktmUpload_gt: String

  """All values greater than or equal the given value."""
  sktmUpload_gte: String

  """All values containing the given string."""
  sktmUpload_contains: String

  """All values not containing the given string."""
  sktmUpload_not_contains: String

  """All values starting with the given string."""
  sktmUpload_starts_with: String

  """All values not starting with the given string."""
  sktmUpload_not_starts_with: String

  """All values ending with the given string."""
  sktmUpload_ends_with: String

  """All values not ending with the given string."""
  sktmUpload_not_ends_with: String
  stmKeterangan: String

  """All values that are not equal to given value."""
  stmKeterangan_not: String

  """All values that are contained in given list."""
  stmKeterangan_in: [String!]

  """All values that are not contained in given list."""
  stmKeterangan_not_in: [String!]

  """All values less than the given value."""
  stmKeterangan_lt: String

  """All values less than or equal the given value."""
  stmKeterangan_lte: String

  """All values greater than the given value."""
  stmKeterangan_gt: String

  """All values greater than or equal the given value."""
  stmKeterangan_gte: String

  """All values containing the given string."""
  stmKeterangan_contains: String

  """All values not containing the given string."""
  stmKeterangan_not_contains: String

  """All values starting with the given string."""
  stmKeterangan_starts_with: String

  """All values not starting with the given string."""
  stmKeterangan_not_starts_with: String

  """All values ending with the given string."""
  stmKeterangan_ends_with: String

  """All values not ending with the given string."""
  stmKeterangan_not_ends_with: String
  tanggunganAnak: Int

  """All values that are not equal to given value."""
  tanggunganAnak_not: Int

  """All values that are contained in given list."""
  tanggunganAnak_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganAnak_not_in: [Int!]

  """All values less than the given value."""
  tanggunganAnak_lt: Int

  """All values less than or equal the given value."""
  tanggunganAnak_lte: Int

  """All values greater than the given value."""
  tanggunganAnak_gt: Int

  """All values greater than or equal the given value."""
  tanggunganAnak_gte: Int
  tanggunganFamili: Int

  """All values that are not equal to given value."""
  tanggunganFamili_not: Int

  """All values that are contained in given list."""
  tanggunganFamili_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganFamili_not_in: [Int!]

  """All values less than the given value."""
  tanggunganFamili_lt: Int

  """All values less than or equal the given value."""
  tanggunganFamili_lte: Int

  """All values greater than the given value."""
  tanggunganFamili_gt: Int

  """All values greater than or equal the given value."""
  tanggunganFamili_gte: Int
  tanggunganLain: Int

  """All values that are not equal to given value."""
  tanggunganLain_not: Int

  """All values that are contained in given list."""
  tanggunganLain_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganLain_not_in: [Int!]

  """All values less than the given value."""
  tanggunganLain_lt: Int

  """All values less than or equal the given value."""
  tanggunganLain_lte: Int

  """All values greater than the given value."""
  tanggunganLain_gt: Int

  """All values greater than or equal the given value."""
  tanggunganLain_gte: Int
  tanggunganPasangan: Int

  """All values that are not equal to given value."""
  tanggunganPasangan_not: Int

  """All values that are contained in given list."""
  tanggunganPasangan_in: [Int!]

  """All values that are not contained in given list."""
  tanggunganPasangan_not_in: [Int!]

  """All values less than the given value."""
  tanggunganPasangan_lt: Int

  """All values less than or equal the given value."""
  tanggunganPasangan_lte: Int

  """All values greater than the given value."""
  tanggunganPasangan_gt: Int

  """All values greater than or equal the given value."""
  tanggunganPasangan_gte: Int
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  usiaSaatKlien: Int

  """All values that are not equal to given value."""
  usiaSaatKlien_not: Int

  """All values that are contained in given list."""
  usiaSaatKlien_in: [Int!]

  """All values that are not contained in given list."""
  usiaSaatKlien_not_in: [Int!]

  """All values less than the given value."""
  usiaSaatKlien_lt: Int

  """All values less than or equal the given value."""
  usiaSaatKlien_lte: Int

  """All values greater than the given value."""
  usiaSaatKlien_gt: Int

  """All values greater than or equal the given value."""
  usiaSaatKlien_gte: Int
  applicationId: ApplicationWhereInput
  personId: PersonWhereInput
  logRequests_every: LogRequestWhereInput
  logRequests_some: LogRequestWhereInput
  logRequests_none: LogRequestWhereInput
}

input ClientWhereUniqueInput {
  id: Int
}

type DaftarPengacara {
  ID: Int!
  jabatan: String
  namaLengkap: String
  sembunyikan: Boolean!
}

"""A connection to a list of items."""
type DaftarPengacaraConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DaftarPengacaraEdge]!
  aggregate: AggregateDaftarPengacara!
}

input DaftarPengacaraCreateInput {
  jabatan: String
  namaLengkap: String
  sembunyikan: Boolean!
}

"""An edge in a connection."""
type DaftarPengacaraEdge {
  """The item at the end of the edge."""
  node: DaftarPengacara!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DaftarPengacaraOrderByInput {
  ID_ASC
  ID_DESC
  jabatan_ASC
  jabatan_DESC
  namaLengkap_ASC
  namaLengkap_DESC
  sembunyikan_ASC
  sembunyikan_DESC
}

type DaftarPengacaraPreviousValues {
  ID: Int!
  jabatan: String
  namaLengkap: String
  sembunyikan: Boolean!
}

type DaftarPengacaraSubscriptionPayload {
  mutation: MutationType!
  node: DaftarPengacara
  updatedFields: [String!]
  previousValues: DaftarPengacaraPreviousValues
}

input DaftarPengacaraSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DaftarPengacaraSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DaftarPengacaraSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DaftarPengacaraSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DaftarPengacaraWhereInput
}

input DaftarPengacaraUpdateInput {
  jabatan: String
  namaLengkap: String
  sembunyikan: Boolean
}

input DaftarPengacaraUpdateManyMutationInput {
  jabatan: String
  namaLengkap: String
  sembunyikan: Boolean
}

input DaftarPengacaraWhereInput {
  """Logical AND on all given filters."""
  AND: [DaftarPengacaraWhereInput!]

  """Logical OR on all given filters."""
  OR: [DaftarPengacaraWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DaftarPengacaraWhereInput!]
  ID: Int

  """All values that are not equal to given value."""
  ID_not: Int

  """All values that are contained in given list."""
  ID_in: [Int!]

  """All values that are not contained in given list."""
  ID_not_in: [Int!]

  """All values less than the given value."""
  ID_lt: Int

  """All values less than or equal the given value."""
  ID_lte: Int

  """All values greater than the given value."""
  ID_gt: Int

  """All values greater than or equal the given value."""
  ID_gte: Int
  jabatan: String

  """All values that are not equal to given value."""
  jabatan_not: String

  """All values that are contained in given list."""
  jabatan_in: [String!]

  """All values that are not contained in given list."""
  jabatan_not_in: [String!]

  """All values less than the given value."""
  jabatan_lt: String

  """All values less than or equal the given value."""
  jabatan_lte: String

  """All values greater than the given value."""
  jabatan_gt: String

  """All values greater than or equal the given value."""
  jabatan_gte: String

  """All values containing the given string."""
  jabatan_contains: String

  """All values not containing the given string."""
  jabatan_not_contains: String

  """All values starting with the given string."""
  jabatan_starts_with: String

  """All values not starting with the given string."""
  jabatan_not_starts_with: String

  """All values ending with the given string."""
  jabatan_ends_with: String

  """All values not ending with the given string."""
  jabatan_not_ends_with: String
  namaLengkap: String

  """All values that are not equal to given value."""
  namaLengkap_not: String

  """All values that are contained in given list."""
  namaLengkap_in: [String!]

  """All values that are not contained in given list."""
  namaLengkap_not_in: [String!]

  """All values less than the given value."""
  namaLengkap_lt: String

  """All values less than or equal the given value."""
  namaLengkap_lte: String

  """All values greater than the given value."""
  namaLengkap_gt: String

  """All values greater than or equal the given value."""
  namaLengkap_gte: String

  """All values containing the given string."""
  namaLengkap_contains: String

  """All values not containing the given string."""
  namaLengkap_not_contains: String

  """All values starting with the given string."""
  namaLengkap_starts_with: String

  """All values not starting with the given string."""
  namaLengkap_not_starts_with: String

  """All values ending with the given string."""
  namaLengkap_ends_with: String

  """All values not ending with the given string."""
  namaLengkap_not_ends_with: String
  sembunyikan: Boolean

  """All values that are not equal to given value."""
  sembunyikan_not: Boolean
}

input DaftarPengacaraWhereUniqueInput {
  ID: Int
}

type DataDict {
  fieldNumber: ID!
  dataType: String
  entity: String
  fieldName: String
  fieldType: String
  isRepeat: String
  linkField: String
  linkTable: String
  listCode: String
  required: String
  validation: String
  visibleSelectQuery: String
  locals(where: DataDictLocalWhereInput, orderBy: DataDictLocalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DataDictLocal!]
}

"""A connection to a list of items."""
type DataDictConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DataDictEdge]!
  aggregate: AggregateDataDict!
}

input DataDictCreateInput {
  fieldNumber: ID
  dataType: String
  entity: String
  fieldName: String
  fieldType: String
  isRepeat: String
  linkField: String
  linkTable: String
  listCode: String
  required: String
  validation: String
  visibleSelectQuery: String
  locals: DataDictLocalCreateManyWithoutFieldNumberInput
}

input DataDictCreateOneWithoutLocalsInput {
  create: DataDictCreateWithoutLocalsInput
  connect: DataDictWhereUniqueInput
}

input DataDictCreateWithoutLocalsInput {
  fieldNumber: ID
  dataType: String
  entity: String
  fieldName: String
  fieldType: String
  isRepeat: String
  linkField: String
  linkTable: String
  listCode: String
  required: String
  validation: String
  visibleSelectQuery: String
}

"""An edge in a connection."""
type DataDictEdge {
  """The item at the end of the edge."""
  node: DataDict!

  """A cursor for use in pagination."""
  cursor: String!
}

type DataDictLocal {
  id: Int!
  fieldNumber: DataDict!
  label: String
  lang: String
}

"""A connection to a list of items."""
type DataDictLocalConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DataDictLocalEdge]!
  aggregate: AggregateDataDictLocal!
}

input DataDictLocalCreateInput {
  label: String
  lang: String
  fieldNumber: DataDictCreateOneWithoutLocalsInput!
}

input DataDictLocalCreateManyWithoutFieldNumberInput {
  create: [DataDictLocalCreateWithoutFieldNumberInput!]
  connect: [DataDictLocalWhereUniqueInput!]
}

input DataDictLocalCreateWithoutFieldNumberInput {
  label: String
  lang: String
}

"""An edge in a connection."""
type DataDictLocalEdge {
  """The item at the end of the edge."""
  node: DataDictLocal!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DataDictLocalOrderByInput {
  id_ASC
  id_DESC
  label_ASC
  label_DESC
  lang_ASC
  lang_DESC
}

type DataDictLocalPreviousValues {
  id: Int!
  label: String
  lang: String
}

input DataDictLocalScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [DataDictLocalScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataDictLocalScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataDictLocalScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  label: String

  """All values that are not equal to given value."""
  label_not: String

  """All values that are contained in given list."""
  label_in: [String!]

  """All values that are not contained in given list."""
  label_not_in: [String!]

  """All values less than the given value."""
  label_lt: String

  """All values less than or equal the given value."""
  label_lte: String

  """All values greater than the given value."""
  label_gt: String

  """All values greater than or equal the given value."""
  label_gte: String

  """All values containing the given string."""
  label_contains: String

  """All values not containing the given string."""
  label_not_contains: String

  """All values starting with the given string."""
  label_starts_with: String

  """All values not starting with the given string."""
  label_not_starts_with: String

  """All values ending with the given string."""
  label_ends_with: String

  """All values not ending with the given string."""
  label_not_ends_with: String
  lang: String

  """All values that are not equal to given value."""
  lang_not: String

  """All values that are contained in given list."""
  lang_in: [String!]

  """All values that are not contained in given list."""
  lang_not_in: [String!]

  """All values less than the given value."""
  lang_lt: String

  """All values less than or equal the given value."""
  lang_lte: String

  """All values greater than the given value."""
  lang_gt: String

  """All values greater than or equal the given value."""
  lang_gte: String

  """All values containing the given string."""
  lang_contains: String

  """All values not containing the given string."""
  lang_not_contains: String

  """All values starting with the given string."""
  lang_starts_with: String

  """All values not starting with the given string."""
  lang_not_starts_with: String

  """All values ending with the given string."""
  lang_ends_with: String

  """All values not ending with the given string."""
  lang_not_ends_with: String
}

type DataDictLocalSubscriptionPayload {
  mutation: MutationType!
  node: DataDictLocal
  updatedFields: [String!]
  previousValues: DataDictLocalPreviousValues
}

input DataDictLocalSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DataDictLocalSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataDictLocalSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataDictLocalSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DataDictLocalWhereInput
}

input DataDictLocalUpdateInput {
  label: String
  lang: String
  fieldNumber: DataDictUpdateOneRequiredWithoutLocalsInput
}

input DataDictLocalUpdateManyDataInput {
  label: String
  lang: String
}

input DataDictLocalUpdateManyMutationInput {
  label: String
  lang: String
}

input DataDictLocalUpdateManyWithoutFieldNumberInput {
  create: [DataDictLocalCreateWithoutFieldNumberInput!]
  connect: [DataDictLocalWhereUniqueInput!]
  set: [DataDictLocalWhereUniqueInput!]
  disconnect: [DataDictLocalWhereUniqueInput!]
  delete: [DataDictLocalWhereUniqueInput!]
  update: [DataDictLocalUpdateWithWhereUniqueWithoutFieldNumberInput!]
  updateMany: [DataDictLocalUpdateManyWithWhereNestedInput!]
  deleteMany: [DataDictLocalScalarWhereInput!]
  upsert: [DataDictLocalUpsertWithWhereUniqueWithoutFieldNumberInput!]
}

input DataDictLocalUpdateManyWithWhereNestedInput {
  where: DataDictLocalScalarWhereInput!
  data: DataDictLocalUpdateManyDataInput!
}

input DataDictLocalUpdateWithoutFieldNumberDataInput {
  label: String
  lang: String
}

input DataDictLocalUpdateWithWhereUniqueWithoutFieldNumberInput {
  where: DataDictLocalWhereUniqueInput!
  data: DataDictLocalUpdateWithoutFieldNumberDataInput!
}

input DataDictLocalUpsertWithWhereUniqueWithoutFieldNumberInput {
  where: DataDictLocalWhereUniqueInput!
  update: DataDictLocalUpdateWithoutFieldNumberDataInput!
  create: DataDictLocalCreateWithoutFieldNumberInput!
}

input DataDictLocalWhereInput {
  """Logical AND on all given filters."""
  AND: [DataDictLocalWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataDictLocalWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataDictLocalWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  label: String

  """All values that are not equal to given value."""
  label_not: String

  """All values that are contained in given list."""
  label_in: [String!]

  """All values that are not contained in given list."""
  label_not_in: [String!]

  """All values less than the given value."""
  label_lt: String

  """All values less than or equal the given value."""
  label_lte: String

  """All values greater than the given value."""
  label_gt: String

  """All values greater than or equal the given value."""
  label_gte: String

  """All values containing the given string."""
  label_contains: String

  """All values not containing the given string."""
  label_not_contains: String

  """All values starting with the given string."""
  label_starts_with: String

  """All values not starting with the given string."""
  label_not_starts_with: String

  """All values ending with the given string."""
  label_ends_with: String

  """All values not ending with the given string."""
  label_not_ends_with: String
  lang: String

  """All values that are not equal to given value."""
  lang_not: String

  """All values that are contained in given list."""
  lang_in: [String!]

  """All values that are not contained in given list."""
  lang_not_in: [String!]

  """All values less than the given value."""
  lang_lt: String

  """All values less than or equal the given value."""
  lang_lte: String

  """All values greater than the given value."""
  lang_gt: String

  """All values greater than or equal the given value."""
  lang_gte: String

  """All values containing the given string."""
  lang_contains: String

  """All values not containing the given string."""
  lang_not_contains: String

  """All values starting with the given string."""
  lang_starts_with: String

  """All values not starting with the given string."""
  lang_not_starts_with: String

  """All values ending with the given string."""
  lang_ends_with: String

  """All values not ending with the given string."""
  lang_not_ends_with: String
  fieldNumber: DataDictWhereInput
}

input DataDictLocalWhereUniqueInput {
  id: Int
}

enum DataDictOrderByInput {
  fieldNumber_ASC
  fieldNumber_DESC
  dataType_ASC
  dataType_DESC
  entity_ASC
  entity_DESC
  fieldName_ASC
  fieldName_DESC
  fieldType_ASC
  fieldType_DESC
  isRepeat_ASC
  isRepeat_DESC
  linkField_ASC
  linkField_DESC
  linkTable_ASC
  linkTable_DESC
  listCode_ASC
  listCode_DESC
  required_ASC
  required_DESC
  validation_ASC
  validation_DESC
  visibleSelectQuery_ASC
  visibleSelectQuery_DESC
}

type DataDictPreviousValues {
  fieldNumber: ID!
  dataType: String
  entity: String
  fieldName: String
  fieldType: String
  isRepeat: String
  linkField: String
  linkTable: String
  listCode: String
  required: String
  validation: String
  visibleSelectQuery: String
}

type DataDictSubscriptionPayload {
  mutation: MutationType!
  node: DataDict
  updatedFields: [String!]
  previousValues: DataDictPreviousValues
}

input DataDictSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DataDictSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataDictSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataDictSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DataDictWhereInput
}

input DataDictUpdateInput {
  dataType: String
  entity: String
  fieldName: String
  fieldType: String
  isRepeat: String
  linkField: String
  linkTable: String
  listCode: String
  required: String
  validation: String
  visibleSelectQuery: String
  locals: DataDictLocalUpdateManyWithoutFieldNumberInput
}

input DataDictUpdateManyMutationInput {
  dataType: String
  entity: String
  fieldName: String
  fieldType: String
  isRepeat: String
  linkField: String
  linkTable: String
  listCode: String
  required: String
  validation: String
  visibleSelectQuery: String
}

input DataDictUpdateOneRequiredWithoutLocalsInput {
  create: DataDictCreateWithoutLocalsInput
  connect: DataDictWhereUniqueInput
  update: DataDictUpdateWithoutLocalsDataInput
  upsert: DataDictUpsertWithoutLocalsInput
}

input DataDictUpdateWithoutLocalsDataInput {
  dataType: String
  entity: String
  fieldName: String
  fieldType: String
  isRepeat: String
  linkField: String
  linkTable: String
  listCode: String
  required: String
  validation: String
  visibleSelectQuery: String
}

input DataDictUpsertWithoutLocalsInput {
  update: DataDictUpdateWithoutLocalsDataInput!
  create: DataDictCreateWithoutLocalsInput!
}

input DataDictWhereInput {
  """Logical AND on all given filters."""
  AND: [DataDictWhereInput!]

  """Logical OR on all given filters."""
  OR: [DataDictWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DataDictWhereInput!]
  fieldNumber: ID

  """All values that are not equal to given value."""
  fieldNumber_not: ID

  """All values that are contained in given list."""
  fieldNumber_in: [ID!]

  """All values that are not contained in given list."""
  fieldNumber_not_in: [ID!]

  """All values less than the given value."""
  fieldNumber_lt: ID

  """All values less than or equal the given value."""
  fieldNumber_lte: ID

  """All values greater than the given value."""
  fieldNumber_gt: ID

  """All values greater than or equal the given value."""
  fieldNumber_gte: ID

  """All values containing the given string."""
  fieldNumber_contains: ID

  """All values not containing the given string."""
  fieldNumber_not_contains: ID

  """All values starting with the given string."""
  fieldNumber_starts_with: ID

  """All values not starting with the given string."""
  fieldNumber_not_starts_with: ID

  """All values ending with the given string."""
  fieldNumber_ends_with: ID

  """All values not ending with the given string."""
  fieldNumber_not_ends_with: ID
  dataType: String

  """All values that are not equal to given value."""
  dataType_not: String

  """All values that are contained in given list."""
  dataType_in: [String!]

  """All values that are not contained in given list."""
  dataType_not_in: [String!]

  """All values less than the given value."""
  dataType_lt: String

  """All values less than or equal the given value."""
  dataType_lte: String

  """All values greater than the given value."""
  dataType_gt: String

  """All values greater than or equal the given value."""
  dataType_gte: String

  """All values containing the given string."""
  dataType_contains: String

  """All values not containing the given string."""
  dataType_not_contains: String

  """All values starting with the given string."""
  dataType_starts_with: String

  """All values not starting with the given string."""
  dataType_not_starts_with: String

  """All values ending with the given string."""
  dataType_ends_with: String

  """All values not ending with the given string."""
  dataType_not_ends_with: String
  entity: String

  """All values that are not equal to given value."""
  entity_not: String

  """All values that are contained in given list."""
  entity_in: [String!]

  """All values that are not contained in given list."""
  entity_not_in: [String!]

  """All values less than the given value."""
  entity_lt: String

  """All values less than or equal the given value."""
  entity_lte: String

  """All values greater than the given value."""
  entity_gt: String

  """All values greater than or equal the given value."""
  entity_gte: String

  """All values containing the given string."""
  entity_contains: String

  """All values not containing the given string."""
  entity_not_contains: String

  """All values starting with the given string."""
  entity_starts_with: String

  """All values not starting with the given string."""
  entity_not_starts_with: String

  """All values ending with the given string."""
  entity_ends_with: String

  """All values not ending with the given string."""
  entity_not_ends_with: String
  fieldName: String

  """All values that are not equal to given value."""
  fieldName_not: String

  """All values that are contained in given list."""
  fieldName_in: [String!]

  """All values that are not contained in given list."""
  fieldName_not_in: [String!]

  """All values less than the given value."""
  fieldName_lt: String

  """All values less than or equal the given value."""
  fieldName_lte: String

  """All values greater than the given value."""
  fieldName_gt: String

  """All values greater than or equal the given value."""
  fieldName_gte: String

  """All values containing the given string."""
  fieldName_contains: String

  """All values not containing the given string."""
  fieldName_not_contains: String

  """All values starting with the given string."""
  fieldName_starts_with: String

  """All values not starting with the given string."""
  fieldName_not_starts_with: String

  """All values ending with the given string."""
  fieldName_ends_with: String

  """All values not ending with the given string."""
  fieldName_not_ends_with: String
  fieldType: String

  """All values that are not equal to given value."""
  fieldType_not: String

  """All values that are contained in given list."""
  fieldType_in: [String!]

  """All values that are not contained in given list."""
  fieldType_not_in: [String!]

  """All values less than the given value."""
  fieldType_lt: String

  """All values less than or equal the given value."""
  fieldType_lte: String

  """All values greater than the given value."""
  fieldType_gt: String

  """All values greater than or equal the given value."""
  fieldType_gte: String

  """All values containing the given string."""
  fieldType_contains: String

  """All values not containing the given string."""
  fieldType_not_contains: String

  """All values starting with the given string."""
  fieldType_starts_with: String

  """All values not starting with the given string."""
  fieldType_not_starts_with: String

  """All values ending with the given string."""
  fieldType_ends_with: String

  """All values not ending with the given string."""
  fieldType_not_ends_with: String
  isRepeat: String

  """All values that are not equal to given value."""
  isRepeat_not: String

  """All values that are contained in given list."""
  isRepeat_in: [String!]

  """All values that are not contained in given list."""
  isRepeat_not_in: [String!]

  """All values less than the given value."""
  isRepeat_lt: String

  """All values less than or equal the given value."""
  isRepeat_lte: String

  """All values greater than the given value."""
  isRepeat_gt: String

  """All values greater than or equal the given value."""
  isRepeat_gte: String

  """All values containing the given string."""
  isRepeat_contains: String

  """All values not containing the given string."""
  isRepeat_not_contains: String

  """All values starting with the given string."""
  isRepeat_starts_with: String

  """All values not starting with the given string."""
  isRepeat_not_starts_with: String

  """All values ending with the given string."""
  isRepeat_ends_with: String

  """All values not ending with the given string."""
  isRepeat_not_ends_with: String
  linkField: String

  """All values that are not equal to given value."""
  linkField_not: String

  """All values that are contained in given list."""
  linkField_in: [String!]

  """All values that are not contained in given list."""
  linkField_not_in: [String!]

  """All values less than the given value."""
  linkField_lt: String

  """All values less than or equal the given value."""
  linkField_lte: String

  """All values greater than the given value."""
  linkField_gt: String

  """All values greater than or equal the given value."""
  linkField_gte: String

  """All values containing the given string."""
  linkField_contains: String

  """All values not containing the given string."""
  linkField_not_contains: String

  """All values starting with the given string."""
  linkField_starts_with: String

  """All values not starting with the given string."""
  linkField_not_starts_with: String

  """All values ending with the given string."""
  linkField_ends_with: String

  """All values not ending with the given string."""
  linkField_not_ends_with: String
  linkTable: String

  """All values that are not equal to given value."""
  linkTable_not: String

  """All values that are contained in given list."""
  linkTable_in: [String!]

  """All values that are not contained in given list."""
  linkTable_not_in: [String!]

  """All values less than the given value."""
  linkTable_lt: String

  """All values less than or equal the given value."""
  linkTable_lte: String

  """All values greater than the given value."""
  linkTable_gt: String

  """All values greater than or equal the given value."""
  linkTable_gte: String

  """All values containing the given string."""
  linkTable_contains: String

  """All values not containing the given string."""
  linkTable_not_contains: String

  """All values starting with the given string."""
  linkTable_starts_with: String

  """All values not starting with the given string."""
  linkTable_not_starts_with: String

  """All values ending with the given string."""
  linkTable_ends_with: String

  """All values not ending with the given string."""
  linkTable_not_ends_with: String
  listCode: String

  """All values that are not equal to given value."""
  listCode_not: String

  """All values that are contained in given list."""
  listCode_in: [String!]

  """All values that are not contained in given list."""
  listCode_not_in: [String!]

  """All values less than the given value."""
  listCode_lt: String

  """All values less than or equal the given value."""
  listCode_lte: String

  """All values greater than the given value."""
  listCode_gt: String

  """All values greater than or equal the given value."""
  listCode_gte: String

  """All values containing the given string."""
  listCode_contains: String

  """All values not containing the given string."""
  listCode_not_contains: String

  """All values starting with the given string."""
  listCode_starts_with: String

  """All values not starting with the given string."""
  listCode_not_starts_with: String

  """All values ending with the given string."""
  listCode_ends_with: String

  """All values not ending with the given string."""
  listCode_not_ends_with: String
  required: String

  """All values that are not equal to given value."""
  required_not: String

  """All values that are contained in given list."""
  required_in: [String!]

  """All values that are not contained in given list."""
  required_not_in: [String!]

  """All values less than the given value."""
  required_lt: String

  """All values less than or equal the given value."""
  required_lte: String

  """All values greater than the given value."""
  required_gt: String

  """All values greater than or equal the given value."""
  required_gte: String

  """All values containing the given string."""
  required_contains: String

  """All values not containing the given string."""
  required_not_contains: String

  """All values starting with the given string."""
  required_starts_with: String

  """All values not starting with the given string."""
  required_not_starts_with: String

  """All values ending with the given string."""
  required_ends_with: String

  """All values not ending with the given string."""
  required_not_ends_with: String
  validation: String

  """All values that are not equal to given value."""
  validation_not: String

  """All values that are contained in given list."""
  validation_in: [String!]

  """All values that are not contained in given list."""
  validation_not_in: [String!]

  """All values less than the given value."""
  validation_lt: String

  """All values less than or equal the given value."""
  validation_lte: String

  """All values greater than the given value."""
  validation_gt: String

  """All values greater than or equal the given value."""
  validation_gte: String

  """All values containing the given string."""
  validation_contains: String

  """All values not containing the given string."""
  validation_not_contains: String

  """All values starting with the given string."""
  validation_starts_with: String

  """All values not starting with the given string."""
  validation_not_starts_with: String

  """All values ending with the given string."""
  validation_ends_with: String

  """All values not ending with the given string."""
  validation_not_ends_with: String
  visibleSelectQuery: String

  """All values that are not equal to given value."""
  visibleSelectQuery_not: String

  """All values that are contained in given list."""
  visibleSelectQuery_in: [String!]

  """All values that are not contained in given list."""
  visibleSelectQuery_not_in: [String!]

  """All values less than the given value."""
  visibleSelectQuery_lt: String

  """All values less than or equal the given value."""
  visibleSelectQuery_lte: String

  """All values greater than the given value."""
  visibleSelectQuery_gt: String

  """All values greater than or equal the given value."""
  visibleSelectQuery_gte: String

  """All values containing the given string."""
  visibleSelectQuery_contains: String

  """All values not containing the given string."""
  visibleSelectQuery_not_contains: String

  """All values starting with the given string."""
  visibleSelectQuery_starts_with: String

  """All values not starting with the given string."""
  visibleSelectQuery_not_starts_with: String

  """All values ending with the given string."""
  visibleSelectQuery_ends_with: String

  """All values not ending with the given string."""
  visibleSelectQuery_not_ends_with: String
  locals_every: DataDictLocalWhereInput
  locals_some: DataDictLocalWhereInput
  locals_none: DataDictLocalWhereInput
}

input DataDictWhereUniqueInput {
  fieldNumber: ID
}

scalar DateTime

type LogRequest {
  ID: Int!
  caseId: Case
  isiRequest: String
  applicationId: Application
  jenisRequest: String
  networkId: Network
  personId: Person
  pp(where: LogRequestAppWhereInput, orderBy: LogRequestAppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequestApp!]
  statusRequest: String
  requestBy: User
  requestTo: User
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  updatedAt: DateTime
}

type LogRequestApp {
  id: Int!
  appConsultation: User!
  logRequestId: LogRequest
}

"""A connection to a list of items."""
type LogRequestAppConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [LogRequestAppEdge]!
  aggregate: AggregateLogRequestApp!
}

input LogRequestAppCreateInput {
  appConsultation: UserCreateOneWithoutAppConsultationInput!
  logRequestId: LogRequestCreateOneWithoutPpInput
}

input LogRequestAppCreateManyWithoutAppConsultationInput {
  create: [LogRequestAppCreateWithoutAppConsultationInput!]
  connect: [LogRequestAppWhereUniqueInput!]
}

input LogRequestAppCreateManyWithoutLogRequestIdInput {
  create: [LogRequestAppCreateWithoutLogRequestIdInput!]
  connect: [LogRequestAppWhereUniqueInput!]
}

input LogRequestAppCreateWithoutAppConsultationInput {
  logRequestId: LogRequestCreateOneWithoutPpInput
}

input LogRequestAppCreateWithoutLogRequestIdInput {
  appConsultation: UserCreateOneWithoutAppConsultationInput!
}

"""An edge in a connection."""
type LogRequestAppEdge {
  """The item at the end of the edge."""
  node: LogRequestApp!

  """A cursor for use in pagination."""
  cursor: String!
}

enum LogRequestAppOrderByInput {
  id_ASC
  id_DESC
}

type LogRequestAppPreviousValues {
  id: Int!
}

input LogRequestAppScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [LogRequestAppScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [LogRequestAppScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LogRequestAppScalarWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
}

type LogRequestAppSubscriptionPayload {
  mutation: MutationType!
  node: LogRequestApp
  updatedFields: [String!]
  previousValues: LogRequestAppPreviousValues
}

input LogRequestAppSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [LogRequestAppSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [LogRequestAppSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LogRequestAppSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: LogRequestAppWhereInput
}

input LogRequestAppUpdateInput {
  appConsultation: UserUpdateOneRequiredWithoutAppConsultationInput
  logRequestId: LogRequestUpdateOneWithoutPpInput
}

input LogRequestAppUpdateManyWithoutAppConsultationInput {
  create: [LogRequestAppCreateWithoutAppConsultationInput!]
  connect: [LogRequestAppWhereUniqueInput!]
  set: [LogRequestAppWhereUniqueInput!]
  disconnect: [LogRequestAppWhereUniqueInput!]
  delete: [LogRequestAppWhereUniqueInput!]
  update: [LogRequestAppUpdateWithWhereUniqueWithoutAppConsultationInput!]
  deleteMany: [LogRequestAppScalarWhereInput!]
  upsert: [LogRequestAppUpsertWithWhereUniqueWithoutAppConsultationInput!]
}

input LogRequestAppUpdateManyWithoutLogRequestIdInput {
  create: [LogRequestAppCreateWithoutLogRequestIdInput!]
  connect: [LogRequestAppWhereUniqueInput!]
  set: [LogRequestAppWhereUniqueInput!]
  disconnect: [LogRequestAppWhereUniqueInput!]
  delete: [LogRequestAppWhereUniqueInput!]
  update: [LogRequestAppUpdateWithWhereUniqueWithoutLogRequestIdInput!]
  deleteMany: [LogRequestAppScalarWhereInput!]
  upsert: [LogRequestAppUpsertWithWhereUniqueWithoutLogRequestIdInput!]
}

input LogRequestAppUpdateWithoutAppConsultationDataInput {
  logRequestId: LogRequestUpdateOneWithoutPpInput
}

input LogRequestAppUpdateWithoutLogRequestIdDataInput {
  appConsultation: UserUpdateOneRequiredWithoutAppConsultationInput
}

input LogRequestAppUpdateWithWhereUniqueWithoutAppConsultationInput {
  where: LogRequestAppWhereUniqueInput!
  data: LogRequestAppUpdateWithoutAppConsultationDataInput!
}

input LogRequestAppUpdateWithWhereUniqueWithoutLogRequestIdInput {
  where: LogRequestAppWhereUniqueInput!
  data: LogRequestAppUpdateWithoutLogRequestIdDataInput!
}

input LogRequestAppUpsertWithWhereUniqueWithoutAppConsultationInput {
  where: LogRequestAppWhereUniqueInput!
  update: LogRequestAppUpdateWithoutAppConsultationDataInput!
  create: LogRequestAppCreateWithoutAppConsultationInput!
}

input LogRequestAppUpsertWithWhereUniqueWithoutLogRequestIdInput {
  where: LogRequestAppWhereUniqueInput!
  update: LogRequestAppUpdateWithoutLogRequestIdDataInput!
  create: LogRequestAppCreateWithoutLogRequestIdInput!
}

input LogRequestAppWhereInput {
  """Logical AND on all given filters."""
  AND: [LogRequestAppWhereInput!]

  """Logical OR on all given filters."""
  OR: [LogRequestAppWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LogRequestAppWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  appConsultation: UserWhereInput
  logRequestId: LogRequestWhereInput
}

input LogRequestAppWhereUniqueInput {
  id: Int
}

"""A connection to a list of items."""
type LogRequestConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [LogRequestEdge]!
  aggregate: AggregateLogRequest!
}

input LogRequestCreateInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseCreateOneWithoutLogRequestsInput
  applicationId: ApplicationCreateOneInput
  networkId: NetworkCreateOneWithoutLogRequestsInput
  personId: PersonCreateOneWithoutLogRequestsInput
  pp: LogRequestAppCreateManyWithoutLogRequestIdInput
  requestBy: UserCreateOneWithoutLogRequestByInput
  requestTo: UserCreateOneWithoutLogRequestToInput
}

input LogRequestCreateManyInput {
  create: [LogRequestCreateInput!]
  connect: [LogRequestWhereUniqueInput!]
}

input LogRequestCreateManyWithoutCaseIdInput {
  create: [LogRequestCreateWithoutCaseIdInput!]
  connect: [LogRequestWhereUniqueInput!]
}

input LogRequestCreateManyWithoutNetworkIdInput {
  create: [LogRequestCreateWithoutNetworkIdInput!]
  connect: [LogRequestWhereUniqueInput!]
}

input LogRequestCreateManyWithoutPersonIdInput {
  create: [LogRequestCreateWithoutPersonIdInput!]
  connect: [LogRequestWhereUniqueInput!]
}

input LogRequestCreateManyWithoutRequestByInput {
  create: [LogRequestCreateWithoutRequestByInput!]
  connect: [LogRequestWhereUniqueInput!]
}

input LogRequestCreateManyWithoutRequestToInput {
  create: [LogRequestCreateWithoutRequestToInput!]
  connect: [LogRequestWhereUniqueInput!]
}

input LogRequestCreateOneWithoutPpInput {
  create: LogRequestCreateWithoutPpInput
  connect: LogRequestWhereUniqueInput
}

input LogRequestCreateWithoutCaseIdInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  applicationId: ApplicationCreateOneInput
  networkId: NetworkCreateOneWithoutLogRequestsInput
  personId: PersonCreateOneWithoutLogRequestsInput
  pp: LogRequestAppCreateManyWithoutLogRequestIdInput
  requestBy: UserCreateOneWithoutLogRequestByInput
  requestTo: UserCreateOneWithoutLogRequestToInput
}

input LogRequestCreateWithoutNetworkIdInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseCreateOneWithoutLogRequestsInput
  applicationId: ApplicationCreateOneInput
  personId: PersonCreateOneWithoutLogRequestsInput
  pp: LogRequestAppCreateManyWithoutLogRequestIdInput
  requestBy: UserCreateOneWithoutLogRequestByInput
  requestTo: UserCreateOneWithoutLogRequestToInput
}

input LogRequestCreateWithoutPersonIdInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseCreateOneWithoutLogRequestsInput
  applicationId: ApplicationCreateOneInput
  networkId: NetworkCreateOneWithoutLogRequestsInput
  pp: LogRequestAppCreateManyWithoutLogRequestIdInput
  requestBy: UserCreateOneWithoutLogRequestByInput
  requestTo: UserCreateOneWithoutLogRequestToInput
}

input LogRequestCreateWithoutPpInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseCreateOneWithoutLogRequestsInput
  applicationId: ApplicationCreateOneInput
  networkId: NetworkCreateOneWithoutLogRequestsInput
  personId: PersonCreateOneWithoutLogRequestsInput
  requestBy: UserCreateOneWithoutLogRequestByInput
  requestTo: UserCreateOneWithoutLogRequestToInput
}

input LogRequestCreateWithoutRequestByInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseCreateOneWithoutLogRequestsInput
  applicationId: ApplicationCreateOneInput
  networkId: NetworkCreateOneWithoutLogRequestsInput
  personId: PersonCreateOneWithoutLogRequestsInput
  pp: LogRequestAppCreateManyWithoutLogRequestIdInput
  requestTo: UserCreateOneWithoutLogRequestToInput
}

input LogRequestCreateWithoutRequestToInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseCreateOneWithoutLogRequestsInput
  applicationId: ApplicationCreateOneInput
  networkId: NetworkCreateOneWithoutLogRequestsInput
  personId: PersonCreateOneWithoutLogRequestsInput
  pp: LogRequestAppCreateManyWithoutLogRequestIdInput
  requestBy: UserCreateOneWithoutLogRequestByInput
}

"""An edge in a connection."""
type LogRequestEdge {
  """The item at the end of the edge."""
  node: LogRequest!

  """A cursor for use in pagination."""
  cursor: String!
}

enum LogRequestOrderByInput {
  ID_ASC
  ID_DESC
  isiRequest_ASC
  isiRequest_DESC
  jenisRequest_ASC
  jenisRequest_DESC
  statusRequest_ASC
  statusRequest_DESC
  tanggapanRequest_ASC
  tanggapanRequest_DESC
  tanggapanRequestIsi_ASC
  tanggapanRequestIsi_DESC
  tglExpired_ASC
  tglExpired_DESC
  tglRequest_ASC
  tglRequest_DESC
  tglRespon_ASC
  tglRespon_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type LogRequestPreviousValues {
  ID: Int!
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  updatedAt: DateTime
}

input LogRequestScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [LogRequestScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [LogRequestScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LogRequestScalarWhereInput!]
  ID: Int

  """All values that are not equal to given value."""
  ID_not: Int

  """All values that are contained in given list."""
  ID_in: [Int!]

  """All values that are not contained in given list."""
  ID_not_in: [Int!]

  """All values less than the given value."""
  ID_lt: Int

  """All values less than or equal the given value."""
  ID_lte: Int

  """All values greater than the given value."""
  ID_gt: Int

  """All values greater than or equal the given value."""
  ID_gte: Int
  isiRequest: String

  """All values that are not equal to given value."""
  isiRequest_not: String

  """All values that are contained in given list."""
  isiRequest_in: [String!]

  """All values that are not contained in given list."""
  isiRequest_not_in: [String!]

  """All values less than the given value."""
  isiRequest_lt: String

  """All values less than or equal the given value."""
  isiRequest_lte: String

  """All values greater than the given value."""
  isiRequest_gt: String

  """All values greater than or equal the given value."""
  isiRequest_gte: String

  """All values containing the given string."""
  isiRequest_contains: String

  """All values not containing the given string."""
  isiRequest_not_contains: String

  """All values starting with the given string."""
  isiRequest_starts_with: String

  """All values not starting with the given string."""
  isiRequest_not_starts_with: String

  """All values ending with the given string."""
  isiRequest_ends_with: String

  """All values not ending with the given string."""
  isiRequest_not_ends_with: String
  jenisRequest: String

  """All values that are not equal to given value."""
  jenisRequest_not: String

  """All values that are contained in given list."""
  jenisRequest_in: [String!]

  """All values that are not contained in given list."""
  jenisRequest_not_in: [String!]

  """All values less than the given value."""
  jenisRequest_lt: String

  """All values less than or equal the given value."""
  jenisRequest_lte: String

  """All values greater than the given value."""
  jenisRequest_gt: String

  """All values greater than or equal the given value."""
  jenisRequest_gte: String

  """All values containing the given string."""
  jenisRequest_contains: String

  """All values not containing the given string."""
  jenisRequest_not_contains: String

  """All values starting with the given string."""
  jenisRequest_starts_with: String

  """All values not starting with the given string."""
  jenisRequest_not_starts_with: String

  """All values ending with the given string."""
  jenisRequest_ends_with: String

  """All values not ending with the given string."""
  jenisRequest_not_ends_with: String
  statusRequest: String

  """All values that are not equal to given value."""
  statusRequest_not: String

  """All values that are contained in given list."""
  statusRequest_in: [String!]

  """All values that are not contained in given list."""
  statusRequest_not_in: [String!]

  """All values less than the given value."""
  statusRequest_lt: String

  """All values less than or equal the given value."""
  statusRequest_lte: String

  """All values greater than the given value."""
  statusRequest_gt: String

  """All values greater than or equal the given value."""
  statusRequest_gte: String

  """All values containing the given string."""
  statusRequest_contains: String

  """All values not containing the given string."""
  statusRequest_not_contains: String

  """All values starting with the given string."""
  statusRequest_starts_with: String

  """All values not starting with the given string."""
  statusRequest_not_starts_with: String

  """All values ending with the given string."""
  statusRequest_ends_with: String

  """All values not ending with the given string."""
  statusRequest_not_ends_with: String
  tanggapanRequest: String

  """All values that are not equal to given value."""
  tanggapanRequest_not: String

  """All values that are contained in given list."""
  tanggapanRequest_in: [String!]

  """All values that are not contained in given list."""
  tanggapanRequest_not_in: [String!]

  """All values less than the given value."""
  tanggapanRequest_lt: String

  """All values less than or equal the given value."""
  tanggapanRequest_lte: String

  """All values greater than the given value."""
  tanggapanRequest_gt: String

  """All values greater than or equal the given value."""
  tanggapanRequest_gte: String

  """All values containing the given string."""
  tanggapanRequest_contains: String

  """All values not containing the given string."""
  tanggapanRequest_not_contains: String

  """All values starting with the given string."""
  tanggapanRequest_starts_with: String

  """All values not starting with the given string."""
  tanggapanRequest_not_starts_with: String

  """All values ending with the given string."""
  tanggapanRequest_ends_with: String

  """All values not ending with the given string."""
  tanggapanRequest_not_ends_with: String
  tanggapanRequestIsi: String

  """All values that are not equal to given value."""
  tanggapanRequestIsi_not: String

  """All values that are contained in given list."""
  tanggapanRequestIsi_in: [String!]

  """All values that are not contained in given list."""
  tanggapanRequestIsi_not_in: [String!]

  """All values less than the given value."""
  tanggapanRequestIsi_lt: String

  """All values less than or equal the given value."""
  tanggapanRequestIsi_lte: String

  """All values greater than the given value."""
  tanggapanRequestIsi_gt: String

  """All values greater than or equal the given value."""
  tanggapanRequestIsi_gte: String

  """All values containing the given string."""
  tanggapanRequestIsi_contains: String

  """All values not containing the given string."""
  tanggapanRequestIsi_not_contains: String

  """All values starting with the given string."""
  tanggapanRequestIsi_starts_with: String

  """All values not starting with the given string."""
  tanggapanRequestIsi_not_starts_with: String

  """All values ending with the given string."""
  tanggapanRequestIsi_ends_with: String

  """All values not ending with the given string."""
  tanggapanRequestIsi_not_ends_with: String
  tglExpired: DateTime

  """All values that are not equal to given value."""
  tglExpired_not: DateTime

  """All values that are contained in given list."""
  tglExpired_in: [DateTime!]

  """All values that are not contained in given list."""
  tglExpired_not_in: [DateTime!]

  """All values less than the given value."""
  tglExpired_lt: DateTime

  """All values less than or equal the given value."""
  tglExpired_lte: DateTime

  """All values greater than the given value."""
  tglExpired_gt: DateTime

  """All values greater than or equal the given value."""
  tglExpired_gte: DateTime
  tglRequest: DateTime

  """All values that are not equal to given value."""
  tglRequest_not: DateTime

  """All values that are contained in given list."""
  tglRequest_in: [DateTime!]

  """All values that are not contained in given list."""
  tglRequest_not_in: [DateTime!]

  """All values less than the given value."""
  tglRequest_lt: DateTime

  """All values less than or equal the given value."""
  tglRequest_lte: DateTime

  """All values greater than the given value."""
  tglRequest_gt: DateTime

  """All values greater than or equal the given value."""
  tglRequest_gte: DateTime
  tglRespon: DateTime

  """All values that are not equal to given value."""
  tglRespon_not: DateTime

  """All values that are contained in given list."""
  tglRespon_in: [DateTime!]

  """All values that are not contained in given list."""
  tglRespon_not_in: [DateTime!]

  """All values less than the given value."""
  tglRespon_lt: DateTime

  """All values less than or equal the given value."""
  tglRespon_lte: DateTime

  """All values greater than the given value."""
  tglRespon_gt: DateTime

  """All values greater than or equal the given value."""
  tglRespon_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type LogRequestSubscriptionPayload {
  mutation: MutationType!
  node: LogRequest
  updatedFields: [String!]
  previousValues: LogRequestPreviousValues
}

input LogRequestSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [LogRequestSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [LogRequestSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LogRequestSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: LogRequestWhereInput
}

input LogRequestUpdateDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseUpdateOneWithoutLogRequestsInput
  applicationId: ApplicationUpdateOneInput
  networkId: NetworkUpdateOneWithoutLogRequestsInput
  personId: PersonUpdateOneWithoutLogRequestsInput
  pp: LogRequestAppUpdateManyWithoutLogRequestIdInput
  requestBy: UserUpdateOneWithoutLogRequestByInput
  requestTo: UserUpdateOneWithoutLogRequestToInput
}

input LogRequestUpdateInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseUpdateOneWithoutLogRequestsInput
  applicationId: ApplicationUpdateOneInput
  networkId: NetworkUpdateOneWithoutLogRequestsInput
  personId: PersonUpdateOneWithoutLogRequestsInput
  pp: LogRequestAppUpdateManyWithoutLogRequestIdInput
  requestBy: UserUpdateOneWithoutLogRequestByInput
  requestTo: UserUpdateOneWithoutLogRequestToInput
}

input LogRequestUpdateManyDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
}

input LogRequestUpdateManyInput {
  create: [LogRequestCreateInput!]
  connect: [LogRequestWhereUniqueInput!]
  set: [LogRequestWhereUniqueInput!]
  disconnect: [LogRequestWhereUniqueInput!]
  delete: [LogRequestWhereUniqueInput!]
  update: [LogRequestUpdateWithWhereUniqueNestedInput!]
  updateMany: [LogRequestUpdateManyWithWhereNestedInput!]
  deleteMany: [LogRequestScalarWhereInput!]
  upsert: [LogRequestUpsertWithWhereUniqueNestedInput!]
}

input LogRequestUpdateManyMutationInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
}

input LogRequestUpdateManyWithoutCaseIdInput {
  create: [LogRequestCreateWithoutCaseIdInput!]
  connect: [LogRequestWhereUniqueInput!]
  set: [LogRequestWhereUniqueInput!]
  disconnect: [LogRequestWhereUniqueInput!]
  delete: [LogRequestWhereUniqueInput!]
  update: [LogRequestUpdateWithWhereUniqueWithoutCaseIdInput!]
  updateMany: [LogRequestUpdateManyWithWhereNestedInput!]
  deleteMany: [LogRequestScalarWhereInput!]
  upsert: [LogRequestUpsertWithWhereUniqueWithoutCaseIdInput!]
}

input LogRequestUpdateManyWithoutNetworkIdInput {
  create: [LogRequestCreateWithoutNetworkIdInput!]
  connect: [LogRequestWhereUniqueInput!]
  set: [LogRequestWhereUniqueInput!]
  disconnect: [LogRequestWhereUniqueInput!]
  delete: [LogRequestWhereUniqueInput!]
  update: [LogRequestUpdateWithWhereUniqueWithoutNetworkIdInput!]
  updateMany: [LogRequestUpdateManyWithWhereNestedInput!]
  deleteMany: [LogRequestScalarWhereInput!]
  upsert: [LogRequestUpsertWithWhereUniqueWithoutNetworkIdInput!]
}

input LogRequestUpdateManyWithoutPersonIdInput {
  create: [LogRequestCreateWithoutPersonIdInput!]
  connect: [LogRequestWhereUniqueInput!]
  set: [LogRequestWhereUniqueInput!]
  disconnect: [LogRequestWhereUniqueInput!]
  delete: [LogRequestWhereUniqueInput!]
  update: [LogRequestUpdateWithWhereUniqueWithoutPersonIdInput!]
  updateMany: [LogRequestUpdateManyWithWhereNestedInput!]
  deleteMany: [LogRequestScalarWhereInput!]
  upsert: [LogRequestUpsertWithWhereUniqueWithoutPersonIdInput!]
}

input LogRequestUpdateManyWithoutRequestByInput {
  create: [LogRequestCreateWithoutRequestByInput!]
  connect: [LogRequestWhereUniqueInput!]
  set: [LogRequestWhereUniqueInput!]
  disconnect: [LogRequestWhereUniqueInput!]
  delete: [LogRequestWhereUniqueInput!]
  update: [LogRequestUpdateWithWhereUniqueWithoutRequestByInput!]
  updateMany: [LogRequestUpdateManyWithWhereNestedInput!]
  deleteMany: [LogRequestScalarWhereInput!]
  upsert: [LogRequestUpsertWithWhereUniqueWithoutRequestByInput!]
}

input LogRequestUpdateManyWithoutRequestToInput {
  create: [LogRequestCreateWithoutRequestToInput!]
  connect: [LogRequestWhereUniqueInput!]
  set: [LogRequestWhereUniqueInput!]
  disconnect: [LogRequestWhereUniqueInput!]
  delete: [LogRequestWhereUniqueInput!]
  update: [LogRequestUpdateWithWhereUniqueWithoutRequestToInput!]
  updateMany: [LogRequestUpdateManyWithWhereNestedInput!]
  deleteMany: [LogRequestScalarWhereInput!]
  upsert: [LogRequestUpsertWithWhereUniqueWithoutRequestToInput!]
}

input LogRequestUpdateManyWithWhereNestedInput {
  where: LogRequestScalarWhereInput!
  data: LogRequestUpdateManyDataInput!
}

input LogRequestUpdateOneWithoutPpInput {
  create: LogRequestCreateWithoutPpInput
  connect: LogRequestWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: LogRequestUpdateWithoutPpDataInput
  upsert: LogRequestUpsertWithoutPpInput
}

input LogRequestUpdateWithoutCaseIdDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  applicationId: ApplicationUpdateOneInput
  networkId: NetworkUpdateOneWithoutLogRequestsInput
  personId: PersonUpdateOneWithoutLogRequestsInput
  pp: LogRequestAppUpdateManyWithoutLogRequestIdInput
  requestBy: UserUpdateOneWithoutLogRequestByInput
  requestTo: UserUpdateOneWithoutLogRequestToInput
}

input LogRequestUpdateWithoutNetworkIdDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseUpdateOneWithoutLogRequestsInput
  applicationId: ApplicationUpdateOneInput
  personId: PersonUpdateOneWithoutLogRequestsInput
  pp: LogRequestAppUpdateManyWithoutLogRequestIdInput
  requestBy: UserUpdateOneWithoutLogRequestByInput
  requestTo: UserUpdateOneWithoutLogRequestToInput
}

input LogRequestUpdateWithoutPersonIdDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseUpdateOneWithoutLogRequestsInput
  applicationId: ApplicationUpdateOneInput
  networkId: NetworkUpdateOneWithoutLogRequestsInput
  pp: LogRequestAppUpdateManyWithoutLogRequestIdInput
  requestBy: UserUpdateOneWithoutLogRequestByInput
  requestTo: UserUpdateOneWithoutLogRequestToInput
}

input LogRequestUpdateWithoutPpDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseUpdateOneWithoutLogRequestsInput
  applicationId: ApplicationUpdateOneInput
  networkId: NetworkUpdateOneWithoutLogRequestsInput
  personId: PersonUpdateOneWithoutLogRequestsInput
  requestBy: UserUpdateOneWithoutLogRequestByInput
  requestTo: UserUpdateOneWithoutLogRequestToInput
}

input LogRequestUpdateWithoutRequestByDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseUpdateOneWithoutLogRequestsInput
  applicationId: ApplicationUpdateOneInput
  networkId: NetworkUpdateOneWithoutLogRequestsInput
  personId: PersonUpdateOneWithoutLogRequestsInput
  pp: LogRequestAppUpdateManyWithoutLogRequestIdInput
  requestTo: UserUpdateOneWithoutLogRequestToInput
}

input LogRequestUpdateWithoutRequestToDataInput {
  isiRequest: String
  jenisRequest: String
  statusRequest: String
  tanggapanRequest: String
  tanggapanRequestIsi: String
  tglExpired: DateTime
  tglRequest: DateTime
  tglRespon: DateTime
  caseId: CaseUpdateOneWithoutLogRequestsInput
  applicationId: ApplicationUpdateOneInput
  networkId: NetworkUpdateOneWithoutLogRequestsInput
  personId: PersonUpdateOneWithoutLogRequestsInput
  pp: LogRequestAppUpdateManyWithoutLogRequestIdInput
  requestBy: UserUpdateOneWithoutLogRequestByInput
}

input LogRequestUpdateWithWhereUniqueNestedInput {
  where: LogRequestWhereUniqueInput!
  data: LogRequestUpdateDataInput!
}

input LogRequestUpdateWithWhereUniqueWithoutCaseIdInput {
  where: LogRequestWhereUniqueInput!
  data: LogRequestUpdateWithoutCaseIdDataInput!
}

input LogRequestUpdateWithWhereUniqueWithoutNetworkIdInput {
  where: LogRequestWhereUniqueInput!
  data: LogRequestUpdateWithoutNetworkIdDataInput!
}

input LogRequestUpdateWithWhereUniqueWithoutPersonIdInput {
  where: LogRequestWhereUniqueInput!
  data: LogRequestUpdateWithoutPersonIdDataInput!
}

input LogRequestUpdateWithWhereUniqueWithoutRequestByInput {
  where: LogRequestWhereUniqueInput!
  data: LogRequestUpdateWithoutRequestByDataInput!
}

input LogRequestUpdateWithWhereUniqueWithoutRequestToInput {
  where: LogRequestWhereUniqueInput!
  data: LogRequestUpdateWithoutRequestToDataInput!
}

input LogRequestUpsertWithoutPpInput {
  update: LogRequestUpdateWithoutPpDataInput!
  create: LogRequestCreateWithoutPpInput!
}

input LogRequestUpsertWithWhereUniqueNestedInput {
  where: LogRequestWhereUniqueInput!
  update: LogRequestUpdateDataInput!
  create: LogRequestCreateInput!
}

input LogRequestUpsertWithWhereUniqueWithoutCaseIdInput {
  where: LogRequestWhereUniqueInput!
  update: LogRequestUpdateWithoutCaseIdDataInput!
  create: LogRequestCreateWithoutCaseIdInput!
}

input LogRequestUpsertWithWhereUniqueWithoutNetworkIdInput {
  where: LogRequestWhereUniqueInput!
  update: LogRequestUpdateWithoutNetworkIdDataInput!
  create: LogRequestCreateWithoutNetworkIdInput!
}

input LogRequestUpsertWithWhereUniqueWithoutPersonIdInput {
  where: LogRequestWhereUniqueInput!
  update: LogRequestUpdateWithoutPersonIdDataInput!
  create: LogRequestCreateWithoutPersonIdInput!
}

input LogRequestUpsertWithWhereUniqueWithoutRequestByInput {
  where: LogRequestWhereUniqueInput!
  update: LogRequestUpdateWithoutRequestByDataInput!
  create: LogRequestCreateWithoutRequestByInput!
}

input LogRequestUpsertWithWhereUniqueWithoutRequestToInput {
  where: LogRequestWhereUniqueInput!
  update: LogRequestUpdateWithoutRequestToDataInput!
  create: LogRequestCreateWithoutRequestToInput!
}

input LogRequestWhereInput {
  """Logical AND on all given filters."""
  AND: [LogRequestWhereInput!]

  """Logical OR on all given filters."""
  OR: [LogRequestWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LogRequestWhereInput!]
  ID: Int

  """All values that are not equal to given value."""
  ID_not: Int

  """All values that are contained in given list."""
  ID_in: [Int!]

  """All values that are not contained in given list."""
  ID_not_in: [Int!]

  """All values less than the given value."""
  ID_lt: Int

  """All values less than or equal the given value."""
  ID_lte: Int

  """All values greater than the given value."""
  ID_gt: Int

  """All values greater than or equal the given value."""
  ID_gte: Int
  isiRequest: String

  """All values that are not equal to given value."""
  isiRequest_not: String

  """All values that are contained in given list."""
  isiRequest_in: [String!]

  """All values that are not contained in given list."""
  isiRequest_not_in: [String!]

  """All values less than the given value."""
  isiRequest_lt: String

  """All values less than or equal the given value."""
  isiRequest_lte: String

  """All values greater than the given value."""
  isiRequest_gt: String

  """All values greater than or equal the given value."""
  isiRequest_gte: String

  """All values containing the given string."""
  isiRequest_contains: String

  """All values not containing the given string."""
  isiRequest_not_contains: String

  """All values starting with the given string."""
  isiRequest_starts_with: String

  """All values not starting with the given string."""
  isiRequest_not_starts_with: String

  """All values ending with the given string."""
  isiRequest_ends_with: String

  """All values not ending with the given string."""
  isiRequest_not_ends_with: String
  jenisRequest: String

  """All values that are not equal to given value."""
  jenisRequest_not: String

  """All values that are contained in given list."""
  jenisRequest_in: [String!]

  """All values that are not contained in given list."""
  jenisRequest_not_in: [String!]

  """All values less than the given value."""
  jenisRequest_lt: String

  """All values less than or equal the given value."""
  jenisRequest_lte: String

  """All values greater than the given value."""
  jenisRequest_gt: String

  """All values greater than or equal the given value."""
  jenisRequest_gte: String

  """All values containing the given string."""
  jenisRequest_contains: String

  """All values not containing the given string."""
  jenisRequest_not_contains: String

  """All values starting with the given string."""
  jenisRequest_starts_with: String

  """All values not starting with the given string."""
  jenisRequest_not_starts_with: String

  """All values ending with the given string."""
  jenisRequest_ends_with: String

  """All values not ending with the given string."""
  jenisRequest_not_ends_with: String
  statusRequest: String

  """All values that are not equal to given value."""
  statusRequest_not: String

  """All values that are contained in given list."""
  statusRequest_in: [String!]

  """All values that are not contained in given list."""
  statusRequest_not_in: [String!]

  """All values less than the given value."""
  statusRequest_lt: String

  """All values less than or equal the given value."""
  statusRequest_lte: String

  """All values greater than the given value."""
  statusRequest_gt: String

  """All values greater than or equal the given value."""
  statusRequest_gte: String

  """All values containing the given string."""
  statusRequest_contains: String

  """All values not containing the given string."""
  statusRequest_not_contains: String

  """All values starting with the given string."""
  statusRequest_starts_with: String

  """All values not starting with the given string."""
  statusRequest_not_starts_with: String

  """All values ending with the given string."""
  statusRequest_ends_with: String

  """All values not ending with the given string."""
  statusRequest_not_ends_with: String
  tanggapanRequest: String

  """All values that are not equal to given value."""
  tanggapanRequest_not: String

  """All values that are contained in given list."""
  tanggapanRequest_in: [String!]

  """All values that are not contained in given list."""
  tanggapanRequest_not_in: [String!]

  """All values less than the given value."""
  tanggapanRequest_lt: String

  """All values less than or equal the given value."""
  tanggapanRequest_lte: String

  """All values greater than the given value."""
  tanggapanRequest_gt: String

  """All values greater than or equal the given value."""
  tanggapanRequest_gte: String

  """All values containing the given string."""
  tanggapanRequest_contains: String

  """All values not containing the given string."""
  tanggapanRequest_not_contains: String

  """All values starting with the given string."""
  tanggapanRequest_starts_with: String

  """All values not starting with the given string."""
  tanggapanRequest_not_starts_with: String

  """All values ending with the given string."""
  tanggapanRequest_ends_with: String

  """All values not ending with the given string."""
  tanggapanRequest_not_ends_with: String
  tanggapanRequestIsi: String

  """All values that are not equal to given value."""
  tanggapanRequestIsi_not: String

  """All values that are contained in given list."""
  tanggapanRequestIsi_in: [String!]

  """All values that are not contained in given list."""
  tanggapanRequestIsi_not_in: [String!]

  """All values less than the given value."""
  tanggapanRequestIsi_lt: String

  """All values less than or equal the given value."""
  tanggapanRequestIsi_lte: String

  """All values greater than the given value."""
  tanggapanRequestIsi_gt: String

  """All values greater than or equal the given value."""
  tanggapanRequestIsi_gte: String

  """All values containing the given string."""
  tanggapanRequestIsi_contains: String

  """All values not containing the given string."""
  tanggapanRequestIsi_not_contains: String

  """All values starting with the given string."""
  tanggapanRequestIsi_starts_with: String

  """All values not starting with the given string."""
  tanggapanRequestIsi_not_starts_with: String

  """All values ending with the given string."""
  tanggapanRequestIsi_ends_with: String

  """All values not ending with the given string."""
  tanggapanRequestIsi_not_ends_with: String
  tglExpired: DateTime

  """All values that are not equal to given value."""
  tglExpired_not: DateTime

  """All values that are contained in given list."""
  tglExpired_in: [DateTime!]

  """All values that are not contained in given list."""
  tglExpired_not_in: [DateTime!]

  """All values less than the given value."""
  tglExpired_lt: DateTime

  """All values less than or equal the given value."""
  tglExpired_lte: DateTime

  """All values greater than the given value."""
  tglExpired_gt: DateTime

  """All values greater than or equal the given value."""
  tglExpired_gte: DateTime
  tglRequest: DateTime

  """All values that are not equal to given value."""
  tglRequest_not: DateTime

  """All values that are contained in given list."""
  tglRequest_in: [DateTime!]

  """All values that are not contained in given list."""
  tglRequest_not_in: [DateTime!]

  """All values less than the given value."""
  tglRequest_lt: DateTime

  """All values less than or equal the given value."""
  tglRequest_lte: DateTime

  """All values greater than the given value."""
  tglRequest_gt: DateTime

  """All values greater than or equal the given value."""
  tglRequest_gte: DateTime
  tglRespon: DateTime

  """All values that are not equal to given value."""
  tglRespon_not: DateTime

  """All values that are contained in given list."""
  tglRespon_in: [DateTime!]

  """All values that are not contained in given list."""
  tglRespon_not_in: [DateTime!]

  """All values less than the given value."""
  tglRespon_lt: DateTime

  """All values less than or equal the given value."""
  tglRespon_lte: DateTime

  """All values greater than the given value."""
  tglRespon_gt: DateTime

  """All values greater than or equal the given value."""
  tglRespon_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  caseId: CaseWhereInput
  applicationId: ApplicationWhereInput
  networkId: NetworkWhereInput
  personId: PersonWhereInput
  pp_every: LogRequestAppWhereInput
  pp_some: LogRequestAppWhereInput
  pp_none: LogRequestAppWhereInput
  requestBy: UserWhereInput
  requestTo: UserWhereInput
}

input LogRequestWhereUniqueInput {
  ID: Int
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type MtVocab {
  KODE: ID!
  kode_induk: String
  kode_list: MtVocabGroup
  level: Int
  sembunyikan: Boolean!
  teks: String
  urutan: Int
}

"""A connection to a list of items."""
type MtVocabConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MtVocabEdge]!
  aggregate: AggregateMtVocab!
}

input MtVocabCreateInput {
  KODE: ID
  kode_induk: String
  level: Int
  sembunyikan: Boolean!
  teks: String
  urutan: Int
  kode_list: MtVocabGroupCreateOneWithoutMtvocabsInput
}

input MtVocabCreateManyWithoutKode_listInput {
  create: [MtVocabCreateWithoutKode_listInput!]
  connect: [MtVocabWhereUniqueInput!]
}

input MtVocabCreateWithoutKode_listInput {
  KODE: ID
  kode_induk: String
  level: Int
  sembunyikan: Boolean!
  teks: String
  urutan: Int
}

"""An edge in a connection."""
type MtVocabEdge {
  """The item at the end of the edge."""
  node: MtVocab!

  """A cursor for use in pagination."""
  cursor: String!
}

type MtVocabGroup {
  kode_list: Int!
  nama_list: String
  mtvocabs(where: MtVocabWhereInput, orderBy: MtVocabOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MtVocab!]
}

"""A connection to a list of items."""
type MtVocabGroupConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MtVocabGroupEdge]!
  aggregate: AggregateMtVocabGroup!
}

input MtVocabGroupCreateInput {
  nama_list: String
  mtvocabs: MtVocabCreateManyWithoutKode_listInput
}

input MtVocabGroupCreateOneWithoutMtvocabsInput {
  create: MtVocabGroupCreateWithoutMtvocabsInput
  connect: MtVocabGroupWhereUniqueInput
}

input MtVocabGroupCreateWithoutMtvocabsInput {
  nama_list: String
}

"""An edge in a connection."""
type MtVocabGroupEdge {
  """The item at the end of the edge."""
  node: MtVocabGroup!

  """A cursor for use in pagination."""
  cursor: String!
}

enum MtVocabGroupOrderByInput {
  kode_list_ASC
  kode_list_DESC
  nama_list_ASC
  nama_list_DESC
}

type MtVocabGroupPreviousValues {
  kode_list: Int!
  nama_list: String
}

type MtVocabGroupSubscriptionPayload {
  mutation: MutationType!
  node: MtVocabGroup
  updatedFields: [String!]
  previousValues: MtVocabGroupPreviousValues
}

input MtVocabGroupSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [MtVocabGroupSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MtVocabGroupSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MtVocabGroupSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MtVocabGroupWhereInput
}

input MtVocabGroupUpdateInput {
  nama_list: String
  mtvocabs: MtVocabUpdateManyWithoutKode_listInput
}

input MtVocabGroupUpdateManyMutationInput {
  nama_list: String
}

input MtVocabGroupUpdateOneWithoutMtvocabsInput {
  create: MtVocabGroupCreateWithoutMtvocabsInput
  connect: MtVocabGroupWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: MtVocabGroupUpdateWithoutMtvocabsDataInput
  upsert: MtVocabGroupUpsertWithoutMtvocabsInput
}

input MtVocabGroupUpdateWithoutMtvocabsDataInput {
  nama_list: String
}

input MtVocabGroupUpsertWithoutMtvocabsInput {
  update: MtVocabGroupUpdateWithoutMtvocabsDataInput!
  create: MtVocabGroupCreateWithoutMtvocabsInput!
}

input MtVocabGroupWhereInput {
  """Logical AND on all given filters."""
  AND: [MtVocabGroupWhereInput!]

  """Logical OR on all given filters."""
  OR: [MtVocabGroupWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MtVocabGroupWhereInput!]
  kode_list: Int

  """All values that are not equal to given value."""
  kode_list_not: Int

  """All values that are contained in given list."""
  kode_list_in: [Int!]

  """All values that are not contained in given list."""
  kode_list_not_in: [Int!]

  """All values less than the given value."""
  kode_list_lt: Int

  """All values less than or equal the given value."""
  kode_list_lte: Int

  """All values greater than the given value."""
  kode_list_gt: Int

  """All values greater than or equal the given value."""
  kode_list_gte: Int
  nama_list: String

  """All values that are not equal to given value."""
  nama_list_not: String

  """All values that are contained in given list."""
  nama_list_in: [String!]

  """All values that are not contained in given list."""
  nama_list_not_in: [String!]

  """All values less than the given value."""
  nama_list_lt: String

  """All values less than or equal the given value."""
  nama_list_lte: String

  """All values greater than the given value."""
  nama_list_gt: String

  """All values greater than or equal the given value."""
  nama_list_gte: String

  """All values containing the given string."""
  nama_list_contains: String

  """All values not containing the given string."""
  nama_list_not_contains: String

  """All values starting with the given string."""
  nama_list_starts_with: String

  """All values not starting with the given string."""
  nama_list_not_starts_with: String

  """All values ending with the given string."""
  nama_list_ends_with: String

  """All values not ending with the given string."""
  nama_list_not_ends_with: String
  mtvocabs_every: MtVocabWhereInput
  mtvocabs_some: MtVocabWhereInput
  mtvocabs_none: MtVocabWhereInput
}

input MtVocabGroupWhereUniqueInput {
  kode_list: Int
}

enum MtVocabOrderByInput {
  KODE_ASC
  KODE_DESC
  kode_induk_ASC
  kode_induk_DESC
  level_ASC
  level_DESC
  sembunyikan_ASC
  sembunyikan_DESC
  teks_ASC
  teks_DESC
  urutan_ASC
  urutan_DESC
}

type MtVocabPreviousValues {
  KODE: ID!
  kode_induk: String
  level: Int
  sembunyikan: Boolean!
  teks: String
  urutan: Int
}

input MtVocabScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [MtVocabScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [MtVocabScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MtVocabScalarWhereInput!]
  KODE: ID

  """All values that are not equal to given value."""
  KODE_not: ID

  """All values that are contained in given list."""
  KODE_in: [ID!]

  """All values that are not contained in given list."""
  KODE_not_in: [ID!]

  """All values less than the given value."""
  KODE_lt: ID

  """All values less than or equal the given value."""
  KODE_lte: ID

  """All values greater than the given value."""
  KODE_gt: ID

  """All values greater than or equal the given value."""
  KODE_gte: ID

  """All values containing the given string."""
  KODE_contains: ID

  """All values not containing the given string."""
  KODE_not_contains: ID

  """All values starting with the given string."""
  KODE_starts_with: ID

  """All values not starting with the given string."""
  KODE_not_starts_with: ID

  """All values ending with the given string."""
  KODE_ends_with: ID

  """All values not ending with the given string."""
  KODE_not_ends_with: ID
  kode_induk: String

  """All values that are not equal to given value."""
  kode_induk_not: String

  """All values that are contained in given list."""
  kode_induk_in: [String!]

  """All values that are not contained in given list."""
  kode_induk_not_in: [String!]

  """All values less than the given value."""
  kode_induk_lt: String

  """All values less than or equal the given value."""
  kode_induk_lte: String

  """All values greater than the given value."""
  kode_induk_gt: String

  """All values greater than or equal the given value."""
  kode_induk_gte: String

  """All values containing the given string."""
  kode_induk_contains: String

  """All values not containing the given string."""
  kode_induk_not_contains: String

  """All values starting with the given string."""
  kode_induk_starts_with: String

  """All values not starting with the given string."""
  kode_induk_not_starts_with: String

  """All values ending with the given string."""
  kode_induk_ends_with: String

  """All values not ending with the given string."""
  kode_induk_not_ends_with: String
  level: Int

  """All values that are not equal to given value."""
  level_not: Int

  """All values that are contained in given list."""
  level_in: [Int!]

  """All values that are not contained in given list."""
  level_not_in: [Int!]

  """All values less than the given value."""
  level_lt: Int

  """All values less than or equal the given value."""
  level_lte: Int

  """All values greater than the given value."""
  level_gt: Int

  """All values greater than or equal the given value."""
  level_gte: Int
  sembunyikan: Boolean

  """All values that are not equal to given value."""
  sembunyikan_not: Boolean
  teks: String

  """All values that are not equal to given value."""
  teks_not: String

  """All values that are contained in given list."""
  teks_in: [String!]

  """All values that are not contained in given list."""
  teks_not_in: [String!]

  """All values less than the given value."""
  teks_lt: String

  """All values less than or equal the given value."""
  teks_lte: String

  """All values greater than the given value."""
  teks_gt: String

  """All values greater than or equal the given value."""
  teks_gte: String

  """All values containing the given string."""
  teks_contains: String

  """All values not containing the given string."""
  teks_not_contains: String

  """All values starting with the given string."""
  teks_starts_with: String

  """All values not starting with the given string."""
  teks_not_starts_with: String

  """All values ending with the given string."""
  teks_ends_with: String

  """All values not ending with the given string."""
  teks_not_ends_with: String
  urutan: Int

  """All values that are not equal to given value."""
  urutan_not: Int

  """All values that are contained in given list."""
  urutan_in: [Int!]

  """All values that are not contained in given list."""
  urutan_not_in: [Int!]

  """All values less than the given value."""
  urutan_lt: Int

  """All values less than or equal the given value."""
  urutan_lte: Int

  """All values greater than the given value."""
  urutan_gt: Int

  """All values greater than or equal the given value."""
  urutan_gte: Int
}

type MtVocabSubscriptionPayload {
  mutation: MutationType!
  node: MtVocab
  updatedFields: [String!]
  previousValues: MtVocabPreviousValues
}

input MtVocabSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [MtVocabSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MtVocabSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MtVocabSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MtVocabWhereInput
}

input MtVocabUpdateInput {
  kode_induk: String
  level: Int
  sembunyikan: Boolean
  teks: String
  urutan: Int
  kode_list: MtVocabGroupUpdateOneWithoutMtvocabsInput
}

input MtVocabUpdateManyDataInput {
  kode_induk: String
  level: Int
  sembunyikan: Boolean
  teks: String
  urutan: Int
}

input MtVocabUpdateManyMutationInput {
  kode_induk: String
  level: Int
  sembunyikan: Boolean
  teks: String
  urutan: Int
}

input MtVocabUpdateManyWithoutKode_listInput {
  create: [MtVocabCreateWithoutKode_listInput!]
  connect: [MtVocabWhereUniqueInput!]
  set: [MtVocabWhereUniqueInput!]
  disconnect: [MtVocabWhereUniqueInput!]
  delete: [MtVocabWhereUniqueInput!]
  update: [MtVocabUpdateWithWhereUniqueWithoutKode_listInput!]
  updateMany: [MtVocabUpdateManyWithWhereNestedInput!]
  deleteMany: [MtVocabScalarWhereInput!]
  upsert: [MtVocabUpsertWithWhereUniqueWithoutKode_listInput!]
}

input MtVocabUpdateManyWithWhereNestedInput {
  where: MtVocabScalarWhereInput!
  data: MtVocabUpdateManyDataInput!
}

input MtVocabUpdateWithoutKode_listDataInput {
  kode_induk: String
  level: Int
  sembunyikan: Boolean
  teks: String
  urutan: Int
}

input MtVocabUpdateWithWhereUniqueWithoutKode_listInput {
  where: MtVocabWhereUniqueInput!
  data: MtVocabUpdateWithoutKode_listDataInput!
}

input MtVocabUpsertWithWhereUniqueWithoutKode_listInput {
  where: MtVocabWhereUniqueInput!
  update: MtVocabUpdateWithoutKode_listDataInput!
  create: MtVocabCreateWithoutKode_listInput!
}

input MtVocabWhereInput {
  """Logical AND on all given filters."""
  AND: [MtVocabWhereInput!]

  """Logical OR on all given filters."""
  OR: [MtVocabWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MtVocabWhereInput!]
  KODE: ID

  """All values that are not equal to given value."""
  KODE_not: ID

  """All values that are contained in given list."""
  KODE_in: [ID!]

  """All values that are not contained in given list."""
  KODE_not_in: [ID!]

  """All values less than the given value."""
  KODE_lt: ID

  """All values less than or equal the given value."""
  KODE_lte: ID

  """All values greater than the given value."""
  KODE_gt: ID

  """All values greater than or equal the given value."""
  KODE_gte: ID

  """All values containing the given string."""
  KODE_contains: ID

  """All values not containing the given string."""
  KODE_not_contains: ID

  """All values starting with the given string."""
  KODE_starts_with: ID

  """All values not starting with the given string."""
  KODE_not_starts_with: ID

  """All values ending with the given string."""
  KODE_ends_with: ID

  """All values not ending with the given string."""
  KODE_not_ends_with: ID
  kode_induk: String

  """All values that are not equal to given value."""
  kode_induk_not: String

  """All values that are contained in given list."""
  kode_induk_in: [String!]

  """All values that are not contained in given list."""
  kode_induk_not_in: [String!]

  """All values less than the given value."""
  kode_induk_lt: String

  """All values less than or equal the given value."""
  kode_induk_lte: String

  """All values greater than the given value."""
  kode_induk_gt: String

  """All values greater than or equal the given value."""
  kode_induk_gte: String

  """All values containing the given string."""
  kode_induk_contains: String

  """All values not containing the given string."""
  kode_induk_not_contains: String

  """All values starting with the given string."""
  kode_induk_starts_with: String

  """All values not starting with the given string."""
  kode_induk_not_starts_with: String

  """All values ending with the given string."""
  kode_induk_ends_with: String

  """All values not ending with the given string."""
  kode_induk_not_ends_with: String
  level: Int

  """All values that are not equal to given value."""
  level_not: Int

  """All values that are contained in given list."""
  level_in: [Int!]

  """All values that are not contained in given list."""
  level_not_in: [Int!]

  """All values less than the given value."""
  level_lt: Int

  """All values less than or equal the given value."""
  level_lte: Int

  """All values greater than the given value."""
  level_gt: Int

  """All values greater than or equal the given value."""
  level_gte: Int
  sembunyikan: Boolean

  """All values that are not equal to given value."""
  sembunyikan_not: Boolean
  teks: String

  """All values that are not equal to given value."""
  teks_not: String

  """All values that are contained in given list."""
  teks_in: [String!]

  """All values that are not contained in given list."""
  teks_not_in: [String!]

  """All values less than the given value."""
  teks_lt: String

  """All values less than or equal the given value."""
  teks_lte: String

  """All values greater than the given value."""
  teks_gt: String

  """All values greater than or equal the given value."""
  teks_gte: String

  """All values containing the given string."""
  teks_contains: String

  """All values not containing the given string."""
  teks_not_contains: String

  """All values starting with the given string."""
  teks_starts_with: String

  """All values not starting with the given string."""
  teks_not_starts_with: String

  """All values ending with the given string."""
  teks_ends_with: String

  """All values not ending with the given string."""
  teks_not_ends_with: String
  urutan: Int

  """All values that are not equal to given value."""
  urutan_not: Int

  """All values that are contained in given list."""
  urutan_in: [Int!]

  """All values that are not contained in given list."""
  urutan_not_in: [Int!]

  """All values less than the given value."""
  urutan_lt: Int

  """All values less than or equal the given value."""
  urutan_lte: Int

  """All values greater than the given value."""
  urutan_gt: Int

  """All values greater than or equal the given value."""
  urutan_gte: Int
  kode_list: MtVocabGroupWhereInput
}

input MtVocabWhereUniqueInput {
  KODE: ID
}

type Mutation {
  createCase(data: CaseCreateInput!): Case!
  createCaseClassification(data: CaseClassificationCreateInput!): CaseClassification!
  createCaseConsultation(data: CaseConsultationCreateInput!): CaseConsultation!
  createCaseConsultationApp(data: CaseConsultationAppCreateInput!): CaseConsultationApp!
  createCaseDocument(data: CaseDocumentCreateInput!): CaseDocument!
  createCaseIssue(data: CaseIssueCreateInput!): CaseIssue!
  createCaseKorban(data: CaseKorbanCreateInput!): CaseKorban!
  createCasePelaku(data: CasePelakuCreateInput!): CasePelaku!
  createCasePk(data: CasePkCreateInput!): CasePk!
  createCaseProgress(data: CaseProgressCreateInput!): CaseProgress!
  createCaseProgressActivity(data: CaseProgressActivityCreateInput!): CaseProgressActivity!
  createCaseProgressActivityLit(data: CaseProgressActivityLitCreateInput!): CaseProgressActivityLit!
  createCaseProgressActivityNonlit(data: CaseProgressActivityNonlitCreateInput!): CaseProgressActivityNonlit!
  createCaseTransferReferral(data: CaseTransferReferralCreateInput!): CaseTransferReferral!
  createCaseTransfer(data: CaseTransferCreateInput!): CaseTransfer!
  createCaseReferral(data: CaseReferralCreateInput!): CaseReferral!
  createCaseViolatedRight(data: CaseViolatedRightCreateInput!): CaseViolatedRight!
  createClient(data: ClientCreateInput!): Client!
  createDaftarPengacara(data: DaftarPengacaraCreateInput!): DaftarPengacara!
  createDataDict(data: DataDictCreateInput!): DataDict!
  createDataDictLocal(data: DataDictLocalCreateInput!): DataDictLocal!
  createLogRequestApp(data: LogRequestAppCreateInput!): LogRequestApp!
  createMtVocab(data: MtVocabCreateInput!): MtVocab!
  createMtVocabGroup(data: MtVocabGroupCreateInput!): MtVocabGroup!
  createPersonDocument(data: PersonDocumentCreateInput!): PersonDocument!
  createRole(data: RoleCreateInput!): Role!
  createUserProfile(data: UserProfileCreateInput!): UserProfile!
  createSrcAnalisa(data: SrcAnalisaCreateInput!): SrcAnalisa!
  createSrcOperator(data: SrcOperatorCreateInput!): SrcOperator!
  createSrcTemplate(data: SrcTemplateCreateInput!): SrcTemplate!
  createApplication(data: ApplicationCreateInput!): Application!
  createLogRequest(data: LogRequestCreateInput!): LogRequest!
  createRolesType(data: RolesTypeCreateInput!): RolesType!
  createNetwork(data: NetworkCreateInput!): Network!
  createUser(data: UserCreateInput!): User!
  createPerson(data: PersonCreateInput!): Person!
  updateCase(data: CaseUpdateInput!, where: CaseWhereUniqueInput!): Case
  updateCaseClassification(data: CaseClassificationUpdateInput!, where: CaseClassificationWhereUniqueInput!): CaseClassification
  updateCaseConsultation(data: CaseConsultationUpdateInput!, where: CaseConsultationWhereUniqueInput!): CaseConsultation
  updateCaseConsultationApp(data: CaseConsultationAppUpdateInput!, where: CaseConsultationAppWhereUniqueInput!): CaseConsultationApp
  updateCaseDocument(data: CaseDocumentUpdateInput!, where: CaseDocumentWhereUniqueInput!): CaseDocument
  updateCaseIssue(data: CaseIssueUpdateInput!, where: CaseIssueWhereUniqueInput!): CaseIssue
  updateCaseKorban(data: CaseKorbanUpdateInput!, where: CaseKorbanWhereUniqueInput!): CaseKorban
  updateCasePelaku(data: CasePelakuUpdateInput!, where: CasePelakuWhereUniqueInput!): CasePelaku
  updateCasePk(data: CasePkUpdateInput!, where: CasePkWhereUniqueInput!): CasePk
  updateCaseProgress(data: CaseProgressUpdateInput!, where: CaseProgressWhereUniqueInput!): CaseProgress
  updateCaseProgressActivity(data: CaseProgressActivityUpdateInput!, where: CaseProgressActivityWhereUniqueInput!): CaseProgressActivity
  updateCaseProgressActivityLit(data: CaseProgressActivityLitUpdateInput!, where: CaseProgressActivityLitWhereUniqueInput!): CaseProgressActivityLit
  updateCaseProgressActivityNonlit(data: CaseProgressActivityNonlitUpdateInput!, where: CaseProgressActivityNonlitWhereUniqueInput!): CaseProgressActivityNonlit
  updateCaseTransferReferral(data: CaseTransferReferralUpdateInput!, where: CaseTransferReferralWhereUniqueInput!): CaseTransferReferral
  updateCaseTransfer(data: CaseTransferUpdateInput!, where: CaseTransferWhereUniqueInput!): CaseTransfer
  updateCaseReferral(data: CaseReferralUpdateInput!, where: CaseReferralWhereUniqueInput!): CaseReferral
  updateCaseViolatedRight(data: CaseViolatedRightUpdateInput!, where: CaseViolatedRightWhereUniqueInput!): CaseViolatedRight
  updateClient(data: ClientUpdateInput!, where: ClientWhereUniqueInput!): Client
  updateDaftarPengacara(data: DaftarPengacaraUpdateInput!, where: DaftarPengacaraWhereUniqueInput!): DaftarPengacara
  updateDataDict(data: DataDictUpdateInput!, where: DataDictWhereUniqueInput!): DataDict
  updateDataDictLocal(data: DataDictLocalUpdateInput!, where: DataDictLocalWhereUniqueInput!): DataDictLocal
  updateLogRequestApp(data: LogRequestAppUpdateInput!, where: LogRequestAppWhereUniqueInput!): LogRequestApp
  updateMtVocab(data: MtVocabUpdateInput!, where: MtVocabWhereUniqueInput!): MtVocab
  updateMtVocabGroup(data: MtVocabGroupUpdateInput!, where: MtVocabGroupWhereUniqueInput!): MtVocabGroup
  updatePersonDocument(data: PersonDocumentUpdateInput!, where: PersonDocumentWhereUniqueInput!): PersonDocument
  updateRole(data: RoleUpdateInput!, where: RoleWhereUniqueInput!): Role
  updateUserProfile(data: UserProfileUpdateInput!, where: UserProfileWhereUniqueInput!): UserProfile
  updateSrcAnalisa(data: SrcAnalisaUpdateInput!, where: SrcAnalisaWhereUniqueInput!): SrcAnalisa
  updateSrcOperator(data: SrcOperatorUpdateInput!, where: SrcOperatorWhereUniqueInput!): SrcOperator
  updateSrcTemplate(data: SrcTemplateUpdateInput!, where: SrcTemplateWhereUniqueInput!): SrcTemplate
  updateApplication(data: ApplicationUpdateInput!, where: ApplicationWhereUniqueInput!): Application
  updateLogRequest(data: LogRequestUpdateInput!, where: LogRequestWhereUniqueInput!): LogRequest
  updateRolesType(data: RolesTypeUpdateInput!, where: RolesTypeWhereUniqueInput!): RolesType
  updateNetwork(data: NetworkUpdateInput!, where: NetworkWhereUniqueInput!): Network
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updatePerson(data: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person
  deleteCase(where: CaseWhereUniqueInput!): Case
  deleteCaseClassification(where: CaseClassificationWhereUniqueInput!): CaseClassification
  deleteCaseConsultation(where: CaseConsultationWhereUniqueInput!): CaseConsultation
  deleteCaseConsultationApp(where: CaseConsultationAppWhereUniqueInput!): CaseConsultationApp
  deleteCaseDocument(where: CaseDocumentWhereUniqueInput!): CaseDocument
  deleteCaseIssue(where: CaseIssueWhereUniqueInput!): CaseIssue
  deleteCaseKorban(where: CaseKorbanWhereUniqueInput!): CaseKorban
  deleteCasePelaku(where: CasePelakuWhereUniqueInput!): CasePelaku
  deleteCasePk(where: CasePkWhereUniqueInput!): CasePk
  deleteCaseProgress(where: CaseProgressWhereUniqueInput!): CaseProgress
  deleteCaseProgressActivity(where: CaseProgressActivityWhereUniqueInput!): CaseProgressActivity
  deleteCaseProgressActivityLit(where: CaseProgressActivityLitWhereUniqueInput!): CaseProgressActivityLit
  deleteCaseProgressActivityNonlit(where: CaseProgressActivityNonlitWhereUniqueInput!): CaseProgressActivityNonlit
  deleteCaseTransferReferral(where: CaseTransferReferralWhereUniqueInput!): CaseTransferReferral
  deleteCaseTransfer(where: CaseTransferWhereUniqueInput!): CaseTransfer
  deleteCaseReferral(where: CaseReferralWhereUniqueInput!): CaseReferral
  deleteCaseViolatedRight(where: CaseViolatedRightWhereUniqueInput!): CaseViolatedRight
  deleteClient(where: ClientWhereUniqueInput!): Client
  deleteDaftarPengacara(where: DaftarPengacaraWhereUniqueInput!): DaftarPengacara
  deleteDataDict(where: DataDictWhereUniqueInput!): DataDict
  deleteDataDictLocal(where: DataDictLocalWhereUniqueInput!): DataDictLocal
  deleteLogRequestApp(where: LogRequestAppWhereUniqueInput!): LogRequestApp
  deleteMtVocab(where: MtVocabWhereUniqueInput!): MtVocab
  deleteMtVocabGroup(where: MtVocabGroupWhereUniqueInput!): MtVocabGroup
  deletePersonDocument(where: PersonDocumentWhereUniqueInput!): PersonDocument
  deleteRole(where: RoleWhereUniqueInput!): Role
  deleteUserProfile(where: UserProfileWhereUniqueInput!): UserProfile
  deleteSrcAnalisa(where: SrcAnalisaWhereUniqueInput!): SrcAnalisa
  deleteSrcOperator(where: SrcOperatorWhereUniqueInput!): SrcOperator
  deleteSrcTemplate(where: SrcTemplateWhereUniqueInput!): SrcTemplate
  deleteApplication(where: ApplicationWhereUniqueInput!): Application
  deleteLogRequest(where: LogRequestWhereUniqueInput!): LogRequest
  deleteRolesType(where: RolesTypeWhereUniqueInput!): RolesType
  deleteNetwork(where: NetworkWhereUniqueInput!): Network
  deleteUser(where: UserWhereUniqueInput!): User
  deletePerson(where: PersonWhereUniqueInput!): Person
  upsertCase(where: CaseWhereUniqueInput!, create: CaseCreateInput!, update: CaseUpdateInput!): Case!
  upsertCaseClassification(where: CaseClassificationWhereUniqueInput!, create: CaseClassificationCreateInput!, update: CaseClassificationUpdateInput!): CaseClassification!
  upsertCaseConsultation(where: CaseConsultationWhereUniqueInput!, create: CaseConsultationCreateInput!, update: CaseConsultationUpdateInput!): CaseConsultation!
  upsertCaseConsultationApp(where: CaseConsultationAppWhereUniqueInput!, create: CaseConsultationAppCreateInput!, update: CaseConsultationAppUpdateInput!): CaseConsultationApp!
  upsertCaseDocument(where: CaseDocumentWhereUniqueInput!, create: CaseDocumentCreateInput!, update: CaseDocumentUpdateInput!): CaseDocument!
  upsertCaseIssue(where: CaseIssueWhereUniqueInput!, create: CaseIssueCreateInput!, update: CaseIssueUpdateInput!): CaseIssue!
  upsertCaseKorban(where: CaseKorbanWhereUniqueInput!, create: CaseKorbanCreateInput!, update: CaseKorbanUpdateInput!): CaseKorban!
  upsertCasePelaku(where: CasePelakuWhereUniqueInput!, create: CasePelakuCreateInput!, update: CasePelakuUpdateInput!): CasePelaku!
  upsertCasePk(where: CasePkWhereUniqueInput!, create: CasePkCreateInput!, update: CasePkUpdateInput!): CasePk!
  upsertCaseProgress(where: CaseProgressWhereUniqueInput!, create: CaseProgressCreateInput!, update: CaseProgressUpdateInput!): CaseProgress!
  upsertCaseProgressActivity(where: CaseProgressActivityWhereUniqueInput!, create: CaseProgressActivityCreateInput!, update: CaseProgressActivityUpdateInput!): CaseProgressActivity!
  upsertCaseProgressActivityLit(where: CaseProgressActivityLitWhereUniqueInput!, create: CaseProgressActivityLitCreateInput!, update: CaseProgressActivityLitUpdateInput!): CaseProgressActivityLit!
  upsertCaseProgressActivityNonlit(where: CaseProgressActivityNonlitWhereUniqueInput!, create: CaseProgressActivityNonlitCreateInput!, update: CaseProgressActivityNonlitUpdateInput!): CaseProgressActivityNonlit!
  upsertCaseTransferReferral(where: CaseTransferReferralWhereUniqueInput!, create: CaseTransferReferralCreateInput!, update: CaseTransferReferralUpdateInput!): CaseTransferReferral!
  upsertCaseTransfer(where: CaseTransferWhereUniqueInput!, create: CaseTransferCreateInput!, update: CaseTransferUpdateInput!): CaseTransfer!
  upsertCaseReferral(where: CaseReferralWhereUniqueInput!, create: CaseReferralCreateInput!, update: CaseReferralUpdateInput!): CaseReferral!
  upsertCaseViolatedRight(where: CaseViolatedRightWhereUniqueInput!, create: CaseViolatedRightCreateInput!, update: CaseViolatedRightUpdateInput!): CaseViolatedRight!
  upsertClient(where: ClientWhereUniqueInput!, create: ClientCreateInput!, update: ClientUpdateInput!): Client!
  upsertDaftarPengacara(where: DaftarPengacaraWhereUniqueInput!, create: DaftarPengacaraCreateInput!, update: DaftarPengacaraUpdateInput!): DaftarPengacara!
  upsertDataDict(where: DataDictWhereUniqueInput!, create: DataDictCreateInput!, update: DataDictUpdateInput!): DataDict!
  upsertDataDictLocal(where: DataDictLocalWhereUniqueInput!, create: DataDictLocalCreateInput!, update: DataDictLocalUpdateInput!): DataDictLocal!
  upsertLogRequestApp(where: LogRequestAppWhereUniqueInput!, create: LogRequestAppCreateInput!, update: LogRequestAppUpdateInput!): LogRequestApp!
  upsertMtVocab(where: MtVocabWhereUniqueInput!, create: MtVocabCreateInput!, update: MtVocabUpdateInput!): MtVocab!
  upsertMtVocabGroup(where: MtVocabGroupWhereUniqueInput!, create: MtVocabGroupCreateInput!, update: MtVocabGroupUpdateInput!): MtVocabGroup!
  upsertPersonDocument(where: PersonDocumentWhereUniqueInput!, create: PersonDocumentCreateInput!, update: PersonDocumentUpdateInput!): PersonDocument!
  upsertRole(where: RoleWhereUniqueInput!, create: RoleCreateInput!, update: RoleUpdateInput!): Role!
  upsertUserProfile(where: UserProfileWhereUniqueInput!, create: UserProfileCreateInput!, update: UserProfileUpdateInput!): UserProfile!
  upsertSrcAnalisa(where: SrcAnalisaWhereUniqueInput!, create: SrcAnalisaCreateInput!, update: SrcAnalisaUpdateInput!): SrcAnalisa!
  upsertSrcOperator(where: SrcOperatorWhereUniqueInput!, create: SrcOperatorCreateInput!, update: SrcOperatorUpdateInput!): SrcOperator!
  upsertSrcTemplate(where: SrcTemplateWhereUniqueInput!, create: SrcTemplateCreateInput!, update: SrcTemplateUpdateInput!): SrcTemplate!
  upsertApplication(where: ApplicationWhereUniqueInput!, create: ApplicationCreateInput!, update: ApplicationUpdateInput!): Application!
  upsertLogRequest(where: LogRequestWhereUniqueInput!, create: LogRequestCreateInput!, update: LogRequestUpdateInput!): LogRequest!
  upsertRolesType(where: RolesTypeWhereUniqueInput!, create: RolesTypeCreateInput!, update: RolesTypeUpdateInput!): RolesType!
  upsertNetwork(where: NetworkWhereUniqueInput!, create: NetworkCreateInput!, update: NetworkUpdateInput!): Network!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertPerson(where: PersonWhereUniqueInput!, create: PersonCreateInput!, update: PersonUpdateInput!): Person!
  updateManyCases(data: CaseUpdateManyMutationInput!, where: CaseWhereInput): BatchPayload!
  updateManyCaseClassifications(data: CaseClassificationUpdateManyMutationInput!, where: CaseClassificationWhereInput): BatchPayload!
  updateManyCaseConsultations(data: CaseConsultationUpdateManyMutationInput!, where: CaseConsultationWhereInput): BatchPayload!
  updateManyCaseDocuments(data: CaseDocumentUpdateManyMutationInput!, where: CaseDocumentWhereInput): BatchPayload!
  updateManyCaseIssues(data: CaseIssueUpdateManyMutationInput!, where: CaseIssueWhereInput): BatchPayload!
  updateManyCasePelakus(data: CasePelakuUpdateManyMutationInput!, where: CasePelakuWhereInput): BatchPayload!
  updateManyCasePks(data: CasePkUpdateManyMutationInput!, where: CasePkWhereInput): BatchPayload!
  updateManyCaseProgresses(data: CaseProgressUpdateManyMutationInput!, where: CaseProgressWhereInput): BatchPayload!
  updateManyCaseProgressActivities(data: CaseProgressActivityUpdateManyMutationInput!, where: CaseProgressActivityWhereInput): BatchPayload!
  updateManyCaseProgressActivityLits(data: CaseProgressActivityLitUpdateManyMutationInput!, where: CaseProgressActivityLitWhereInput): BatchPayload!
  updateManyCaseProgressActivityNonlits(data: CaseProgressActivityNonlitUpdateManyMutationInput!, where: CaseProgressActivityNonlitWhereInput): BatchPayload!
  updateManyCaseTransferReferrals(data: CaseTransferReferralUpdateManyMutationInput!, where: CaseTransferReferralWhereInput): BatchPayload!
  updateManyCaseTransfers(data: CaseTransferUpdateManyMutationInput!, where: CaseTransferWhereInput): BatchPayload!
  updateManyCaseReferrals(data: CaseReferralUpdateManyMutationInput!, where: CaseReferralWhereInput): BatchPayload!
  updateManyCaseViolatedRights(data: CaseViolatedRightUpdateManyMutationInput!, where: CaseViolatedRightWhereInput): BatchPayload!
  updateManyClients(data: ClientUpdateManyMutationInput!, where: ClientWhereInput): BatchPayload!
  updateManyDaftarPengacaras(data: DaftarPengacaraUpdateManyMutationInput!, where: DaftarPengacaraWhereInput): BatchPayload!
  updateManyDataDicts(data: DataDictUpdateManyMutationInput!, where: DataDictWhereInput): BatchPayload!
  updateManyDataDictLocals(data: DataDictLocalUpdateManyMutationInput!, where: DataDictLocalWhereInput): BatchPayload!
  updateManyMtVocabs(data: MtVocabUpdateManyMutationInput!, where: MtVocabWhereInput): BatchPayload!
  updateManyMtVocabGroups(data: MtVocabGroupUpdateManyMutationInput!, where: MtVocabGroupWhereInput): BatchPayload!
  updateManyPersonDocuments(data: PersonDocumentUpdateManyMutationInput!, where: PersonDocumentWhereInput): BatchPayload!
  updateManyUserProfiles(data: UserProfileUpdateManyMutationInput!, where: UserProfileWhereInput): BatchPayload!
  updateManySrcAnalisas(data: SrcAnalisaUpdateManyMutationInput!, where: SrcAnalisaWhereInput): BatchPayload!
  updateManySrcOperators(data: SrcOperatorUpdateManyMutationInput!, where: SrcOperatorWhereInput): BatchPayload!
  updateManySrcTemplates(data: SrcTemplateUpdateManyMutationInput!, where: SrcTemplateWhereInput): BatchPayload!
  updateManyApplications(data: ApplicationUpdateManyMutationInput!, where: ApplicationWhereInput): BatchPayload!
  updateManyLogRequests(data: LogRequestUpdateManyMutationInput!, where: LogRequestWhereInput): BatchPayload!
  updateManyRolesTypes(data: RolesTypeUpdateManyMutationInput!, where: RolesTypeWhereInput): BatchPayload!
  updateManyNetworks(data: NetworkUpdateManyMutationInput!, where: NetworkWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyPersons(data: PersonUpdateManyMutationInput!, where: PersonWhereInput): BatchPayload!
  deleteManyCases(where: CaseWhereInput): BatchPayload!
  deleteManyCaseClassifications(where: CaseClassificationWhereInput): BatchPayload!
  deleteManyCaseConsultations(where: CaseConsultationWhereInput): BatchPayload!
  deleteManyCaseConsultationApps(where: CaseConsultationAppWhereInput): BatchPayload!
  deleteManyCaseDocuments(where: CaseDocumentWhereInput): BatchPayload!
  deleteManyCaseIssues(where: CaseIssueWhereInput): BatchPayload!
  deleteManyCaseKorbans(where: CaseKorbanWhereInput): BatchPayload!
  deleteManyCasePelakus(where: CasePelakuWhereInput): BatchPayload!
  deleteManyCasePks(where: CasePkWhereInput): BatchPayload!
  deleteManyCaseProgresses(where: CaseProgressWhereInput): BatchPayload!
  deleteManyCaseProgressActivities(where: CaseProgressActivityWhereInput): BatchPayload!
  deleteManyCaseProgressActivityLits(where: CaseProgressActivityLitWhereInput): BatchPayload!
  deleteManyCaseProgressActivityNonlits(where: CaseProgressActivityNonlitWhereInput): BatchPayload!
  deleteManyCaseTransferReferrals(where: CaseTransferReferralWhereInput): BatchPayload!
  deleteManyCaseTransfers(where: CaseTransferWhereInput): BatchPayload!
  deleteManyCaseReferrals(where: CaseReferralWhereInput): BatchPayload!
  deleteManyCaseViolatedRights(where: CaseViolatedRightWhereInput): BatchPayload!
  deleteManyClients(where: ClientWhereInput): BatchPayload!
  deleteManyDaftarPengacaras(where: DaftarPengacaraWhereInput): BatchPayload!
  deleteManyDataDicts(where: DataDictWhereInput): BatchPayload!
  deleteManyDataDictLocals(where: DataDictLocalWhereInput): BatchPayload!
  deleteManyLogRequestApps(where: LogRequestAppWhereInput): BatchPayload!
  deleteManyMtVocabs(where: MtVocabWhereInput): BatchPayload!
  deleteManyMtVocabGroups(where: MtVocabGroupWhereInput): BatchPayload!
  deleteManyPersonDocuments(where: PersonDocumentWhereInput): BatchPayload!
  deleteManyRoles(where: RoleWhereInput): BatchPayload!
  deleteManyUserProfiles(where: UserProfileWhereInput): BatchPayload!
  deleteManySrcAnalisas(where: SrcAnalisaWhereInput): BatchPayload!
  deleteManySrcOperators(where: SrcOperatorWhereInput): BatchPayload!
  deleteManySrcTemplates(where: SrcTemplateWhereInput): BatchPayload!
  deleteManyApplications(where: ApplicationWhereInput): BatchPayload!
  deleteManyLogRequests(where: LogRequestWhereInput): BatchPayload!
  deleteManyRolesTypes(where: RolesTypeWhereInput): BatchPayload!
  deleteManyNetworks(where: NetworkWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyPersons(where: PersonWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type Network {
  address: String
  contactPerson: String
  createdAt: DateTime!
  email: String
  id: Int!
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
  updatedAt: DateTime!
  logRequests(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequest!]
}

"""A connection to a list of items."""
type NetworkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [NetworkEdge]!
  aggregate: AggregateNetwork!
}

input NetworkCreateInput {
  address: String
  contactPerson: String
  email: String
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
  logRequests: LogRequestCreateManyWithoutNetworkIdInput
}

input NetworkCreateOneInput {
  create: NetworkCreateInput
  connect: NetworkWhereUniqueInput
}

input NetworkCreateOneWithoutLogRequestsInput {
  create: NetworkCreateWithoutLogRequestsInput
  connect: NetworkWhereUniqueInput
}

input NetworkCreateWithoutLogRequestsInput {
  address: String
  contactPerson: String
  email: String
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
}

"""An edge in a connection."""
type NetworkEdge {
  """The item at the end of the edge."""
  node: Network!

  """A cursor for use in pagination."""
  cursor: String!
}

enum NetworkOrderByInput {
  address_ASC
  address_DESC
  contactPerson_ASC
  contactPerson_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  noContact_ASC
  noContact_DESC
  provinceId_ASC
  provinceId_DESC
  regencyId_ASC
  regencyId_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type NetworkPreviousValues {
  address: String
  contactPerson: String
  createdAt: DateTime!
  email: String
  id: Int!
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
  updatedAt: DateTime!
}

type NetworkSubscriptionPayload {
  mutation: MutationType!
  node: Network
  updatedFields: [String!]
  previousValues: NetworkPreviousValues
}

input NetworkSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [NetworkSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [NetworkSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NetworkSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: NetworkWhereInput
}

input NetworkUpdateDataInput {
  address: String
  contactPerson: String
  email: String
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
  logRequests: LogRequestUpdateManyWithoutNetworkIdInput
}

input NetworkUpdateInput {
  address: String
  contactPerson: String
  email: String
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
  logRequests: LogRequestUpdateManyWithoutNetworkIdInput
}

input NetworkUpdateManyMutationInput {
  address: String
  contactPerson: String
  email: String
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
}

input NetworkUpdateOneInput {
  create: NetworkCreateInput
  connect: NetworkWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: NetworkUpdateDataInput
  upsert: NetworkUpsertNestedInput
}

input NetworkUpdateOneWithoutLogRequestsInput {
  create: NetworkCreateWithoutLogRequestsInput
  connect: NetworkWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: NetworkUpdateWithoutLogRequestsDataInput
  upsert: NetworkUpsertWithoutLogRequestsInput
}

input NetworkUpdateWithoutLogRequestsDataInput {
  address: String
  contactPerson: String
  email: String
  name: String
  noContact: String
  provinceId: Int
  regencyId: Int
  type: String
  status: String
}

input NetworkUpsertNestedInput {
  update: NetworkUpdateDataInput!
  create: NetworkCreateInput!
}

input NetworkUpsertWithoutLogRequestsInput {
  update: NetworkUpdateWithoutLogRequestsDataInput!
  create: NetworkCreateWithoutLogRequestsInput!
}

input NetworkWhereInput {
  """Logical AND on all given filters."""
  AND: [NetworkWhereInput!]

  """Logical OR on all given filters."""
  OR: [NetworkWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [NetworkWhereInput!]
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  contactPerson: String

  """All values that are not equal to given value."""
  contactPerson_not: String

  """All values that are contained in given list."""
  contactPerson_in: [String!]

  """All values that are not contained in given list."""
  contactPerson_not_in: [String!]

  """All values less than the given value."""
  contactPerson_lt: String

  """All values less than or equal the given value."""
  contactPerson_lte: String

  """All values greater than the given value."""
  contactPerson_gt: String

  """All values greater than or equal the given value."""
  contactPerson_gte: String

  """All values containing the given string."""
  contactPerson_contains: String

  """All values not containing the given string."""
  contactPerson_not_contains: String

  """All values starting with the given string."""
  contactPerson_starts_with: String

  """All values not starting with the given string."""
  contactPerson_not_starts_with: String

  """All values ending with the given string."""
  contactPerson_ends_with: String

  """All values not ending with the given string."""
  contactPerson_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  noContact: String

  """All values that are not equal to given value."""
  noContact_not: String

  """All values that are contained in given list."""
  noContact_in: [String!]

  """All values that are not contained in given list."""
  noContact_not_in: [String!]

  """All values less than the given value."""
  noContact_lt: String

  """All values less than or equal the given value."""
  noContact_lte: String

  """All values greater than the given value."""
  noContact_gt: String

  """All values greater than or equal the given value."""
  noContact_gte: String

  """All values containing the given string."""
  noContact_contains: String

  """All values not containing the given string."""
  noContact_not_contains: String

  """All values starting with the given string."""
  noContact_starts_with: String

  """All values not starting with the given string."""
  noContact_not_starts_with: String

  """All values ending with the given string."""
  noContact_ends_with: String

  """All values not ending with the given string."""
  noContact_not_ends_with: String
  provinceId: Int

  """All values that are not equal to given value."""
  provinceId_not: Int

  """All values that are contained in given list."""
  provinceId_in: [Int!]

  """All values that are not contained in given list."""
  provinceId_not_in: [Int!]

  """All values less than the given value."""
  provinceId_lt: Int

  """All values less than or equal the given value."""
  provinceId_lte: Int

  """All values greater than the given value."""
  provinceId_gt: Int

  """All values greater than or equal the given value."""
  provinceId_gte: Int
  regencyId: Int

  """All values that are not equal to given value."""
  regencyId_not: Int

  """All values that are contained in given list."""
  regencyId_in: [Int!]

  """All values that are not contained in given list."""
  regencyId_not_in: [Int!]

  """All values less than the given value."""
  regencyId_lt: Int

  """All values less than or equal the given value."""
  regencyId_lte: Int

  """All values greater than the given value."""
  regencyId_gt: Int

  """All values greater than or equal the given value."""
  regencyId_gte: Int
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  status: String

  """All values that are not equal to given value."""
  status_not: String

  """All values that are contained in given list."""
  status_in: [String!]

  """All values that are not contained in given list."""
  status_not_in: [String!]

  """All values less than the given value."""
  status_lt: String

  """All values less than or equal the given value."""
  status_lte: String

  """All values greater than the given value."""
  status_gt: String

  """All values greater than or equal the given value."""
  status_gte: String

  """All values containing the given string."""
  status_contains: String

  """All values not containing the given string."""
  status_not_contains: String

  """All values starting with the given string."""
  status_starts_with: String

  """All values not starting with the given string."""
  status_not_starts_with: String

  """All values ending with the given string."""
  status_ends_with: String

  """All values not ending with the given string."""
  status_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  logRequests_every: LogRequestWhereInput
  logRequests_some: LogRequestWhereInput
  logRequests_none: LogRequestWhereInput
}

input NetworkWhereUniqueInput {
  id: Int
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Person {
  id: Int!
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdAt: DateTime!
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedAt: DateTime!
  updatedBy: String
  wargaNegara: String
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application!]
  casekorbans(where: CaseKorbanWhereInput, orderBy: CaseKorbanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseKorban!]
  casepelakus(where: CasePelakuWhereInput, orderBy: CasePelakuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CasePelaku!]
  clients(where: ClientWhereInput, orderBy: ClientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Client!]
  documents(where: PersonDocumentWhereInput, orderBy: PersonDocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PersonDocument!]
  logRequests(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequest!]
}

"""A connection to a list of items."""
type PersonConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PersonEdge]!
  aggregate: AggregatePerson!
}

input PersonCreateInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationCreateManyWithoutWakilIdInput
  casekorbans: CaseKorbanCreateManyWithoutPersonIdInput
  casepelakus: CasePelakuCreateManyWithoutPersonIdInput
  clients: ClientCreateManyWithoutPersonIdInput
  documents: PersonDocumentCreateManyWithoutPersonIdInput
  logRequests: LogRequestCreateManyWithoutPersonIdInput
}

input PersonCreateOneInput {
  create: PersonCreateInput
  connect: PersonWhereUniqueInput
}

input PersonCreateOneWithoutApplicationsInput {
  create: PersonCreateWithoutApplicationsInput
  connect: PersonWhereUniqueInput
}

input PersonCreateOneWithoutCasekorbansInput {
  create: PersonCreateWithoutCasekorbansInput
  connect: PersonWhereUniqueInput
}

input PersonCreateOneWithoutCasepelakusInput {
  create: PersonCreateWithoutCasepelakusInput
  connect: PersonWhereUniqueInput
}

input PersonCreateOneWithoutClientsInput {
  create: PersonCreateWithoutClientsInput
  connect: PersonWhereUniqueInput
}

input PersonCreateOneWithoutDocumentsInput {
  create: PersonCreateWithoutDocumentsInput
  connect: PersonWhereUniqueInput
}

input PersonCreateOneWithoutLogRequestsInput {
  create: PersonCreateWithoutLogRequestsInput
  connect: PersonWhereUniqueInput
}

input PersonCreateWithoutApplicationsInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  casekorbans: CaseKorbanCreateManyWithoutPersonIdInput
  casepelakus: CasePelakuCreateManyWithoutPersonIdInput
  clients: ClientCreateManyWithoutPersonIdInput
  documents: PersonDocumentCreateManyWithoutPersonIdInput
  logRequests: LogRequestCreateManyWithoutPersonIdInput
}

input PersonCreateWithoutCasekorbansInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationCreateManyWithoutWakilIdInput
  casepelakus: CasePelakuCreateManyWithoutPersonIdInput
  clients: ClientCreateManyWithoutPersonIdInput
  documents: PersonDocumentCreateManyWithoutPersonIdInput
  logRequests: LogRequestCreateManyWithoutPersonIdInput
}

input PersonCreateWithoutCasepelakusInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationCreateManyWithoutWakilIdInput
  casekorbans: CaseKorbanCreateManyWithoutPersonIdInput
  clients: ClientCreateManyWithoutPersonIdInput
  documents: PersonDocumentCreateManyWithoutPersonIdInput
  logRequests: LogRequestCreateManyWithoutPersonIdInput
}

input PersonCreateWithoutClientsInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationCreateManyWithoutWakilIdInput
  casekorbans: CaseKorbanCreateManyWithoutPersonIdInput
  casepelakus: CasePelakuCreateManyWithoutPersonIdInput
  documents: PersonDocumentCreateManyWithoutPersonIdInput
  logRequests: LogRequestCreateManyWithoutPersonIdInput
}

input PersonCreateWithoutDocumentsInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationCreateManyWithoutWakilIdInput
  casekorbans: CaseKorbanCreateManyWithoutPersonIdInput
  casepelakus: CasePelakuCreateManyWithoutPersonIdInput
  clients: ClientCreateManyWithoutPersonIdInput
  logRequests: LogRequestCreateManyWithoutPersonIdInput
}

input PersonCreateWithoutLogRequestsInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationCreateManyWithoutWakilIdInput
  casekorbans: CaseKorbanCreateManyWithoutPersonIdInput
  casepelakus: CasePelakuCreateManyWithoutPersonIdInput
  clients: ClientCreateManyWithoutPersonIdInput
  documents: PersonDocumentCreateManyWithoutPersonIdInput
}

type PersonDocument {
  createdAt: DateTime!
  deletedAt: DateTime
  file: Int
  id: Int!
  personId: Person!
  title: Int
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type PersonDocumentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PersonDocumentEdge]!
  aggregate: AggregatePersonDocument!
}

input PersonDocumentCreateInput {
  deletedAt: DateTime
  file: Int
  title: Int
  personId: PersonCreateOneWithoutDocumentsInput!
}

input PersonDocumentCreateManyWithoutPersonIdInput {
  create: [PersonDocumentCreateWithoutPersonIdInput!]
  connect: [PersonDocumentWhereUniqueInput!]
}

input PersonDocumentCreateWithoutPersonIdInput {
  deletedAt: DateTime
  file: Int
  title: Int
}

"""An edge in a connection."""
type PersonDocumentEdge {
  """The item at the end of the edge."""
  node: PersonDocument!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PersonDocumentOrderByInput {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  file_ASC
  file_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PersonDocumentPreviousValues {
  createdAt: DateTime!
  deletedAt: DateTime
  file: Int
  id: Int!
  title: Int
  updatedAt: DateTime!
}

input PersonDocumentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PersonDocumentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PersonDocumentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PersonDocumentScalarWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  deletedAt: DateTime

  """All values that are not equal to given value."""
  deletedAt_not: DateTime

  """All values that are contained in given list."""
  deletedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  deletedAt_not_in: [DateTime!]

  """All values less than the given value."""
  deletedAt_lt: DateTime

  """All values less than or equal the given value."""
  deletedAt_lte: DateTime

  """All values greater than the given value."""
  deletedAt_gt: DateTime

  """All values greater than or equal the given value."""
  deletedAt_gte: DateTime
  file: Int

  """All values that are not equal to given value."""
  file_not: Int

  """All values that are contained in given list."""
  file_in: [Int!]

  """All values that are not contained in given list."""
  file_not_in: [Int!]

  """All values less than the given value."""
  file_lt: Int

  """All values less than or equal the given value."""
  file_lte: Int

  """All values greater than the given value."""
  file_gt: Int

  """All values greater than or equal the given value."""
  file_gte: Int
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  title: Int

  """All values that are not equal to given value."""
  title_not: Int

  """All values that are contained in given list."""
  title_in: [Int!]

  """All values that are not contained in given list."""
  title_not_in: [Int!]

  """All values less than the given value."""
  title_lt: Int

  """All values less than or equal the given value."""
  title_lte: Int

  """All values greater than the given value."""
  title_gt: Int

  """All values greater than or equal the given value."""
  title_gte: Int
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type PersonDocumentSubscriptionPayload {
  mutation: MutationType!
  node: PersonDocument
  updatedFields: [String!]
  previousValues: PersonDocumentPreviousValues
}

input PersonDocumentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PersonDocumentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PersonDocumentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PersonDocumentSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PersonDocumentWhereInput
}

input PersonDocumentUpdateInput {
  deletedAt: DateTime
  file: Int
  title: Int
  personId: PersonUpdateOneRequiredWithoutDocumentsInput
}

input PersonDocumentUpdateManyDataInput {
  deletedAt: DateTime
  file: Int
  title: Int
}

input PersonDocumentUpdateManyMutationInput {
  deletedAt: DateTime
  file: Int
  title: Int
}

input PersonDocumentUpdateManyWithoutPersonIdInput {
  create: [PersonDocumentCreateWithoutPersonIdInput!]
  connect: [PersonDocumentWhereUniqueInput!]
  set: [PersonDocumentWhereUniqueInput!]
  disconnect: [PersonDocumentWhereUniqueInput!]
  delete: [PersonDocumentWhereUniqueInput!]
  update: [PersonDocumentUpdateWithWhereUniqueWithoutPersonIdInput!]
  updateMany: [PersonDocumentUpdateManyWithWhereNestedInput!]
  deleteMany: [PersonDocumentScalarWhereInput!]
  upsert: [PersonDocumentUpsertWithWhereUniqueWithoutPersonIdInput!]
}

input PersonDocumentUpdateManyWithWhereNestedInput {
  where: PersonDocumentScalarWhereInput!
  data: PersonDocumentUpdateManyDataInput!
}

input PersonDocumentUpdateWithoutPersonIdDataInput {
  deletedAt: DateTime
  file: Int
  title: Int
}

input PersonDocumentUpdateWithWhereUniqueWithoutPersonIdInput {
  where: PersonDocumentWhereUniqueInput!
  data: PersonDocumentUpdateWithoutPersonIdDataInput!
}

input PersonDocumentUpsertWithWhereUniqueWithoutPersonIdInput {
  where: PersonDocumentWhereUniqueInput!
  update: PersonDocumentUpdateWithoutPersonIdDataInput!
  create: PersonDocumentCreateWithoutPersonIdInput!
}

input PersonDocumentWhereInput {
  """Logical AND on all given filters."""
  AND: [PersonDocumentWhereInput!]

  """Logical OR on all given filters."""
  OR: [PersonDocumentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PersonDocumentWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  deletedAt: DateTime

  """All values that are not equal to given value."""
  deletedAt_not: DateTime

  """All values that are contained in given list."""
  deletedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  deletedAt_not_in: [DateTime!]

  """All values less than the given value."""
  deletedAt_lt: DateTime

  """All values less than or equal the given value."""
  deletedAt_lte: DateTime

  """All values greater than the given value."""
  deletedAt_gt: DateTime

  """All values greater than or equal the given value."""
  deletedAt_gte: DateTime
  file: Int

  """All values that are not equal to given value."""
  file_not: Int

  """All values that are contained in given list."""
  file_in: [Int!]

  """All values that are not contained in given list."""
  file_not_in: [Int!]

  """All values less than the given value."""
  file_lt: Int

  """All values less than or equal the given value."""
  file_lte: Int

  """All values greater than the given value."""
  file_gt: Int

  """All values greater than or equal the given value."""
  file_gte: Int
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  title: Int

  """All values that are not equal to given value."""
  title_not: Int

  """All values that are contained in given list."""
  title_in: [Int!]

  """All values that are not contained in given list."""
  title_not_in: [Int!]

  """All values less than the given value."""
  title_lt: Int

  """All values less than or equal the given value."""
  title_lte: Int

  """All values greater than the given value."""
  title_gt: Int

  """All values greater than or equal the given value."""
  title_gte: Int
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  personId: PersonWhereInput
}

input PersonDocumentWhereUniqueInput {
  id: Int
}

"""An edge in a connection."""
type PersonEdge {
  """The item at the end of the edge."""
  node: Person!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PersonOrderByInput {
  id_ASC
  id_DESC
  agama_ASC
  agama_DESC
  alamatDomisili_ASC
  alamatDomisili_DESC
  alamatId_ASC
  alamatId_DESC
  alatBantu_ASC
  alatBantu_DESC
  alias_ASC
  alias_DESC
  createdAt_ASC
  createdAt_DESC
  createdBy_ASC
  createdBy_DESC
  disabilitas_ASC
  disabilitas_DESC
  distrikDomisili_ASC
  distrikDomisili_DESC
  distrikId_ASC
  distrikId_DESC
  domisiliSama_ASC
  domisiliSama_DESC
  email_ASC
  email_DESC
  golDarah_ASC
  golDarah_DESC
  jenisDisabilitas_ASC
  jenisDisabilitas_DESC
  jenisDomisili_ASC
  jenisDomisili_DESC
  jenisId_ASC
  jenisId_DESC
  jenisKelamin_ASC
  jenisKelamin_DESC
  jmlAnggota_ASC
  jmlAnggota_DESC
  namaLengkap_ASC
  namaLengkap_DESC
  nomorId_ASC
  nomorId_DESC
  pekerjaan_ASC
  pekerjaan_DESC
  pendidikan_ASC
  pendidikan_DESC
  statusPernikahan_ASC
  statusPernikahan_DESC
  telepon_ASC
  telepon_DESC
  tglLahir_ASC
  tglLahir_DESC
  tmpLahir_ASC
  tmpLahir_DESC
  unitSatuan_ASC
  unitSatuan_DESC
  updatedAt_ASC
  updatedAt_DESC
  updatedBy_ASC
  updatedBy_DESC
  wargaNegara_ASC
  wargaNegara_DESC
}

type PersonPreviousValues {
  id: Int!
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdAt: DateTime!
  createdBy: String
  disabilitas: Boolean!
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean!
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedAt: DateTime!
  updatedBy: String
  wargaNegara: String
}

type PersonSubscriptionPayload {
  mutation: MutationType!
  node: Person
  updatedFields: [String!]
  previousValues: PersonPreviousValues
}

input PersonSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PersonSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PersonSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PersonSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PersonWhereInput
}

input PersonUpdateDataInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationUpdateManyWithoutWakilIdInput
  casekorbans: CaseKorbanUpdateManyWithoutPersonIdInput
  casepelakus: CasePelakuUpdateManyWithoutPersonIdInput
  clients: ClientUpdateManyWithoutPersonIdInput
  documents: PersonDocumentUpdateManyWithoutPersonIdInput
  logRequests: LogRequestUpdateManyWithoutPersonIdInput
}

input PersonUpdateInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationUpdateManyWithoutWakilIdInput
  casekorbans: CaseKorbanUpdateManyWithoutPersonIdInput
  casepelakus: CasePelakuUpdateManyWithoutPersonIdInput
  clients: ClientUpdateManyWithoutPersonIdInput
  documents: PersonDocumentUpdateManyWithoutPersonIdInput
  logRequests: LogRequestUpdateManyWithoutPersonIdInput
}

input PersonUpdateManyMutationInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
}

input PersonUpdateOneRequiredInput {
  create: PersonCreateInput
  connect: PersonWhereUniqueInput
  update: PersonUpdateDataInput
  upsert: PersonUpsertNestedInput
}

input PersonUpdateOneRequiredWithoutClientsInput {
  create: PersonCreateWithoutClientsInput
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutClientsDataInput
  upsert: PersonUpsertWithoutClientsInput
}

input PersonUpdateOneRequiredWithoutDocumentsInput {
  create: PersonCreateWithoutDocumentsInput
  connect: PersonWhereUniqueInput
  update: PersonUpdateWithoutDocumentsDataInput
  upsert: PersonUpsertWithoutDocumentsInput
}

input PersonUpdateOneWithoutApplicationsInput {
  create: PersonCreateWithoutApplicationsInput
  connect: PersonWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PersonUpdateWithoutApplicationsDataInput
  upsert: PersonUpsertWithoutApplicationsInput
}

input PersonUpdateOneWithoutCasekorbansInput {
  create: PersonCreateWithoutCasekorbansInput
  connect: PersonWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PersonUpdateWithoutCasekorbansDataInput
  upsert: PersonUpsertWithoutCasekorbansInput
}

input PersonUpdateOneWithoutCasepelakusInput {
  create: PersonCreateWithoutCasepelakusInput
  connect: PersonWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PersonUpdateWithoutCasepelakusDataInput
  upsert: PersonUpsertWithoutCasepelakusInput
}

input PersonUpdateOneWithoutLogRequestsInput {
  create: PersonCreateWithoutLogRequestsInput
  connect: PersonWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PersonUpdateWithoutLogRequestsDataInput
  upsert: PersonUpsertWithoutLogRequestsInput
}

input PersonUpdateWithoutApplicationsDataInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  casekorbans: CaseKorbanUpdateManyWithoutPersonIdInput
  casepelakus: CasePelakuUpdateManyWithoutPersonIdInput
  clients: ClientUpdateManyWithoutPersonIdInput
  documents: PersonDocumentUpdateManyWithoutPersonIdInput
  logRequests: LogRequestUpdateManyWithoutPersonIdInput
}

input PersonUpdateWithoutCasekorbansDataInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationUpdateManyWithoutWakilIdInput
  casepelakus: CasePelakuUpdateManyWithoutPersonIdInput
  clients: ClientUpdateManyWithoutPersonIdInput
  documents: PersonDocumentUpdateManyWithoutPersonIdInput
  logRequests: LogRequestUpdateManyWithoutPersonIdInput
}

input PersonUpdateWithoutCasepelakusDataInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationUpdateManyWithoutWakilIdInput
  casekorbans: CaseKorbanUpdateManyWithoutPersonIdInput
  clients: ClientUpdateManyWithoutPersonIdInput
  documents: PersonDocumentUpdateManyWithoutPersonIdInput
  logRequests: LogRequestUpdateManyWithoutPersonIdInput
}

input PersonUpdateWithoutClientsDataInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationUpdateManyWithoutWakilIdInput
  casekorbans: CaseKorbanUpdateManyWithoutPersonIdInput
  casepelakus: CasePelakuUpdateManyWithoutPersonIdInput
  documents: PersonDocumentUpdateManyWithoutPersonIdInput
  logRequests: LogRequestUpdateManyWithoutPersonIdInput
}

input PersonUpdateWithoutDocumentsDataInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationUpdateManyWithoutWakilIdInput
  casekorbans: CaseKorbanUpdateManyWithoutPersonIdInput
  casepelakus: CasePelakuUpdateManyWithoutPersonIdInput
  clients: ClientUpdateManyWithoutPersonIdInput
  logRequests: LogRequestUpdateManyWithoutPersonIdInput
}

input PersonUpdateWithoutLogRequestsDataInput {
  agama: String
  alamatDomisili: String
  alamatId: String
  alatBantu: String
  alias: String
  createdBy: String
  disabilitas: Boolean
  distrikDomisili: String
  distrikId: String
  domisiliSama: Boolean
  email: String
  golDarah: String
  jenisDisabilitas: String
  jenisDomisili: String
  jenisId: String
  jenisKelamin: String
  jmlAnggota: Int
  namaLengkap: String
  nomorId: String
  pekerjaan: String
  pendidikan: String
  statusPernikahan: String
  telepon: String
  tglLahir: DateTime
  tmpLahir: String
  unitSatuan: String
  updatedBy: String
  wargaNegara: String
  applications: ApplicationUpdateManyWithoutWakilIdInput
  casekorbans: CaseKorbanUpdateManyWithoutPersonIdInput
  casepelakus: CasePelakuUpdateManyWithoutPersonIdInput
  clients: ClientUpdateManyWithoutPersonIdInput
  documents: PersonDocumentUpdateManyWithoutPersonIdInput
}

input PersonUpsertNestedInput {
  update: PersonUpdateDataInput!
  create: PersonCreateInput!
}

input PersonUpsertWithoutApplicationsInput {
  update: PersonUpdateWithoutApplicationsDataInput!
  create: PersonCreateWithoutApplicationsInput!
}

input PersonUpsertWithoutCasekorbansInput {
  update: PersonUpdateWithoutCasekorbansDataInput!
  create: PersonCreateWithoutCasekorbansInput!
}

input PersonUpsertWithoutCasepelakusInput {
  update: PersonUpdateWithoutCasepelakusDataInput!
  create: PersonCreateWithoutCasepelakusInput!
}

input PersonUpsertWithoutClientsInput {
  update: PersonUpdateWithoutClientsDataInput!
  create: PersonCreateWithoutClientsInput!
}

input PersonUpsertWithoutDocumentsInput {
  update: PersonUpdateWithoutDocumentsDataInput!
  create: PersonCreateWithoutDocumentsInput!
}

input PersonUpsertWithoutLogRequestsInput {
  update: PersonUpdateWithoutLogRequestsDataInput!
  create: PersonCreateWithoutLogRequestsInput!
}

input PersonWhereInput {
  """Logical AND on all given filters."""
  AND: [PersonWhereInput!]

  """Logical OR on all given filters."""
  OR: [PersonWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PersonWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  agama: String

  """All values that are not equal to given value."""
  agama_not: String

  """All values that are contained in given list."""
  agama_in: [String!]

  """All values that are not contained in given list."""
  agama_not_in: [String!]

  """All values less than the given value."""
  agama_lt: String

  """All values less than or equal the given value."""
  agama_lte: String

  """All values greater than the given value."""
  agama_gt: String

  """All values greater than or equal the given value."""
  agama_gte: String

  """All values containing the given string."""
  agama_contains: String

  """All values not containing the given string."""
  agama_not_contains: String

  """All values starting with the given string."""
  agama_starts_with: String

  """All values not starting with the given string."""
  agama_not_starts_with: String

  """All values ending with the given string."""
  agama_ends_with: String

  """All values not ending with the given string."""
  agama_not_ends_with: String
  alamatDomisili: String

  """All values that are not equal to given value."""
  alamatDomisili_not: String

  """All values that are contained in given list."""
  alamatDomisili_in: [String!]

  """All values that are not contained in given list."""
  alamatDomisili_not_in: [String!]

  """All values less than the given value."""
  alamatDomisili_lt: String

  """All values less than or equal the given value."""
  alamatDomisili_lte: String

  """All values greater than the given value."""
  alamatDomisili_gt: String

  """All values greater than or equal the given value."""
  alamatDomisili_gte: String

  """All values containing the given string."""
  alamatDomisili_contains: String

  """All values not containing the given string."""
  alamatDomisili_not_contains: String

  """All values starting with the given string."""
  alamatDomisili_starts_with: String

  """All values not starting with the given string."""
  alamatDomisili_not_starts_with: String

  """All values ending with the given string."""
  alamatDomisili_ends_with: String

  """All values not ending with the given string."""
  alamatDomisili_not_ends_with: String
  alamatId: String

  """All values that are not equal to given value."""
  alamatId_not: String

  """All values that are contained in given list."""
  alamatId_in: [String!]

  """All values that are not contained in given list."""
  alamatId_not_in: [String!]

  """All values less than the given value."""
  alamatId_lt: String

  """All values less than or equal the given value."""
  alamatId_lte: String

  """All values greater than the given value."""
  alamatId_gt: String

  """All values greater than or equal the given value."""
  alamatId_gte: String

  """All values containing the given string."""
  alamatId_contains: String

  """All values not containing the given string."""
  alamatId_not_contains: String

  """All values starting with the given string."""
  alamatId_starts_with: String

  """All values not starting with the given string."""
  alamatId_not_starts_with: String

  """All values ending with the given string."""
  alamatId_ends_with: String

  """All values not ending with the given string."""
  alamatId_not_ends_with: String
  alatBantu: String

  """All values that are not equal to given value."""
  alatBantu_not: String

  """All values that are contained in given list."""
  alatBantu_in: [String!]

  """All values that are not contained in given list."""
  alatBantu_not_in: [String!]

  """All values less than the given value."""
  alatBantu_lt: String

  """All values less than or equal the given value."""
  alatBantu_lte: String

  """All values greater than the given value."""
  alatBantu_gt: String

  """All values greater than or equal the given value."""
  alatBantu_gte: String

  """All values containing the given string."""
  alatBantu_contains: String

  """All values not containing the given string."""
  alatBantu_not_contains: String

  """All values starting with the given string."""
  alatBantu_starts_with: String

  """All values not starting with the given string."""
  alatBantu_not_starts_with: String

  """All values ending with the given string."""
  alatBantu_ends_with: String

  """All values not ending with the given string."""
  alatBantu_not_ends_with: String
  alias: String

  """All values that are not equal to given value."""
  alias_not: String

  """All values that are contained in given list."""
  alias_in: [String!]

  """All values that are not contained in given list."""
  alias_not_in: [String!]

  """All values less than the given value."""
  alias_lt: String

  """All values less than or equal the given value."""
  alias_lte: String

  """All values greater than the given value."""
  alias_gt: String

  """All values greater than or equal the given value."""
  alias_gte: String

  """All values containing the given string."""
  alias_contains: String

  """All values not containing the given string."""
  alias_not_contains: String

  """All values starting with the given string."""
  alias_starts_with: String

  """All values not starting with the given string."""
  alias_not_starts_with: String

  """All values ending with the given string."""
  alias_ends_with: String

  """All values not ending with the given string."""
  alias_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  createdBy: String

  """All values that are not equal to given value."""
  createdBy_not: String

  """All values that are contained in given list."""
  createdBy_in: [String!]

  """All values that are not contained in given list."""
  createdBy_not_in: [String!]

  """All values less than the given value."""
  createdBy_lt: String

  """All values less than or equal the given value."""
  createdBy_lte: String

  """All values greater than the given value."""
  createdBy_gt: String

  """All values greater than or equal the given value."""
  createdBy_gte: String

  """All values containing the given string."""
  createdBy_contains: String

  """All values not containing the given string."""
  createdBy_not_contains: String

  """All values starting with the given string."""
  createdBy_starts_with: String

  """All values not starting with the given string."""
  createdBy_not_starts_with: String

  """All values ending with the given string."""
  createdBy_ends_with: String

  """All values not ending with the given string."""
  createdBy_not_ends_with: String
  disabilitas: Boolean

  """All values that are not equal to given value."""
  disabilitas_not: Boolean
  distrikDomisili: String

  """All values that are not equal to given value."""
  distrikDomisili_not: String

  """All values that are contained in given list."""
  distrikDomisili_in: [String!]

  """All values that are not contained in given list."""
  distrikDomisili_not_in: [String!]

  """All values less than the given value."""
  distrikDomisili_lt: String

  """All values less than or equal the given value."""
  distrikDomisili_lte: String

  """All values greater than the given value."""
  distrikDomisili_gt: String

  """All values greater than or equal the given value."""
  distrikDomisili_gte: String

  """All values containing the given string."""
  distrikDomisili_contains: String

  """All values not containing the given string."""
  distrikDomisili_not_contains: String

  """All values starting with the given string."""
  distrikDomisili_starts_with: String

  """All values not starting with the given string."""
  distrikDomisili_not_starts_with: String

  """All values ending with the given string."""
  distrikDomisili_ends_with: String

  """All values not ending with the given string."""
  distrikDomisili_not_ends_with: String
  distrikId: String

  """All values that are not equal to given value."""
  distrikId_not: String

  """All values that are contained in given list."""
  distrikId_in: [String!]

  """All values that are not contained in given list."""
  distrikId_not_in: [String!]

  """All values less than the given value."""
  distrikId_lt: String

  """All values less than or equal the given value."""
  distrikId_lte: String

  """All values greater than the given value."""
  distrikId_gt: String

  """All values greater than or equal the given value."""
  distrikId_gte: String

  """All values containing the given string."""
  distrikId_contains: String

  """All values not containing the given string."""
  distrikId_not_contains: String

  """All values starting with the given string."""
  distrikId_starts_with: String

  """All values not starting with the given string."""
  distrikId_not_starts_with: String

  """All values ending with the given string."""
  distrikId_ends_with: String

  """All values not ending with the given string."""
  distrikId_not_ends_with: String
  domisiliSama: Boolean

  """All values that are not equal to given value."""
  domisiliSama_not: Boolean
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  golDarah: String

  """All values that are not equal to given value."""
  golDarah_not: String

  """All values that are contained in given list."""
  golDarah_in: [String!]

  """All values that are not contained in given list."""
  golDarah_not_in: [String!]

  """All values less than the given value."""
  golDarah_lt: String

  """All values less than or equal the given value."""
  golDarah_lte: String

  """All values greater than the given value."""
  golDarah_gt: String

  """All values greater than or equal the given value."""
  golDarah_gte: String

  """All values containing the given string."""
  golDarah_contains: String

  """All values not containing the given string."""
  golDarah_not_contains: String

  """All values starting with the given string."""
  golDarah_starts_with: String

  """All values not starting with the given string."""
  golDarah_not_starts_with: String

  """All values ending with the given string."""
  golDarah_ends_with: String

  """All values not ending with the given string."""
  golDarah_not_ends_with: String
  jenisDisabilitas: String

  """All values that are not equal to given value."""
  jenisDisabilitas_not: String

  """All values that are contained in given list."""
  jenisDisabilitas_in: [String!]

  """All values that are not contained in given list."""
  jenisDisabilitas_not_in: [String!]

  """All values less than the given value."""
  jenisDisabilitas_lt: String

  """All values less than or equal the given value."""
  jenisDisabilitas_lte: String

  """All values greater than the given value."""
  jenisDisabilitas_gt: String

  """All values greater than or equal the given value."""
  jenisDisabilitas_gte: String

  """All values containing the given string."""
  jenisDisabilitas_contains: String

  """All values not containing the given string."""
  jenisDisabilitas_not_contains: String

  """All values starting with the given string."""
  jenisDisabilitas_starts_with: String

  """All values not starting with the given string."""
  jenisDisabilitas_not_starts_with: String

  """All values ending with the given string."""
  jenisDisabilitas_ends_with: String

  """All values not ending with the given string."""
  jenisDisabilitas_not_ends_with: String
  jenisDomisili: String

  """All values that are not equal to given value."""
  jenisDomisili_not: String

  """All values that are contained in given list."""
  jenisDomisili_in: [String!]

  """All values that are not contained in given list."""
  jenisDomisili_not_in: [String!]

  """All values less than the given value."""
  jenisDomisili_lt: String

  """All values less than or equal the given value."""
  jenisDomisili_lte: String

  """All values greater than the given value."""
  jenisDomisili_gt: String

  """All values greater than or equal the given value."""
  jenisDomisili_gte: String

  """All values containing the given string."""
  jenisDomisili_contains: String

  """All values not containing the given string."""
  jenisDomisili_not_contains: String

  """All values starting with the given string."""
  jenisDomisili_starts_with: String

  """All values not starting with the given string."""
  jenisDomisili_not_starts_with: String

  """All values ending with the given string."""
  jenisDomisili_ends_with: String

  """All values not ending with the given string."""
  jenisDomisili_not_ends_with: String
  jenisId: String

  """All values that are not equal to given value."""
  jenisId_not: String

  """All values that are contained in given list."""
  jenisId_in: [String!]

  """All values that are not contained in given list."""
  jenisId_not_in: [String!]

  """All values less than the given value."""
  jenisId_lt: String

  """All values less than or equal the given value."""
  jenisId_lte: String

  """All values greater than the given value."""
  jenisId_gt: String

  """All values greater than or equal the given value."""
  jenisId_gte: String

  """All values containing the given string."""
  jenisId_contains: String

  """All values not containing the given string."""
  jenisId_not_contains: String

  """All values starting with the given string."""
  jenisId_starts_with: String

  """All values not starting with the given string."""
  jenisId_not_starts_with: String

  """All values ending with the given string."""
  jenisId_ends_with: String

  """All values not ending with the given string."""
  jenisId_not_ends_with: String
  jenisKelamin: String

  """All values that are not equal to given value."""
  jenisKelamin_not: String

  """All values that are contained in given list."""
  jenisKelamin_in: [String!]

  """All values that are not contained in given list."""
  jenisKelamin_not_in: [String!]

  """All values less than the given value."""
  jenisKelamin_lt: String

  """All values less than or equal the given value."""
  jenisKelamin_lte: String

  """All values greater than the given value."""
  jenisKelamin_gt: String

  """All values greater than or equal the given value."""
  jenisKelamin_gte: String

  """All values containing the given string."""
  jenisKelamin_contains: String

  """All values not containing the given string."""
  jenisKelamin_not_contains: String

  """All values starting with the given string."""
  jenisKelamin_starts_with: String

  """All values not starting with the given string."""
  jenisKelamin_not_starts_with: String

  """All values ending with the given string."""
  jenisKelamin_ends_with: String

  """All values not ending with the given string."""
  jenisKelamin_not_ends_with: String
  jmlAnggota: Int

  """All values that are not equal to given value."""
  jmlAnggota_not: Int

  """All values that are contained in given list."""
  jmlAnggota_in: [Int!]

  """All values that are not contained in given list."""
  jmlAnggota_not_in: [Int!]

  """All values less than the given value."""
  jmlAnggota_lt: Int

  """All values less than or equal the given value."""
  jmlAnggota_lte: Int

  """All values greater than the given value."""
  jmlAnggota_gt: Int

  """All values greater than or equal the given value."""
  jmlAnggota_gte: Int
  namaLengkap: String

  """All values that are not equal to given value."""
  namaLengkap_not: String

  """All values that are contained in given list."""
  namaLengkap_in: [String!]

  """All values that are not contained in given list."""
  namaLengkap_not_in: [String!]

  """All values less than the given value."""
  namaLengkap_lt: String

  """All values less than or equal the given value."""
  namaLengkap_lte: String

  """All values greater than the given value."""
  namaLengkap_gt: String

  """All values greater than or equal the given value."""
  namaLengkap_gte: String

  """All values containing the given string."""
  namaLengkap_contains: String

  """All values not containing the given string."""
  namaLengkap_not_contains: String

  """All values starting with the given string."""
  namaLengkap_starts_with: String

  """All values not starting with the given string."""
  namaLengkap_not_starts_with: String

  """All values ending with the given string."""
  namaLengkap_ends_with: String

  """All values not ending with the given string."""
  namaLengkap_not_ends_with: String
  nomorId: String

  """All values that are not equal to given value."""
  nomorId_not: String

  """All values that are contained in given list."""
  nomorId_in: [String!]

  """All values that are not contained in given list."""
  nomorId_not_in: [String!]

  """All values less than the given value."""
  nomorId_lt: String

  """All values less than or equal the given value."""
  nomorId_lte: String

  """All values greater than the given value."""
  nomorId_gt: String

  """All values greater than or equal the given value."""
  nomorId_gte: String

  """All values containing the given string."""
  nomorId_contains: String

  """All values not containing the given string."""
  nomorId_not_contains: String

  """All values starting with the given string."""
  nomorId_starts_with: String

  """All values not starting with the given string."""
  nomorId_not_starts_with: String

  """All values ending with the given string."""
  nomorId_ends_with: String

  """All values not ending with the given string."""
  nomorId_not_ends_with: String
  pekerjaan: String

  """All values that are not equal to given value."""
  pekerjaan_not: String

  """All values that are contained in given list."""
  pekerjaan_in: [String!]

  """All values that are not contained in given list."""
  pekerjaan_not_in: [String!]

  """All values less than the given value."""
  pekerjaan_lt: String

  """All values less than or equal the given value."""
  pekerjaan_lte: String

  """All values greater than the given value."""
  pekerjaan_gt: String

  """All values greater than or equal the given value."""
  pekerjaan_gte: String

  """All values containing the given string."""
  pekerjaan_contains: String

  """All values not containing the given string."""
  pekerjaan_not_contains: String

  """All values starting with the given string."""
  pekerjaan_starts_with: String

  """All values not starting with the given string."""
  pekerjaan_not_starts_with: String

  """All values ending with the given string."""
  pekerjaan_ends_with: String

  """All values not ending with the given string."""
  pekerjaan_not_ends_with: String
  pendidikan: String

  """All values that are not equal to given value."""
  pendidikan_not: String

  """All values that are contained in given list."""
  pendidikan_in: [String!]

  """All values that are not contained in given list."""
  pendidikan_not_in: [String!]

  """All values less than the given value."""
  pendidikan_lt: String

  """All values less than or equal the given value."""
  pendidikan_lte: String

  """All values greater than the given value."""
  pendidikan_gt: String

  """All values greater than or equal the given value."""
  pendidikan_gte: String

  """All values containing the given string."""
  pendidikan_contains: String

  """All values not containing the given string."""
  pendidikan_not_contains: String

  """All values starting with the given string."""
  pendidikan_starts_with: String

  """All values not starting with the given string."""
  pendidikan_not_starts_with: String

  """All values ending with the given string."""
  pendidikan_ends_with: String

  """All values not ending with the given string."""
  pendidikan_not_ends_with: String
  statusPernikahan: String

  """All values that are not equal to given value."""
  statusPernikahan_not: String

  """All values that are contained in given list."""
  statusPernikahan_in: [String!]

  """All values that are not contained in given list."""
  statusPernikahan_not_in: [String!]

  """All values less than the given value."""
  statusPernikahan_lt: String

  """All values less than or equal the given value."""
  statusPernikahan_lte: String

  """All values greater than the given value."""
  statusPernikahan_gt: String

  """All values greater than or equal the given value."""
  statusPernikahan_gte: String

  """All values containing the given string."""
  statusPernikahan_contains: String

  """All values not containing the given string."""
  statusPernikahan_not_contains: String

  """All values starting with the given string."""
  statusPernikahan_starts_with: String

  """All values not starting with the given string."""
  statusPernikahan_not_starts_with: String

  """All values ending with the given string."""
  statusPernikahan_ends_with: String

  """All values not ending with the given string."""
  statusPernikahan_not_ends_with: String
  telepon: String

  """All values that are not equal to given value."""
  telepon_not: String

  """All values that are contained in given list."""
  telepon_in: [String!]

  """All values that are not contained in given list."""
  telepon_not_in: [String!]

  """All values less than the given value."""
  telepon_lt: String

  """All values less than or equal the given value."""
  telepon_lte: String

  """All values greater than the given value."""
  telepon_gt: String

  """All values greater than or equal the given value."""
  telepon_gte: String

  """All values containing the given string."""
  telepon_contains: String

  """All values not containing the given string."""
  telepon_not_contains: String

  """All values starting with the given string."""
  telepon_starts_with: String

  """All values not starting with the given string."""
  telepon_not_starts_with: String

  """All values ending with the given string."""
  telepon_ends_with: String

  """All values not ending with the given string."""
  telepon_not_ends_with: String
  tglLahir: DateTime

  """All values that are not equal to given value."""
  tglLahir_not: DateTime

  """All values that are contained in given list."""
  tglLahir_in: [DateTime!]

  """All values that are not contained in given list."""
  tglLahir_not_in: [DateTime!]

  """All values less than the given value."""
  tglLahir_lt: DateTime

  """All values less than or equal the given value."""
  tglLahir_lte: DateTime

  """All values greater than the given value."""
  tglLahir_gt: DateTime

  """All values greater than or equal the given value."""
  tglLahir_gte: DateTime
  tmpLahir: String

  """All values that are not equal to given value."""
  tmpLahir_not: String

  """All values that are contained in given list."""
  tmpLahir_in: [String!]

  """All values that are not contained in given list."""
  tmpLahir_not_in: [String!]

  """All values less than the given value."""
  tmpLahir_lt: String

  """All values less than or equal the given value."""
  tmpLahir_lte: String

  """All values greater than the given value."""
  tmpLahir_gt: String

  """All values greater than or equal the given value."""
  tmpLahir_gte: String

  """All values containing the given string."""
  tmpLahir_contains: String

  """All values not containing the given string."""
  tmpLahir_not_contains: String

  """All values starting with the given string."""
  tmpLahir_starts_with: String

  """All values not starting with the given string."""
  tmpLahir_not_starts_with: String

  """All values ending with the given string."""
  tmpLahir_ends_with: String

  """All values not ending with the given string."""
  tmpLahir_not_ends_with: String
  unitSatuan: String

  """All values that are not equal to given value."""
  unitSatuan_not: String

  """All values that are contained in given list."""
  unitSatuan_in: [String!]

  """All values that are not contained in given list."""
  unitSatuan_not_in: [String!]

  """All values less than the given value."""
  unitSatuan_lt: String

  """All values less than or equal the given value."""
  unitSatuan_lte: String

  """All values greater than the given value."""
  unitSatuan_gt: String

  """All values greater than or equal the given value."""
  unitSatuan_gte: String

  """All values containing the given string."""
  unitSatuan_contains: String

  """All values not containing the given string."""
  unitSatuan_not_contains: String

  """All values starting with the given string."""
  unitSatuan_starts_with: String

  """All values not starting with the given string."""
  unitSatuan_not_starts_with: String

  """All values ending with the given string."""
  unitSatuan_ends_with: String

  """All values not ending with the given string."""
  unitSatuan_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  updatedBy: String

  """All values that are not equal to given value."""
  updatedBy_not: String

  """All values that are contained in given list."""
  updatedBy_in: [String!]

  """All values that are not contained in given list."""
  updatedBy_not_in: [String!]

  """All values less than the given value."""
  updatedBy_lt: String

  """All values less than or equal the given value."""
  updatedBy_lte: String

  """All values greater than the given value."""
  updatedBy_gt: String

  """All values greater than or equal the given value."""
  updatedBy_gte: String

  """All values containing the given string."""
  updatedBy_contains: String

  """All values not containing the given string."""
  updatedBy_not_contains: String

  """All values starting with the given string."""
  updatedBy_starts_with: String

  """All values not starting with the given string."""
  updatedBy_not_starts_with: String

  """All values ending with the given string."""
  updatedBy_ends_with: String

  """All values not ending with the given string."""
  updatedBy_not_ends_with: String
  wargaNegara: String

  """All values that are not equal to given value."""
  wargaNegara_not: String

  """All values that are contained in given list."""
  wargaNegara_in: [String!]

  """All values that are not contained in given list."""
  wargaNegara_not_in: [String!]

  """All values less than the given value."""
  wargaNegara_lt: String

  """All values less than or equal the given value."""
  wargaNegara_lte: String

  """All values greater than the given value."""
  wargaNegara_gt: String

  """All values greater than or equal the given value."""
  wargaNegara_gte: String

  """All values containing the given string."""
  wargaNegara_contains: String

  """All values not containing the given string."""
  wargaNegara_not_contains: String

  """All values starting with the given string."""
  wargaNegara_starts_with: String

  """All values not starting with the given string."""
  wargaNegara_not_starts_with: String

  """All values ending with the given string."""
  wargaNegara_ends_with: String

  """All values not ending with the given string."""
  wargaNegara_not_ends_with: String
  applications_every: ApplicationWhereInput
  applications_some: ApplicationWhereInput
  applications_none: ApplicationWhereInput
  casekorbans_every: CaseKorbanWhereInput
  casekorbans_some: CaseKorbanWhereInput
  casekorbans_none: CaseKorbanWhereInput
  casepelakus_every: CasePelakuWhereInput
  casepelakus_some: CasePelakuWhereInput
  casepelakus_none: CasePelakuWhereInput
  clients_every: ClientWhereInput
  clients_some: ClientWhereInput
  clients_none: ClientWhereInput
  documents_every: PersonDocumentWhereInput
  documents_some: PersonDocumentWhereInput
  documents_none: PersonDocumentWhereInput
  logRequests_every: LogRequestWhereInput
  logRequests_some: LogRequestWhereInput
  logRequests_none: LogRequestWhereInput
}

input PersonWhereUniqueInput {
  id: Int
}

type Query {
  cases(where: CaseWhereInput, orderBy: CaseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Case]!
  caseClassifications(where: CaseClassificationWhereInput, orderBy: CaseClassificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseClassification]!
  caseConsultations(where: CaseConsultationWhereInput, orderBy: CaseConsultationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseConsultation]!
  caseConsultationApps(where: CaseConsultationAppWhereInput, orderBy: CaseConsultationAppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseConsultationApp]!
  caseDocuments(where: CaseDocumentWhereInput, orderBy: CaseDocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseDocument]!
  caseIssues(where: CaseIssueWhereInput, orderBy: CaseIssueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseIssue]!
  caseKorbans(where: CaseKorbanWhereInput, orderBy: CaseKorbanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseKorban]!
  casePelakus(where: CasePelakuWhereInput, orderBy: CasePelakuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CasePelaku]!
  casePks(where: CasePkWhereInput, orderBy: CasePkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CasePk]!
  caseProgresses(where: CaseProgressWhereInput, orderBy: CaseProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseProgress]!
  caseProgressActivities(where: CaseProgressActivityWhereInput, orderBy: CaseProgressActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseProgressActivity]!
  caseProgressActivityLits(where: CaseProgressActivityLitWhereInput, orderBy: CaseProgressActivityLitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseProgressActivityLit]!
  caseProgressActivityNonlits(where: CaseProgressActivityNonlitWhereInput, orderBy: CaseProgressActivityNonlitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseProgressActivityNonlit]!
  caseTransferReferrals(where: CaseTransferReferralWhereInput, orderBy: CaseTransferReferralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseTransferReferral]!
  caseTransfers(where: CaseTransferWhereInput, orderBy: CaseTransferOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseTransfer]!
  caseReferrals(where: CaseReferralWhereInput, orderBy: CaseReferralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseReferral]!
  caseViolatedRights(where: CaseViolatedRightWhereInput, orderBy: CaseViolatedRightOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CaseViolatedRight]!
  clients(where: ClientWhereInput, orderBy: ClientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Client]!
  daftarPengacaras(where: DaftarPengacaraWhereInput, orderBy: DaftarPengacaraOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DaftarPengacara]!
  dataDicts(where: DataDictWhereInput, orderBy: DataDictOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DataDict]!
  dataDictLocals(where: DataDictLocalWhereInput, orderBy: DataDictLocalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DataDictLocal]!
  logRequestApps(where: LogRequestAppWhereInput, orderBy: LogRequestAppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequestApp]!
  mtVocabs(where: MtVocabWhereInput, orderBy: MtVocabOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MtVocab]!
  mtVocabGroups(where: MtVocabGroupWhereInput, orderBy: MtVocabGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MtVocabGroup]!
  personDocuments(where: PersonDocumentWhereInput, orderBy: PersonDocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PersonDocument]!
  roles(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role]!
  userProfiles(where: UserProfileWhereInput, orderBy: UserProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserProfile]!
  srcAnalisas(where: SrcAnalisaWhereInput, orderBy: SrcAnalisaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SrcAnalisa]!
  srcOperators(where: SrcOperatorWhereInput, orderBy: SrcOperatorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SrcOperator]!
  srcTemplates(where: SrcTemplateWhereInput, orderBy: SrcTemplateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SrcTemplate]!
  applications(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Application]!
  logRequests(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequest]!
  rolesTypes(where: RolesTypeWhereInput, orderBy: RolesTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RolesType]!
  networks(where: NetworkWhereInput, orderBy: NetworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Network]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  persons(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Person]!
  case(where: CaseWhereUniqueInput!): Case
  caseClassification(where: CaseClassificationWhereUniqueInput!): CaseClassification
  caseConsultation(where: CaseConsultationWhereUniqueInput!): CaseConsultation
  caseConsultationApp(where: CaseConsultationAppWhereUniqueInput!): CaseConsultationApp
  caseDocument(where: CaseDocumentWhereUniqueInput!): CaseDocument
  caseIssue(where: CaseIssueWhereUniqueInput!): CaseIssue
  caseKorban(where: CaseKorbanWhereUniqueInput!): CaseKorban
  casePelaku(where: CasePelakuWhereUniqueInput!): CasePelaku
  casePk(where: CasePkWhereUniqueInput!): CasePk
  caseProgress(where: CaseProgressWhereUniqueInput!): CaseProgress
  caseProgressActivity(where: CaseProgressActivityWhereUniqueInput!): CaseProgressActivity
  caseProgressActivityLit(where: CaseProgressActivityLitWhereUniqueInput!): CaseProgressActivityLit
  caseProgressActivityNonlit(where: CaseProgressActivityNonlitWhereUniqueInput!): CaseProgressActivityNonlit
  caseTransferReferral(where: CaseTransferReferralWhereUniqueInput!): CaseTransferReferral
  caseTransfer(where: CaseTransferWhereUniqueInput!): CaseTransfer
  caseReferral(where: CaseReferralWhereUniqueInput!): CaseReferral
  caseViolatedRight(where: CaseViolatedRightWhereUniqueInput!): CaseViolatedRight
  client(where: ClientWhereUniqueInput!): Client
  daftarPengacara(where: DaftarPengacaraWhereUniqueInput!): DaftarPengacara
  dataDict(where: DataDictWhereUniqueInput!): DataDict
  dataDictLocal(where: DataDictLocalWhereUniqueInput!): DataDictLocal
  logRequestApp(where: LogRequestAppWhereUniqueInput!): LogRequestApp
  mtVocab(where: MtVocabWhereUniqueInput!): MtVocab
  mtVocabGroup(where: MtVocabGroupWhereUniqueInput!): MtVocabGroup
  personDocument(where: PersonDocumentWhereUniqueInput!): PersonDocument
  role(where: RoleWhereUniqueInput!): Role
  userProfile(where: UserProfileWhereUniqueInput!): UserProfile
  srcAnalisa(where: SrcAnalisaWhereUniqueInput!): SrcAnalisa
  srcOperator(where: SrcOperatorWhereUniqueInput!): SrcOperator
  srcTemplate(where: SrcTemplateWhereUniqueInput!): SrcTemplate
  application(where: ApplicationWhereUniqueInput!): Application
  logRequest(where: LogRequestWhereUniqueInput!): LogRequest
  rolesType(where: RolesTypeWhereUniqueInput!): RolesType
  network(where: NetworkWhereUniqueInput!): Network
  user(where: UserWhereUniqueInput!): User
  person(where: PersonWhereUniqueInput!): Person
  casesConnection(where: CaseWhereInput, orderBy: CaseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseConnection!
  caseClassificationsConnection(where: CaseClassificationWhereInput, orderBy: CaseClassificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseClassificationConnection!
  caseConsultationsConnection(where: CaseConsultationWhereInput, orderBy: CaseConsultationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseConsultationConnection!
  caseConsultationAppsConnection(where: CaseConsultationAppWhereInput, orderBy: CaseConsultationAppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseConsultationAppConnection!
  caseDocumentsConnection(where: CaseDocumentWhereInput, orderBy: CaseDocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseDocumentConnection!
  caseIssuesConnection(where: CaseIssueWhereInput, orderBy: CaseIssueOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseIssueConnection!
  caseKorbansConnection(where: CaseKorbanWhereInput, orderBy: CaseKorbanOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseKorbanConnection!
  casePelakusConnection(where: CasePelakuWhereInput, orderBy: CasePelakuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CasePelakuConnection!
  casePksConnection(where: CasePkWhereInput, orderBy: CasePkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CasePkConnection!
  caseProgressesConnection(where: CaseProgressWhereInput, orderBy: CaseProgressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseProgressConnection!
  caseProgressActivitiesConnection(where: CaseProgressActivityWhereInput, orderBy: CaseProgressActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseProgressActivityConnection!
  caseProgressActivityLitsConnection(where: CaseProgressActivityLitWhereInput, orderBy: CaseProgressActivityLitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseProgressActivityLitConnection!
  caseProgressActivityNonlitsConnection(where: CaseProgressActivityNonlitWhereInput, orderBy: CaseProgressActivityNonlitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseProgressActivityNonlitConnection!
  caseTransferReferralsConnection(where: CaseTransferReferralWhereInput, orderBy: CaseTransferReferralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseTransferReferralConnection!
  caseTransfersConnection(where: CaseTransferWhereInput, orderBy: CaseTransferOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseTransferConnection!
  caseReferralsConnection(where: CaseReferralWhereInput, orderBy: CaseReferralOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseReferralConnection!
  caseViolatedRightsConnection(where: CaseViolatedRightWhereInput, orderBy: CaseViolatedRightOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaseViolatedRightConnection!
  clientsConnection(where: ClientWhereInput, orderBy: ClientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClientConnection!
  daftarPengacarasConnection(where: DaftarPengacaraWhereInput, orderBy: DaftarPengacaraOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DaftarPengacaraConnection!
  dataDictsConnection(where: DataDictWhereInput, orderBy: DataDictOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DataDictConnection!
  dataDictLocalsConnection(where: DataDictLocalWhereInput, orderBy: DataDictLocalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DataDictLocalConnection!
  logRequestAppsConnection(where: LogRequestAppWhereInput, orderBy: LogRequestAppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LogRequestAppConnection!
  mtVocabsConnection(where: MtVocabWhereInput, orderBy: MtVocabOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MtVocabConnection!
  mtVocabGroupsConnection(where: MtVocabGroupWhereInput, orderBy: MtVocabGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MtVocabGroupConnection!
  personDocumentsConnection(where: PersonDocumentWhereInput, orderBy: PersonDocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PersonDocumentConnection!
  rolesConnection(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RoleConnection!
  userProfilesConnection(where: UserProfileWhereInput, orderBy: UserProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserProfileConnection!
  srcAnalisasConnection(where: SrcAnalisaWhereInput, orderBy: SrcAnalisaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SrcAnalisaConnection!
  srcOperatorsConnection(where: SrcOperatorWhereInput, orderBy: SrcOperatorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SrcOperatorConnection!
  srcTemplatesConnection(where: SrcTemplateWhereInput, orderBy: SrcTemplateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SrcTemplateConnection!
  applicationsConnection(where: ApplicationWhereInput, orderBy: ApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ApplicationConnection!
  logRequestsConnection(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LogRequestConnection!
  rolesTypesConnection(where: RolesTypeWhereInput, orderBy: RolesTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RolesTypeConnection!
  networksConnection(where: NetworkWhereInput, orderBy: NetworkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NetworkConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  personsConnection(where: PersonWhereInput, orderBy: PersonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PersonConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Role {
  createdAt: DateTime!
  id: Int!
  userId(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  type: RolesType!
}

"""A connection to a list of items."""
type RoleConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [RoleEdge]!
  aggregate: AggregateRole!
}

input RoleCreateInput {
  userId: UserCreateManyWithoutRoles_typeInput
  type: RolesTypeCreateOneInput!
}

input RoleCreateManyWithoutUserIdInput {
  create: [RoleCreateWithoutUserIdInput!]
  connect: [RoleWhereUniqueInput!]
}

input RoleCreateWithoutUserIdInput {
  type: RolesTypeCreateOneInput!
}

"""An edge in a connection."""
type RoleEdge {
  """The item at the end of the edge."""
  node: Role!

  """A cursor for use in pagination."""
  cursor: String!
}

enum RoleOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
}

type RolePreviousValues {
  createdAt: DateTime!
  id: Int!
}

input RoleScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [RoleScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [RoleScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RoleScalarWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
}

type RolesType {
  createdAt: DateTime!
  id: Int!
  description: String
}

"""A connection to a list of items."""
type RolesTypeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [RolesTypeEdge]!
  aggregate: AggregateRolesType!
}

input RolesTypeCreateInput {
  description: String
}

input RolesTypeCreateOneInput {
  create: RolesTypeCreateInput
  connect: RolesTypeWhereUniqueInput
}

"""An edge in a connection."""
type RolesTypeEdge {
  """The item at the end of the edge."""
  node: RolesType!

  """A cursor for use in pagination."""
  cursor: String!
}

enum RolesTypeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  description_ASC
  description_DESC
}

type RolesTypePreviousValues {
  createdAt: DateTime!
  id: Int!
  description: String
}

type RolesTypeSubscriptionPayload {
  mutation: MutationType!
  node: RolesType
  updatedFields: [String!]
  previousValues: RolesTypePreviousValues
}

input RolesTypeSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [RolesTypeSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [RolesTypeSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RolesTypeSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: RolesTypeWhereInput
}

input RolesTypeUpdateDataInput {
  description: String
}

input RolesTypeUpdateInput {
  description: String
}

input RolesTypeUpdateManyMutationInput {
  description: String
}

input RolesTypeUpdateOneRequiredInput {
  create: RolesTypeCreateInput
  connect: RolesTypeWhereUniqueInput
  update: RolesTypeUpdateDataInput
  upsert: RolesTypeUpsertNestedInput
}

input RolesTypeUpsertNestedInput {
  update: RolesTypeUpdateDataInput!
  create: RolesTypeCreateInput!
}

input RolesTypeWhereInput {
  """Logical AND on all given filters."""
  AND: [RolesTypeWhereInput!]

  """Logical OR on all given filters."""
  OR: [RolesTypeWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RolesTypeWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
}

input RolesTypeWhereUniqueInput {
  id: Int
}

type RoleSubscriptionPayload {
  mutation: MutationType!
  node: Role
  updatedFields: [String!]
  previousValues: RolePreviousValues
}

input RoleSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [RoleSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [RoleSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RoleSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: RoleWhereInput
}

input RoleUpdateInput {
  userId: UserUpdateManyWithoutRoles_typeInput
  type: RolesTypeUpdateOneRequiredInput
}

input RoleUpdateManyWithoutUserIdInput {
  create: [RoleCreateWithoutUserIdInput!]
  connect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  disconnect: [RoleWhereUniqueInput!]
  delete: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutUserIdInput!]
  deleteMany: [RoleScalarWhereInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutUserIdInput!]
}

input RoleUpdateWithoutUserIdDataInput {
  type: RolesTypeUpdateOneRequiredInput
}

input RoleUpdateWithWhereUniqueWithoutUserIdInput {
  where: RoleWhereUniqueInput!
  data: RoleUpdateWithoutUserIdDataInput!
}

input RoleUpsertWithWhereUniqueWithoutUserIdInput {
  where: RoleWhereUniqueInput!
  update: RoleUpdateWithoutUserIdDataInput!
  create: RoleCreateWithoutUserIdInput!
}

input RoleWhereInput {
  """Logical AND on all given filters."""
  AND: [RoleWhereInput!]

  """Logical OR on all given filters."""
  OR: [RoleWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RoleWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  userId_every: UserWhereInput
  userId_some: UserWhereInput
  userId_none: UserWhereInput
  type: RolesTypeWhereInput
}

input RoleWhereUniqueInput {
  id: Int
}

type SrcAnalisa {
  id: Int!
  group: String
  label: String
  field: String
  type: String
  source: String
  kode_list: String
  alias: String
}

"""A connection to a list of items."""
type SrcAnalisaConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SrcAnalisaEdge]!
  aggregate: AggregateSrcAnalisa!
}

input SrcAnalisaCreateInput {
  group: String
  label: String
  field: String
  type: String
  source: String
  kode_list: String
  alias: String
}

"""An edge in a connection."""
type SrcAnalisaEdge {
  """The item at the end of the edge."""
  node: SrcAnalisa!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SrcAnalisaOrderByInput {
  id_ASC
  id_DESC
  group_ASC
  group_DESC
  label_ASC
  label_DESC
  field_ASC
  field_DESC
  type_ASC
  type_DESC
  source_ASC
  source_DESC
  kode_list_ASC
  kode_list_DESC
  alias_ASC
  alias_DESC
}

type SrcAnalisaPreviousValues {
  id: Int!
  group: String
  label: String
  field: String
  type: String
  source: String
  kode_list: String
  alias: String
}

type SrcAnalisaSubscriptionPayload {
  mutation: MutationType!
  node: SrcAnalisa
  updatedFields: [String!]
  previousValues: SrcAnalisaPreviousValues
}

input SrcAnalisaSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SrcAnalisaSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SrcAnalisaSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SrcAnalisaSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SrcAnalisaWhereInput
}

input SrcAnalisaUpdateInput {
  group: String
  label: String
  field: String
  type: String
  source: String
  kode_list: String
  alias: String
}

input SrcAnalisaUpdateManyMutationInput {
  group: String
  label: String
  field: String
  type: String
  source: String
  kode_list: String
  alias: String
}

input SrcAnalisaWhereInput {
  """Logical AND on all given filters."""
  AND: [SrcAnalisaWhereInput!]

  """Logical OR on all given filters."""
  OR: [SrcAnalisaWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SrcAnalisaWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  group: String

  """All values that are not equal to given value."""
  group_not: String

  """All values that are contained in given list."""
  group_in: [String!]

  """All values that are not contained in given list."""
  group_not_in: [String!]

  """All values less than the given value."""
  group_lt: String

  """All values less than or equal the given value."""
  group_lte: String

  """All values greater than the given value."""
  group_gt: String

  """All values greater than or equal the given value."""
  group_gte: String

  """All values containing the given string."""
  group_contains: String

  """All values not containing the given string."""
  group_not_contains: String

  """All values starting with the given string."""
  group_starts_with: String

  """All values not starting with the given string."""
  group_not_starts_with: String

  """All values ending with the given string."""
  group_ends_with: String

  """All values not ending with the given string."""
  group_not_ends_with: String
  label: String

  """All values that are not equal to given value."""
  label_not: String

  """All values that are contained in given list."""
  label_in: [String!]

  """All values that are not contained in given list."""
  label_not_in: [String!]

  """All values less than the given value."""
  label_lt: String

  """All values less than or equal the given value."""
  label_lte: String

  """All values greater than the given value."""
  label_gt: String

  """All values greater than or equal the given value."""
  label_gte: String

  """All values containing the given string."""
  label_contains: String

  """All values not containing the given string."""
  label_not_contains: String

  """All values starting with the given string."""
  label_starts_with: String

  """All values not starting with the given string."""
  label_not_starts_with: String

  """All values ending with the given string."""
  label_ends_with: String

  """All values not ending with the given string."""
  label_not_ends_with: String
  field: String

  """All values that are not equal to given value."""
  field_not: String

  """All values that are contained in given list."""
  field_in: [String!]

  """All values that are not contained in given list."""
  field_not_in: [String!]

  """All values less than the given value."""
  field_lt: String

  """All values less than or equal the given value."""
  field_lte: String

  """All values greater than the given value."""
  field_gt: String

  """All values greater than or equal the given value."""
  field_gte: String

  """All values containing the given string."""
  field_contains: String

  """All values not containing the given string."""
  field_not_contains: String

  """All values starting with the given string."""
  field_starts_with: String

  """All values not starting with the given string."""
  field_not_starts_with: String

  """All values ending with the given string."""
  field_ends_with: String

  """All values not ending with the given string."""
  field_not_ends_with: String
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  kode_list: String

  """All values that are not equal to given value."""
  kode_list_not: String

  """All values that are contained in given list."""
  kode_list_in: [String!]

  """All values that are not contained in given list."""
  kode_list_not_in: [String!]

  """All values less than the given value."""
  kode_list_lt: String

  """All values less than or equal the given value."""
  kode_list_lte: String

  """All values greater than the given value."""
  kode_list_gt: String

  """All values greater than or equal the given value."""
  kode_list_gte: String

  """All values containing the given string."""
  kode_list_contains: String

  """All values not containing the given string."""
  kode_list_not_contains: String

  """All values starting with the given string."""
  kode_list_starts_with: String

  """All values not starting with the given string."""
  kode_list_not_starts_with: String

  """All values ending with the given string."""
  kode_list_ends_with: String

  """All values not ending with the given string."""
  kode_list_not_ends_with: String
  alias: String

  """All values that are not equal to given value."""
  alias_not: String

  """All values that are contained in given list."""
  alias_in: [String!]

  """All values that are not contained in given list."""
  alias_not_in: [String!]

  """All values less than the given value."""
  alias_lt: String

  """All values less than or equal the given value."""
  alias_lte: String

  """All values greater than the given value."""
  alias_gt: String

  """All values greater than or equal the given value."""
  alias_gte: String

  """All values containing the given string."""
  alias_contains: String

  """All values not containing the given string."""
  alias_not_contains: String

  """All values starting with the given string."""
  alias_starts_with: String

  """All values not starting with the given string."""
  alias_not_starts_with: String

  """All values ending with the given string."""
  alias_ends_with: String

  """All values not ending with the given string."""
  alias_not_ends_with: String
}

input SrcAnalisaWhereUniqueInput {
  id: Int
}

type SrcOperator {
  id: Int!
  type: String
  operator: String
  label: String
}

"""A connection to a list of items."""
type SrcOperatorConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SrcOperatorEdge]!
  aggregate: AggregateSrcOperator!
}

input SrcOperatorCreateInput {
  type: String
  operator: String
  label: String
}

"""An edge in a connection."""
type SrcOperatorEdge {
  """The item at the end of the edge."""
  node: SrcOperator!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SrcOperatorOrderByInput {
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  operator_ASC
  operator_DESC
  label_ASC
  label_DESC
}

type SrcOperatorPreviousValues {
  id: Int!
  type: String
  operator: String
  label: String
}

type SrcOperatorSubscriptionPayload {
  mutation: MutationType!
  node: SrcOperator
  updatedFields: [String!]
  previousValues: SrcOperatorPreviousValues
}

input SrcOperatorSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SrcOperatorSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SrcOperatorSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SrcOperatorSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SrcOperatorWhereInput
}

input SrcOperatorUpdateInput {
  type: String
  operator: String
  label: String
}

input SrcOperatorUpdateManyMutationInput {
  type: String
  operator: String
  label: String
}

input SrcOperatorWhereInput {
  """Logical AND on all given filters."""
  AND: [SrcOperatorWhereInput!]

  """Logical OR on all given filters."""
  OR: [SrcOperatorWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SrcOperatorWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  type: String

  """All values that are not equal to given value."""
  type_not: String

  """All values that are contained in given list."""
  type_in: [String!]

  """All values that are not contained in given list."""
  type_not_in: [String!]

  """All values less than the given value."""
  type_lt: String

  """All values less than or equal the given value."""
  type_lte: String

  """All values greater than the given value."""
  type_gt: String

  """All values greater than or equal the given value."""
  type_gte: String

  """All values containing the given string."""
  type_contains: String

  """All values not containing the given string."""
  type_not_contains: String

  """All values starting with the given string."""
  type_starts_with: String

  """All values not starting with the given string."""
  type_not_starts_with: String

  """All values ending with the given string."""
  type_ends_with: String

  """All values not ending with the given string."""
  type_not_ends_with: String
  operator: String

  """All values that are not equal to given value."""
  operator_not: String

  """All values that are contained in given list."""
  operator_in: [String!]

  """All values that are not contained in given list."""
  operator_not_in: [String!]

  """All values less than the given value."""
  operator_lt: String

  """All values less than or equal the given value."""
  operator_lte: String

  """All values greater than the given value."""
  operator_gt: String

  """All values greater than or equal the given value."""
  operator_gte: String

  """All values containing the given string."""
  operator_contains: String

  """All values not containing the given string."""
  operator_not_contains: String

  """All values starting with the given string."""
  operator_starts_with: String

  """All values not starting with the given string."""
  operator_not_starts_with: String

  """All values ending with the given string."""
  operator_ends_with: String

  """All values not ending with the given string."""
  operator_not_ends_with: String
  label: String

  """All values that are not equal to given value."""
  label_not: String

  """All values that are contained in given list."""
  label_in: [String!]

  """All values that are not contained in given list."""
  label_not_in: [String!]

  """All values less than the given value."""
  label_lt: String

  """All values less than or equal the given value."""
  label_lte: String

  """All values greater than the given value."""
  label_gt: String

  """All values greater than or equal the given value."""
  label_gte: String

  """All values containing the given string."""
  label_contains: String

  """All values not containing the given string."""
  label_not_contains: String

  """All values starting with the given string."""
  label_starts_with: String

  """All values not starting with the given string."""
  label_not_starts_with: String

  """All values ending with the given string."""
  label_ends_with: String

  """All values not ending with the given string."""
  label_not_ends_with: String
}

input SrcOperatorWhereUniqueInput {
  id: Int
}

type SrcTemplate {
  id: Int!
  name: String
  template: String
}

"""A connection to a list of items."""
type SrcTemplateConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SrcTemplateEdge]!
  aggregate: AggregateSrcTemplate!
}

input SrcTemplateCreateInput {
  name: String
  template: String
}

"""An edge in a connection."""
type SrcTemplateEdge {
  """The item at the end of the edge."""
  node: SrcTemplate!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SrcTemplateOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  template_ASC
  template_DESC
}

type SrcTemplatePreviousValues {
  id: Int!
  name: String
  template: String
}

type SrcTemplateSubscriptionPayload {
  mutation: MutationType!
  node: SrcTemplate
  updatedFields: [String!]
  previousValues: SrcTemplatePreviousValues
}

input SrcTemplateSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SrcTemplateSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SrcTemplateSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SrcTemplateSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SrcTemplateWhereInput
}

input SrcTemplateUpdateInput {
  name: String
  template: String
}

input SrcTemplateUpdateManyMutationInput {
  name: String
  template: String
}

input SrcTemplateWhereInput {
  """Logical AND on all given filters."""
  AND: [SrcTemplateWhereInput!]

  """Logical OR on all given filters."""
  OR: [SrcTemplateWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SrcTemplateWhereInput!]
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  template: String

  """All values that are not equal to given value."""
  template_not: String

  """All values that are contained in given list."""
  template_in: [String!]

  """All values that are not contained in given list."""
  template_not_in: [String!]

  """All values less than the given value."""
  template_lt: String

  """All values less than or equal the given value."""
  template_lte: String

  """All values greater than the given value."""
  template_gt: String

  """All values greater than or equal the given value."""
  template_gte: String

  """All values containing the given string."""
  template_contains: String

  """All values not containing the given string."""
  template_not_contains: String

  """All values starting with the given string."""
  template_starts_with: String

  """All values not starting with the given string."""
  template_not_starts_with: String

  """All values ending with the given string."""
  template_ends_with: String

  """All values not ending with the given string."""
  template_not_ends_with: String
}

input SrcTemplateWhereUniqueInput {
  id: Int
}

type Subscription {
  case(where: CaseSubscriptionWhereInput): CaseSubscriptionPayload
  caseClassification(where: CaseClassificationSubscriptionWhereInput): CaseClassificationSubscriptionPayload
  caseConsultation(where: CaseConsultationSubscriptionWhereInput): CaseConsultationSubscriptionPayload
  caseConsultationApp(where: CaseConsultationAppSubscriptionWhereInput): CaseConsultationAppSubscriptionPayload
  caseDocument(where: CaseDocumentSubscriptionWhereInput): CaseDocumentSubscriptionPayload
  caseIssue(where: CaseIssueSubscriptionWhereInput): CaseIssueSubscriptionPayload
  caseKorban(where: CaseKorbanSubscriptionWhereInput): CaseKorbanSubscriptionPayload
  casePelaku(where: CasePelakuSubscriptionWhereInput): CasePelakuSubscriptionPayload
  casePk(where: CasePkSubscriptionWhereInput): CasePkSubscriptionPayload
  caseProgress(where: CaseProgressSubscriptionWhereInput): CaseProgressSubscriptionPayload
  caseProgressActivity(where: CaseProgressActivitySubscriptionWhereInput): CaseProgressActivitySubscriptionPayload
  caseProgressActivityLit(where: CaseProgressActivityLitSubscriptionWhereInput): CaseProgressActivityLitSubscriptionPayload
  caseProgressActivityNonlit(where: CaseProgressActivityNonlitSubscriptionWhereInput): CaseProgressActivityNonlitSubscriptionPayload
  caseTransferReferral(where: CaseTransferReferralSubscriptionWhereInput): CaseTransferReferralSubscriptionPayload
  caseTransfer(where: CaseTransferSubscriptionWhereInput): CaseTransferSubscriptionPayload
  caseReferral(where: CaseReferralSubscriptionWhereInput): CaseReferralSubscriptionPayload
  caseViolatedRight(where: CaseViolatedRightSubscriptionWhereInput): CaseViolatedRightSubscriptionPayload
  client(where: ClientSubscriptionWhereInput): ClientSubscriptionPayload
  daftarPengacara(where: DaftarPengacaraSubscriptionWhereInput): DaftarPengacaraSubscriptionPayload
  dataDict(where: DataDictSubscriptionWhereInput): DataDictSubscriptionPayload
  dataDictLocal(where: DataDictLocalSubscriptionWhereInput): DataDictLocalSubscriptionPayload
  logRequestApp(where: LogRequestAppSubscriptionWhereInput): LogRequestAppSubscriptionPayload
  mtVocab(where: MtVocabSubscriptionWhereInput): MtVocabSubscriptionPayload
  mtVocabGroup(where: MtVocabGroupSubscriptionWhereInput): MtVocabGroupSubscriptionPayload
  personDocument(where: PersonDocumentSubscriptionWhereInput): PersonDocumentSubscriptionPayload
  role(where: RoleSubscriptionWhereInput): RoleSubscriptionPayload
  userProfile(where: UserProfileSubscriptionWhereInput): UserProfileSubscriptionPayload
  srcAnalisa(where: SrcAnalisaSubscriptionWhereInput): SrcAnalisaSubscriptionPayload
  srcOperator(where: SrcOperatorSubscriptionWhereInput): SrcOperatorSubscriptionPayload
  srcTemplate(where: SrcTemplateSubscriptionWhereInput): SrcTemplateSubscriptionPayload
  application(where: ApplicationSubscriptionWhereInput): ApplicationSubscriptionPayload
  logRequest(where: LogRequestSubscriptionWhereInput): LogRequestSubscriptionPayload
  rolesType(where: RolesTypeSubscriptionWhereInput): RolesTypeSubscriptionPayload
  network(where: NetworkSubscriptionWhereInput): NetworkSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  person(where: PersonSubscriptionWhereInput): PersonSubscriptionPayload
}

type User {
  address: String
  avatar: String
  createdAt: DateTime!
  deletedAt: DateTime
  email: String
  id: Int!
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  updatedAt: DateTime!
  username: String
  profile: UserProfile!
  roles_type(where: RoleWhereInput, orderBy: RoleOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Role!]
  logRequestBy(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequest!]
  logRequestTo(where: LogRequestWhereInput, orderBy: LogRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequest!]
  appConsultation(where: LogRequestAppWhereInput, orderBy: LogRequestAppOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogRequestApp!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileCreateOneWithoutUserIdInput!
  roles_type: RoleCreateManyWithoutUserIdInput
  logRequestBy: LogRequestCreateManyWithoutRequestByInput
  logRequestTo: LogRequestCreateManyWithoutRequestToInput
  appConsultation: LogRequestAppCreateManyWithoutAppConsultationInput
}

input UserCreateManyWithoutRoles_typeInput {
  create: [UserCreateWithoutRoles_typeInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAppConsultationInput {
  create: UserCreateWithoutAppConsultationInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutLogRequestByInput {
  create: UserCreateWithoutLogRequestByInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutLogRequestToInput {
  create: UserCreateWithoutLogRequestToInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutProfileInput {
  create: UserCreateWithoutProfileInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAppConsultationInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileCreateOneWithoutUserIdInput!
  roles_type: RoleCreateManyWithoutUserIdInput
  logRequestBy: LogRequestCreateManyWithoutRequestByInput
  logRequestTo: LogRequestCreateManyWithoutRequestToInput
}

input UserCreateWithoutLogRequestByInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileCreateOneWithoutUserIdInput!
  roles_type: RoleCreateManyWithoutUserIdInput
  logRequestTo: LogRequestCreateManyWithoutRequestToInput
  appConsultation: LogRequestAppCreateManyWithoutAppConsultationInput
}

input UserCreateWithoutLogRequestToInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileCreateOneWithoutUserIdInput!
  roles_type: RoleCreateManyWithoutUserIdInput
  logRequestBy: LogRequestCreateManyWithoutRequestByInput
  appConsultation: LogRequestAppCreateManyWithoutAppConsultationInput
}

input UserCreateWithoutProfileInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  roles_type: RoleCreateManyWithoutUserIdInput
  logRequestBy: LogRequestCreateManyWithoutRequestByInput
  logRequestTo: LogRequestCreateManyWithoutRequestToInput
  appConsultation: LogRequestAppCreateManyWithoutAppConsultationInput
}

input UserCreateWithoutRoles_typeInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileCreateOneWithoutUserIdInput!
  logRequestBy: LogRequestCreateManyWithoutRequestByInput
  logRequestTo: LogRequestCreateManyWithoutRequestToInput
  appConsultation: LogRequestAppCreateManyWithoutAppConsultationInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  address_ASC
  address_DESC
  avatar_ASC
  avatar_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  phone_ASC
  phone_DESC
  position_ASC
  position_DESC
  rememberToken_ASC
  rememberToken_DESC
  roles_ASC
  roles_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  username_ASC
  username_DESC
}

type UserPreviousValues {
  address: String
  avatar: String
  createdAt: DateTime!
  deletedAt: DateTime
  email: String
  id: Int!
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  updatedAt: DateTime!
  username: String
}

type UserProfile {
  createdAt: DateTime!
  id: Int!
  noContact: String
  occupation: String
  photo: String
  updatedAt: DateTime!
  userId: User!
}

"""A connection to a list of items."""
type UserProfileConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserProfileEdge]!
  aggregate: AggregateUserProfile!
}

input UserProfileCreateInput {
  noContact: String
  occupation: String
  photo: String
  userId: UserCreateOneWithoutProfileInput!
}

input UserProfileCreateOneWithoutUserIdInput {
  create: UserProfileCreateWithoutUserIdInput
  connect: UserProfileWhereUniqueInput
}

input UserProfileCreateWithoutUserIdInput {
  noContact: String
  occupation: String
  photo: String
}

"""An edge in a connection."""
type UserProfileEdge {
  """The item at the end of the edge."""
  node: UserProfile!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserProfileOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  noContact_ASC
  noContact_DESC
  occupation_ASC
  occupation_DESC
  photo_ASC
  photo_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserProfilePreviousValues {
  createdAt: DateTime!
  id: Int!
  noContact: String
  occupation: String
  photo: String
  updatedAt: DateTime!
}

type UserProfileSubscriptionPayload {
  mutation: MutationType!
  node: UserProfile
  updatedFields: [String!]
  previousValues: UserProfilePreviousValues
}

input UserProfileSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserProfileSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserProfileSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserProfileSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserProfileWhereInput
}

input UserProfileUpdateInput {
  noContact: String
  occupation: String
  photo: String
  userId: UserUpdateOneRequiredWithoutProfileInput
}

input UserProfileUpdateManyMutationInput {
  noContact: String
  occupation: String
  photo: String
}

input UserProfileUpdateOneRequiredWithoutUserIdInput {
  create: UserProfileCreateWithoutUserIdInput
  connect: UserProfileWhereUniqueInput
  update: UserProfileUpdateWithoutUserIdDataInput
  upsert: UserProfileUpsertWithoutUserIdInput
}

input UserProfileUpdateWithoutUserIdDataInput {
  noContact: String
  occupation: String
  photo: String
}

input UserProfileUpsertWithoutUserIdInput {
  update: UserProfileUpdateWithoutUserIdDataInput!
  create: UserProfileCreateWithoutUserIdInput!
}

input UserProfileWhereInput {
  """Logical AND on all given filters."""
  AND: [UserProfileWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserProfileWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserProfileWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  noContact: String

  """All values that are not equal to given value."""
  noContact_not: String

  """All values that are contained in given list."""
  noContact_in: [String!]

  """All values that are not contained in given list."""
  noContact_not_in: [String!]

  """All values less than the given value."""
  noContact_lt: String

  """All values less than or equal the given value."""
  noContact_lte: String

  """All values greater than the given value."""
  noContact_gt: String

  """All values greater than or equal the given value."""
  noContact_gte: String

  """All values containing the given string."""
  noContact_contains: String

  """All values not containing the given string."""
  noContact_not_contains: String

  """All values starting with the given string."""
  noContact_starts_with: String

  """All values not starting with the given string."""
  noContact_not_starts_with: String

  """All values ending with the given string."""
  noContact_ends_with: String

  """All values not ending with the given string."""
  noContact_not_ends_with: String
  occupation: String

  """All values that are not equal to given value."""
  occupation_not: String

  """All values that are contained in given list."""
  occupation_in: [String!]

  """All values that are not contained in given list."""
  occupation_not_in: [String!]

  """All values less than the given value."""
  occupation_lt: String

  """All values less than or equal the given value."""
  occupation_lte: String

  """All values greater than the given value."""
  occupation_gt: String

  """All values greater than or equal the given value."""
  occupation_gte: String

  """All values containing the given string."""
  occupation_contains: String

  """All values not containing the given string."""
  occupation_not_contains: String

  """All values starting with the given string."""
  occupation_starts_with: String

  """All values not starting with the given string."""
  occupation_not_starts_with: String

  """All values ending with the given string."""
  occupation_ends_with: String

  """All values not ending with the given string."""
  occupation_not_ends_with: String
  photo: String

  """All values that are not equal to given value."""
  photo_not: String

  """All values that are contained in given list."""
  photo_in: [String!]

  """All values that are not contained in given list."""
  photo_not_in: [String!]

  """All values less than the given value."""
  photo_lt: String

  """All values less than or equal the given value."""
  photo_lte: String

  """All values greater than the given value."""
  photo_gt: String

  """All values greater than or equal the given value."""
  photo_gte: String

  """All values containing the given string."""
  photo_contains: String

  """All values not containing the given string."""
  photo_not_contains: String

  """All values starting with the given string."""
  photo_starts_with: String

  """All values not starting with the given string."""
  photo_not_starts_with: String

  """All values ending with the given string."""
  photo_ends_with: String

  """All values not ending with the given string."""
  photo_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  userId: UserWhereInput
}

input UserProfileWhereUniqueInput {
  id: Int
}

input UserScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [UserScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserScalarWhereInput!]
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  avatar: String

  """All values that are not equal to given value."""
  avatar_not: String

  """All values that are contained in given list."""
  avatar_in: [String!]

  """All values that are not contained in given list."""
  avatar_not_in: [String!]

  """All values less than the given value."""
  avatar_lt: String

  """All values less than or equal the given value."""
  avatar_lte: String

  """All values greater than the given value."""
  avatar_gt: String

  """All values greater than or equal the given value."""
  avatar_gte: String

  """All values containing the given string."""
  avatar_contains: String

  """All values not containing the given string."""
  avatar_not_contains: String

  """All values starting with the given string."""
  avatar_starts_with: String

  """All values not starting with the given string."""
  avatar_not_starts_with: String

  """All values ending with the given string."""
  avatar_ends_with: String

  """All values not ending with the given string."""
  avatar_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  deletedAt: DateTime

  """All values that are not equal to given value."""
  deletedAt_not: DateTime

  """All values that are contained in given list."""
  deletedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  deletedAt_not_in: [DateTime!]

  """All values less than the given value."""
  deletedAt_lt: DateTime

  """All values less than or equal the given value."""
  deletedAt_lte: DateTime

  """All values greater than the given value."""
  deletedAt_gt: DateTime

  """All values greater than or equal the given value."""
  deletedAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  position: String

  """All values that are not equal to given value."""
  position_not: String

  """All values that are contained in given list."""
  position_in: [String!]

  """All values that are not contained in given list."""
  position_not_in: [String!]

  """All values less than the given value."""
  position_lt: String

  """All values less than or equal the given value."""
  position_lte: String

  """All values greater than the given value."""
  position_gt: String

  """All values greater than or equal the given value."""
  position_gte: String

  """All values containing the given string."""
  position_contains: String

  """All values not containing the given string."""
  position_not_contains: String

  """All values starting with the given string."""
  position_starts_with: String

  """All values not starting with the given string."""
  position_not_starts_with: String

  """All values ending with the given string."""
  position_ends_with: String

  """All values not ending with the given string."""
  position_not_ends_with: String
  rememberToken: String

  """All values that are not equal to given value."""
  rememberToken_not: String

  """All values that are contained in given list."""
  rememberToken_in: [String!]

  """All values that are not contained in given list."""
  rememberToken_not_in: [String!]

  """All values less than the given value."""
  rememberToken_lt: String

  """All values less than or equal the given value."""
  rememberToken_lte: String

  """All values greater than the given value."""
  rememberToken_gt: String

  """All values greater than or equal the given value."""
  rememberToken_gte: String

  """All values containing the given string."""
  rememberToken_contains: String

  """All values not containing the given string."""
  rememberToken_not_contains: String

  """All values starting with the given string."""
  rememberToken_starts_with: String

  """All values not starting with the given string."""
  rememberToken_not_starts_with: String

  """All values ending with the given string."""
  rememberToken_ends_with: String

  """All values not ending with the given string."""
  rememberToken_not_ends_with: String
  roles: String

  """All values that are not equal to given value."""
  roles_not: String

  """All values that are contained in given list."""
  roles_in: [String!]

  """All values that are not contained in given list."""
  roles_not_in: [String!]

  """All values less than the given value."""
  roles_lt: String

  """All values less than or equal the given value."""
  roles_lte: String

  """All values greater than the given value."""
  roles_gt: String

  """All values greater than or equal the given value."""
  roles_gte: String

  """All values containing the given string."""
  roles_contains: String

  """All values not containing the given string."""
  roles_not_contains: String

  """All values starting with the given string."""
  roles_starts_with: String

  """All values not starting with the given string."""
  roles_not_starts_with: String

  """All values ending with the given string."""
  roles_ends_with: String

  """All values not ending with the given string."""
  roles_not_ends_with: String
  status: String

  """All values that are not equal to given value."""
  status_not: String

  """All values that are contained in given list."""
  status_in: [String!]

  """All values that are not contained in given list."""
  status_not_in: [String!]

  """All values less than the given value."""
  status_lt: String

  """All values less than or equal the given value."""
  status_lte: String

  """All values greater than the given value."""
  status_gt: String

  """All values greater than or equal the given value."""
  status_gte: String

  """All values containing the given string."""
  status_contains: String

  """All values not containing the given string."""
  status_not_contains: String

  """All values starting with the given string."""
  status_starts_with: String

  """All values not starting with the given string."""
  status_not_starts_with: String

  """All values ending with the given string."""
  status_ends_with: String

  """All values not ending with the given string."""
  status_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileUpdateOneRequiredWithoutUserIdInput
  roles_type: RoleUpdateManyWithoutUserIdInput
  logRequestBy: LogRequestUpdateManyWithoutRequestByInput
  logRequestTo: LogRequestUpdateManyWithoutRequestToInput
  appConsultation: LogRequestAppUpdateManyWithoutAppConsultationInput
}

input UserUpdateInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileUpdateOneRequiredWithoutUserIdInput
  roles_type: RoleUpdateManyWithoutUserIdInput
  logRequestBy: LogRequestUpdateManyWithoutRequestByInput
  logRequestTo: LogRequestUpdateManyWithoutRequestToInput
  appConsultation: LogRequestAppUpdateManyWithoutAppConsultationInput
}

input UserUpdateManyDataInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
}

input UserUpdateManyMutationInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
}

input UserUpdateManyWithoutRoles_typeInput {
  create: [UserCreateWithoutRoles_typeInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutRoles_typeInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutRoles_typeInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredWithoutAppConsultationInput {
  create: UserCreateWithoutAppConsultationInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutAppConsultationDataInput
  upsert: UserUpsertWithoutAppConsultationInput
}

input UserUpdateOneRequiredWithoutProfileInput {
  create: UserCreateWithoutProfileInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutProfileDataInput
  upsert: UserUpsertWithoutProfileInput
}

input UserUpdateOneWithoutLogRequestByInput {
  create: UserCreateWithoutLogRequestByInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutLogRequestByDataInput
  upsert: UserUpsertWithoutLogRequestByInput
}

input UserUpdateOneWithoutLogRequestToInput {
  create: UserCreateWithoutLogRequestToInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutLogRequestToDataInput
  upsert: UserUpsertWithoutLogRequestToInput
}

input UserUpdateWithoutAppConsultationDataInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileUpdateOneRequiredWithoutUserIdInput
  roles_type: RoleUpdateManyWithoutUserIdInput
  logRequestBy: LogRequestUpdateManyWithoutRequestByInput
  logRequestTo: LogRequestUpdateManyWithoutRequestToInput
}

input UserUpdateWithoutLogRequestByDataInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileUpdateOneRequiredWithoutUserIdInput
  roles_type: RoleUpdateManyWithoutUserIdInput
  logRequestTo: LogRequestUpdateManyWithoutRequestToInput
  appConsultation: LogRequestAppUpdateManyWithoutAppConsultationInput
}

input UserUpdateWithoutLogRequestToDataInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileUpdateOneRequiredWithoutUserIdInput
  roles_type: RoleUpdateManyWithoutUserIdInput
  logRequestBy: LogRequestUpdateManyWithoutRequestByInput
  appConsultation: LogRequestAppUpdateManyWithoutAppConsultationInput
}

input UserUpdateWithoutProfileDataInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  roles_type: RoleUpdateManyWithoutUserIdInput
  logRequestBy: LogRequestUpdateManyWithoutRequestByInput
  logRequestTo: LogRequestUpdateManyWithoutRequestToInput
  appConsultation: LogRequestAppUpdateManyWithoutAppConsultationInput
}

input UserUpdateWithoutRoles_typeDataInput {
  address: String
  avatar: String
  deletedAt: DateTime
  email: String
  name: String
  password: String
  phone: String
  position: String
  rememberToken: String
  roles: String
  status: String
  username: String
  profile: UserProfileUpdateOneRequiredWithoutUserIdInput
  logRequestBy: LogRequestUpdateManyWithoutRequestByInput
  logRequestTo: LogRequestUpdateManyWithoutRequestToInput
  appConsultation: LogRequestAppUpdateManyWithoutAppConsultationInput
}

input UserUpdateWithWhereUniqueWithoutRoles_typeInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutRoles_typeDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutAppConsultationInput {
  update: UserUpdateWithoutAppConsultationDataInput!
  create: UserCreateWithoutAppConsultationInput!
}

input UserUpsertWithoutLogRequestByInput {
  update: UserUpdateWithoutLogRequestByDataInput!
  create: UserCreateWithoutLogRequestByInput!
}

input UserUpsertWithoutLogRequestToInput {
  update: UserUpdateWithoutLogRequestToDataInput!
  create: UserCreateWithoutLogRequestToInput!
}

input UserUpsertWithoutProfileInput {
  update: UserUpdateWithoutProfileDataInput!
  create: UserCreateWithoutProfileInput!
}

input UserUpsertWithWhereUniqueWithoutRoles_typeInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutRoles_typeDataInput!
  create: UserCreateWithoutRoles_typeInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  avatar: String

  """All values that are not equal to given value."""
  avatar_not: String

  """All values that are contained in given list."""
  avatar_in: [String!]

  """All values that are not contained in given list."""
  avatar_not_in: [String!]

  """All values less than the given value."""
  avatar_lt: String

  """All values less than or equal the given value."""
  avatar_lte: String

  """All values greater than the given value."""
  avatar_gt: String

  """All values greater than or equal the given value."""
  avatar_gte: String

  """All values containing the given string."""
  avatar_contains: String

  """All values not containing the given string."""
  avatar_not_contains: String

  """All values starting with the given string."""
  avatar_starts_with: String

  """All values not starting with the given string."""
  avatar_not_starts_with: String

  """All values ending with the given string."""
  avatar_ends_with: String

  """All values not ending with the given string."""
  avatar_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  deletedAt: DateTime

  """All values that are not equal to given value."""
  deletedAt_not: DateTime

  """All values that are contained in given list."""
  deletedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  deletedAt_not_in: [DateTime!]

  """All values less than the given value."""
  deletedAt_lt: DateTime

  """All values less than or equal the given value."""
  deletedAt_lte: DateTime

  """All values greater than the given value."""
  deletedAt_gt: DateTime

  """All values greater than or equal the given value."""
  deletedAt_gte: DateTime
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  id: Int

  """All values that are not equal to given value."""
  id_not: Int

  """All values that are contained in given list."""
  id_in: [Int!]

  """All values that are not contained in given list."""
  id_not_in: [Int!]

  """All values less than the given value."""
  id_lt: Int

  """All values less than or equal the given value."""
  id_lte: Int

  """All values greater than the given value."""
  id_gt: Int

  """All values greater than or equal the given value."""
  id_gte: Int
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  position: String

  """All values that are not equal to given value."""
  position_not: String

  """All values that are contained in given list."""
  position_in: [String!]

  """All values that are not contained in given list."""
  position_not_in: [String!]

  """All values less than the given value."""
  position_lt: String

  """All values less than or equal the given value."""
  position_lte: String

  """All values greater than the given value."""
  position_gt: String

  """All values greater than or equal the given value."""
  position_gte: String

  """All values containing the given string."""
  position_contains: String

  """All values not containing the given string."""
  position_not_contains: String

  """All values starting with the given string."""
  position_starts_with: String

  """All values not starting with the given string."""
  position_not_starts_with: String

  """All values ending with the given string."""
  position_ends_with: String

  """All values not ending with the given string."""
  position_not_ends_with: String
  rememberToken: String

  """All values that are not equal to given value."""
  rememberToken_not: String

  """All values that are contained in given list."""
  rememberToken_in: [String!]

  """All values that are not contained in given list."""
  rememberToken_not_in: [String!]

  """All values less than the given value."""
  rememberToken_lt: String

  """All values less than or equal the given value."""
  rememberToken_lte: String

  """All values greater than the given value."""
  rememberToken_gt: String

  """All values greater than or equal the given value."""
  rememberToken_gte: String

  """All values containing the given string."""
  rememberToken_contains: String

  """All values not containing the given string."""
  rememberToken_not_contains: String

  """All values starting with the given string."""
  rememberToken_starts_with: String

  """All values not starting with the given string."""
  rememberToken_not_starts_with: String

  """All values ending with the given string."""
  rememberToken_ends_with: String

  """All values not ending with the given string."""
  rememberToken_not_ends_with: String
  roles: String

  """All values that are not equal to given value."""
  roles_not: String

  """All values that are contained in given list."""
  roles_in: [String!]

  """All values that are not contained in given list."""
  roles_not_in: [String!]

  """All values less than the given value."""
  roles_lt: String

  """All values less than or equal the given value."""
  roles_lte: String

  """All values greater than the given value."""
  roles_gt: String

  """All values greater than or equal the given value."""
  roles_gte: String

  """All values containing the given string."""
  roles_contains: String

  """All values not containing the given string."""
  roles_not_contains: String

  """All values starting with the given string."""
  roles_starts_with: String

  """All values not starting with the given string."""
  roles_not_starts_with: String

  """All values ending with the given string."""
  roles_ends_with: String

  """All values not ending with the given string."""
  roles_not_ends_with: String
  status: String

  """All values that are not equal to given value."""
  status_not: String

  """All values that are contained in given list."""
  status_in: [String!]

  """All values that are not contained in given list."""
  status_not_in: [String!]

  """All values less than the given value."""
  status_lt: String

  """All values less than or equal the given value."""
  status_lte: String

  """All values greater than the given value."""
  status_gt: String

  """All values greater than or equal the given value."""
  status_gte: String

  """All values containing the given string."""
  status_contains: String

  """All values not containing the given string."""
  status_not_contains: String

  """All values starting with the given string."""
  status_starts_with: String

  """All values not starting with the given string."""
  status_not_starts_with: String

  """All values ending with the given string."""
  status_ends_with: String

  """All values not ending with the given string."""
  status_not_ends_with: String
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  profile: UserProfileWhereInput
  roles_type_every: RoleWhereInput
  roles_type_some: RoleWhereInput
  roles_type_none: RoleWhereInput
  logRequestBy_every: LogRequestWhereInput
  logRequestBy_some: LogRequestWhereInput
  logRequestBy_none: LogRequestWhereInput
  logRequestTo_every: LogRequestWhereInput
  logRequestTo_some: LogRequestWhereInput
  logRequestTo_none: LogRequestWhereInput
  appConsultation_every: LogRequestAppWhereInput
  appConsultation_some: LogRequestAppWhereInput
  appConsultation_none: LogRequestAppWhereInput
}

input UserWhereUniqueInput {
  id: Int
}
